Log saved to complex-model/installation.log
2024-11-28 09:48:58.378402
Destroying database sqlite:////Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/var/instance/invenio.db
Sqlite database has not been initialised
2024-11-28 09:49:01.427676
Creating all tables!

Created all tables!
2024-11-28 09:49:03.770674

2024-11-28 09:49:07.208693

2024-11-28 09:49:11.444776
Location default ./simple-server/files as default True stored in database
2024-11-28 09:49:14.229931
User created successfully.
{'email': 'test@test.com', 'password': '****', 'active': True, 'confirmed_at': datetime.datetime(2024, 11, 28, 8, 49, 14, 911639)}
Waiting for server to start
[2024-11-28 09:49:19,332] WARNING in ext: JSONSCHEMAS_HOST is set to localhost
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:751: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  parts = parts or [ast.Str("")]

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:748: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  _convert(elem) if is_dynamic else ast.Str(s=elem)

/opt/homebrew/Cellar/python@3.12/3.12.7_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:587: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead
  return Constant(*args, **kwargs)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:755: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  if isinstance(p, ast.Str) and isinstance(ret[-1], ast.Str):

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead
  ret[-1] = ast.Str(ret[-1].s + p.s)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  ret[-1] = ast.Str(ret[-1].s + p.s)

[2024-11-28 09:49:19,986] DEBUG in ext: Flask-DebugToolbar extension not installed.
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/oarepo_runtime/services/generators.py:5: DeprecationWarning: oarepo_runtime.services.generators is deprecated, import RecordOwners from oarepo_runtime.services.permissions
  warnings.warn(

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_caching/__init__.py:145: DeprecationWarning: Using the initialization functions in flask_caching.backend is deprecated.  Use the a full path to backend classes directly.
  self._set_cache(app, config)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/scaffold.py:50: DeprecationWarning: 'before_app_first_request' is deprecated and will be removed in Flask 2.3. Use 'record_once' instead to run setup code when registering the blueprint.
  return f(self, *args, **kwargs)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_config/default.py:77: UserWarning: Set configuration variable SECRET_KEY with random string
  warnings.warn(

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RDMRecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RDMFileRecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RDMMediaFileRecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.PageModelVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.PageListVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.ComplexModelMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RecordMetadataVersion->records_metadata_version, primary key column 'records_metadata_version.transaction_id' is being combined with distinct primary key column 'records_metadata_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RecordMetadataVersion.transaction' will copy column transaction.id to column records_metadata_version.transaction_id, which conflicts with relationship(s): 'RecordMetadataVersion.transaction' (copies transaction.id to records_metadata_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RDMRecordMetadataVersion->rdm_records_metadata_version, primary key column 'rdm_records_metadata_version.transaction_id' is being combined with distinct primary key column 'rdm_records_metadata_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RDMRecordMetadataVersion.transaction' will copy column transaction.id to column rdm_records_metadata_version.transaction_id, which conflicts with relationship(s): 'RDMRecordMetadataVersion.transaction' (copies transaction.id to rdm_records_metadata_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RDMRecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RDMFileRecordMetadataVersion->rdm_records_files_version, primary key column 'rdm_records_files_version.transaction_id' is being combined with distinct primary key column 'rdm_records_files_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RDMFileRecordMetadataVersion.transaction' will copy column transaction.id to column rdm_records_files_version.transaction_id, which conflicts with relationship(s): 'RDMFileRecordMetadataVersion.transaction' (copies transaction.id to rdm_records_files_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RDMFileRecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RDMMediaFileRecordMetadataVersion->rdm_records_media_files_version, primary key column 'rdm_records_media_files_version.transaction_id' is being combined with distinct primary key column 'rdm_records_media_files_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RDMMediaFileRecordMetadataVersion.transaction' will copy column transaction.id to column rdm_records_media_files_version.transaction_id, which conflicts with relationship(s): 'RDMMediaFileRecordMetadataVersion.transaction' (copies transaction.id to rdm_records_media_files_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RDMMediaFileRecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class PageModelVersion->pages_page_version, primary key column 'pages_page_version.transaction_id' is being combined with distinct primary key column 'pages_page_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'PageModelVersion.transaction' will copy column transaction.id to column pages_page_version.transaction_id, which conflicts with relationship(s): 'PageModelVersion.transaction' (copies transaction.id to pages_page_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'PageModelVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class PageListVersion->pages_pagelist_version, primary key column 'pages_pagelist_version.transaction_id' is being combined with distinct primary key column 'pages_pagelist_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'PageListVersion.transaction' will copy column transaction.id to column pages_pagelist_version.transaction_id, which conflicts with relationship(s): 'PageListVersion.transaction' (copies transaction.id to pages_pagelist_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'PageListVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class ComplexModelMetadataVersion->complex_model_metadata_version, primary key column 'complex_model_metadata_version.transaction_id' is being combined with distinct primary key column 'complex_model_metadata_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'ComplexModelMetadataVersion.transaction' will copy column transaction.id to column complex_model_metadata_version.transaction_id, which conflicts with relationship(s): 'ComplexModelMetadataVersion.transaction' (copies transaction.id to complex_model_metadata_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'ComplexModelMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_oaiserver/ext.py:169: UserWarning: Please specify the OAISERVER_ID_PREFIX configuration.default value is: oai:Alzbetas-MacBook-Pro.local:
  warnings.warn(

[2024-11-28 09:49:20,268] WARNING in ext: JSONSCHEMAS_HOST is set to localhost
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:748: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  _convert(elem) if is_dynamic else ast.Str(s=elem)

/opt/homebrew/Cellar/python@3.12/3.12.7_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:587: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead
  return Constant(*args, **kwargs)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:755: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  if isinstance(p, ast.Str) and isinstance(ret[-1], ast.Str):

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead
  ret[-1] = ast.Str(ret[-1].s + p.s)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  ret[-1] = ast.Str(ret[-1].s + p.s)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:751: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  parts = parts or [ast.Str("")]

[2024-11-28 09:49:20,279] DEBUG in ext: Flask-DebugToolbar extension not installed.
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_rest/ext.py:30: FutureWarning: CSRF validation will be enabled by default in the version 1.3.x
  self.init_app(app)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_caching/__init__.py:145: DeprecationWarning: Using the initialization functions in flask_caching.backend is deprecated.  Use the a full path to backend classes directly.
  self._set_cache(app, config)

2024-11-28 09:49:19.994572
 * Debug mode: on
[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on https://127.0.0.1:5000
[33mPress CTRL+C to quit[0m
 * Restarting with watchdog (fsevents)
[2024-11-28 09:49:21,532] WARNING in ext: JSONSCHEMAS_HOST is set to localhost
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:751: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  parts = parts or [ast.Str("")]

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:748: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  _convert(elem) if is_dynamic else ast.Str(s=elem)

/opt/homebrew/Cellar/python@3.12/3.12.7_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:587: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead
  return Constant(*args, **kwargs)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:755: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  if isinstance(p, ast.Str) and isinstance(ret[-1], ast.Str):

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead
  ret[-1] = ast.Str(ret[-1].s + p.s)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  ret[-1] = ast.Str(ret[-1].s + p.s)

[2024-11-28 09:49:22,023] DEBUG in ext: Flask-DebugToolbar extension not installed.
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_oaiserver/ext.py:169: UserWarning: Please specify the OAISERVER_ID_PREFIX configuration.default value is: oai:Alzbetas-MacBook-Pro.local:
  warnings.warn(

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_babelex/__init__.py:20: DeprecationWarning: '_request_ctx_stack' is deprecated and will be removed in Flask 2.3.
  from flask import _request_ctx_stack

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/scaffold.py:50: DeprecationWarning: 'before_app_first_request' is deprecated and will be removed in Flask 2.3. Use 'record_once' instead to run setup code when registering the blueprint.
  return f(self, *args, **kwargs)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_caching/__init__.py:145: DeprecationWarning: Using the initialization functions in flask_caching.backend is deprecated.  Use the a full path to backend classes directly.
  self._set_cache(app, config)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/scaffold.py:50: DeprecationWarning: 'before_first_request' is deprecated and will be removed in Flask 2.3. Run setup code while creating the application instead.
  return f(self, *args, **kwargs)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_admin/contrib/__init__.py:2: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('flask_admin.contrib')`.
Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages
  __import__('pkg_resources').declare_namespace(__name__)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/pkg_resources/__init__.py:2563: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('flask_admin')`.
Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages
  declare_namespace(parent)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/oarepo_runtime/services/generators.py:5: DeprecationWarning: oarepo_runtime.services.generators is deprecated, import RecordOwners from oarepo_runtime.services.permissions
  warnings.warn(

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_config/default.py:77: UserWarning: Set configuration variable SECRET_KEY with random string
  warnings.warn(

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_oaiserver/ext.py:169: UserWarning: Please specify the OAISERVER_ID_PREFIX configuration.default value is: oai:Alzbetas-MacBook-Pro.local:
  warnings.warn(

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_caching/__init__.py:145: DeprecationWarning: Using the initialization functions in flask_caching.backend is deprecated.  Use the a full path to backend classes directly.
  self._set_cache(app, config)

[2024-11-28 09:49:22,435] WARNING in ext: JSONSCHEMAS_HOST is set to localhost
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:748: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  _convert(elem) if is_dynamic else ast.Str(s=elem)

/opt/homebrew/Cellar/python@3.12/3.12.7_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:587: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead
  return Constant(*args, **kwargs)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:755: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  if isinstance(p, ast.Str) and isinstance(ret[-1], ast.Str):

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead
  ret[-1] = ast.Str(ret[-1].s + p.s)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  ret[-1] = ast.Str(ret[-1].s + p.s)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:751: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  parts = parts or [ast.Str("")]

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_rest/ext.py:30: FutureWarning: CSRF validation will be enabled by default in the version 1.3.x
  self.init_app(app)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RDMRecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RDMFileRecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RDMMediaFileRecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.PageModelVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.PageListVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.ComplexModelMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RecordMetadataVersion->records_metadata_version, primary key column 'records_metadata_version.transaction_id' is being combined with distinct primary key column 'records_metadata_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RecordMetadataVersion.transaction' will copy column transaction.id to column records_metadata_version.transaction_id, which conflicts with relationship(s): 'RecordMetadataVersion.transaction' (copies transaction.id to records_metadata_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RDMRecordMetadataVersion->rdm_records_metadata_version, primary key column 'rdm_records_metadata_version.transaction_id' is being combined with distinct primary key column 'rdm_records_metadata_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RDMRecordMetadataVersion.transaction' will copy column transaction.id to column rdm_records_metadata_version.transaction_id, which conflicts with relationship(s): 'RDMRecordMetadataVersion.transaction' (copies transaction.id to rdm_records_metadata_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RDMRecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RDMFileRecordMetadataVersion->rdm_records_files_version, primary key column 'rdm_records_files_version.transaction_id' is being combined with distinct primary key column 'rdm_records_files_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RDMFileRecordMetadataVersion.transaction' will copy column transaction.id to column rdm_records_files_version.transaction_id, which conflicts with relationship(s): 'RDMFileRecordMetadataVersion.transaction' (copies transaction.id to rdm_records_files_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RDMFileRecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RDMMediaFileRecordMetadataVersion->rdm_records_media_files_version, primary key column 'rdm_records_media_files_version.transaction_id' is being combined with distinct primary key column 'rdm_records_media_files_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RDMMediaFileRecordMetadataVersion.transaction' will copy column transaction.id to column rdm_records_media_files_version.transaction_id, which conflicts with relationship(s): 'RDMMediaFileRecordMetadataVersion.transaction' (copies transaction.id to rdm_records_media_files_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RDMMediaFileRecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class PageModelVersion->pages_page_version, primary key column 'pages_page_version.transaction_id' is being combined with distinct primary key column 'pages_page_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'PageModelVersion.transaction' will copy column transaction.id to column pages_page_version.transaction_id, which conflicts with relationship(s): 'PageModelVersion.transaction' (copies transaction.id to pages_page_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'PageModelVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class PageListVersion->pages_pagelist_version, primary key column 'pages_pagelist_version.transaction_id' is being combined with distinct primary key column 'pages_pagelist_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'PageListVersion.transaction' will copy column transaction.id to column pages_pagelist_version.transaction_id, which conflicts with relationship(s): 'PageListVersion.transaction' (copies transaction.id to pages_pagelist_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'PageListVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class ComplexModelMetadataVersion->complex_model_metadata_version, primary key column 'complex_model_metadata_version.transaction_id' is being combined with distinct primary key column 'complex_model_metadata_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'ComplexModelMetadataVersion.transaction' will copy column transaction.id to column complex_model_metadata_version.transaction_id, which conflicts with relationship(s): 'ComplexModelMetadataVersion.transaction' (copies transaction.id to complex_model_metadata_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'ComplexModelMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

[2024-11-28 09:49:22,533] DEBUG in ext: Flask-DebugToolbar extension not installed.
 * Debugger is active!
 * Debugger PIN: 899-457-799
metadata:
  d: '1987-08-17'
  dt: '2022-01-13T18:20:59.885839+01:00'
  ed: '2017'
  edi: 1995/2012
  edt: '2018-05-18'
  edti: 1970-04-05/1981-11
  f: 6.0
  ht: <div>Enter participant purpose never degree light significant certainly.</div><p>Yourself
    true model nor south pretty.</p><p>Region similar tonight lose.</p><p>Suggest
    outside table can rock may conference remember.</p>
  i: 822
  kw: Lawyer lose recent Democrat board mean analysis successful.
  t: '15:02:19'
  tx: Free lose late.
---
metadata:
  d: '1995-04-03'
  dt: '2023-05-10T21:16:18.280460+07:00'
  ed: 1999-08
  edi: 1982-06/1984
  edt: '1994-04-02'
  edti: 1999/2009-12
  f: -1.8
  ht: <div>Into anyone letter local wrong successful decide shoulder.</div><p>Decision
    its reason bag put.</p><span>Low why live opportunity view build.</span><div>Onto
    raise debate section be opportunity.</div>
  i: 8596
  kw: Degree evidence act old performance still trade director.
  t: '16:48:24'
  tx: Fill night up source seem hard commercial.
---
metadata:
  d: '2006-07-28'
  dt: '2021-05-17T04:40:53.697958+01:00'
  ed: '1971-10-03'
  edi: 1986/1991-02
  edt: '2000-05-05'
  edti: 1987-06/2014-08
  f: -3.3
  ht: <span>Off yard receive fall available.</span><div>Serve draw event drive reduce
    about.</div><p>Natural know whom mother green provide early claim.</p><div>Three
    difficult method certainly available might.</div>
  i: 7047
  kw: Single produce position foot begin TV car.
  t: '21:30:17'
  tx: Fire stop key deal operation.
---
metadata:
  d: '1988-05-02'
  dt: '2022-02-09T17:41:00.985277+01:00'
  ed: '2011-11-23'
  edi: 2005/2014
  edt: 1986-09
  edti: 1975/2016-12
  f: 0.4
  ht: <p>Matter open above positive occur nature.</p><div>Evening manage policy their
    none.</div><div>Probably capital talk official.</div><div>Fast store picture ask.</div>
  i: 6357
  kw: Science successful way item assume ask never.
  t: 09:57:11
  tx: Argue difficult exist treat amount senior leg level.
---
metadata:
  d: '2000-12-20'
  dt: '2022-06-30T20:34:55.469832-04:00'
  ed: '2009-05-06'
  edi: 1980-10/1992-10-24
  edt: '1982-06-12'
  edti: 1974/2007-04-28
  f: 5.9
  ht: <p>Keep mean fly she table agree area financial.</p><p>Entire think fund likely.</p><div>Reason
    agree adult ball every boy involve success.</div><span>Ready bar himself live
    item.</span>
  i: 4084
  kw: Forward radio detail quickly choice than yes.
  t: 04:32:12
  tx: Whom ahead measure tonight radio.
---
metadata:
  d: '2004-06-13'
  dt: '2022-12-28T15:26:03.023735+05:30'
  ed: 2010-12
  edi: 1993-01/2013
  edt: '2012'
  edti: 2000-07/2018-03
  f: -3.0
  ht: <p>Toward focus meet late detail read each senior.</p><div>Possible sort discover
    bit.</div><div>Around be pull.</div><span>Memory kid father prevent its.</span>
  i: 3196
  kw: New theory board special hold least.
  t: '13:10:08'
  tx: Woman that happen.
---
metadata:
  d: '2015-03-04'
  dt: '2023-04-17T05:07:34.453682+04:00'
  ed: '2000-06-08'
  edi: 1980-12-02/1994
  edt: 2001-01
  edti: 1970-08-11/1994-08
  f: -3.2
  ht: <p>Available save hundred civil.</p><span>Someone kind western require draw
    general international.</span><div>Nice inside audience low.</div><p>Beat mean
    now add his.</p>
  i: 1653
  kw: Approach budget though one.
  t: '20:30:52'
  tx: Spend claim because sit mission no.
---
metadata:
  d: '1996-03-27'
  dt: '2024-10-13T11:39:15.609256+03:00'
  ed: 2023-05
  edi: 1979-05-02/2001-10-20
  edt: '2020-10-26'
  edti: 1974-02/2019
  f: -0.6
  ht: <span>Serve if technology car smile sound possible.</span><span>Fight win feel
    available.</span><p>After economy trouble never.</p><p>Black worry base course
    camera go increase ever.</p>
  i: 7248
  kw: Will child unit rise.
  t: '15:30:47'
  tx: Need some politics.
---
metadata:
  d: '1997-12-27'
  dt: '2023-12-26T15:08:58.867282+04:00'
  ed: '1971-02-23'
  edi: 1999/2004-12-27
  edt: '2009'
  edti: 2002-10-15/2013-09-27
  f: 7.5
  ht: <span>Deal prove some past because ask area than.</span><p>Play use final approach
    entire.</p><p>Fall so allow director social let.</p><div>People sing woman election
    customer.</div>
  i: 9833
  kw: Spring same fear north.
  t: '21:25:37'
  tx: Tax attack think government indicate.
---
metadata:
  d: '2009-02-08'
  dt: '2020-08-11T11:16:46.144713+03:00'
  ed: 2015-10
  edi: 1990-12-04/2000-08
  edt: '1982'
  edti: 2015-11-14/2018
  f: 3.2
  ht: <span>Develop usually compare what.</span><span>Fill inside old again door.</span><p>Grow
    star free medical result until.</p><div>Prepare evening name those force.</div>
  i: 5716
  kw: Under ask soldier upon wonder way case.
  t: '21:37:22'
  tx: Movie finally network drop section.
============================= test session starts ==============================
platform darwin -- Python 3.12.7, pytest-8.3.3, pluggy-1.5.0 -- /Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-tests/bin/python3.12
cachedir: .pytest_cache
rootdir: /Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder
configfile: setup.cfg
plugins: anyio-4.6.2.post1
collecting ... collected 1 item

tests-model/test_running_server.py::test_running_server 127.0.0.1 - - [28/Nov/2024 09:49:23] "[32mGET /api/complex-model HTTP/1.1[0m" 308 -
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/__init__.py:302: DeprecationWarning: '_app_ctx_stack' is deprecated and will be removed in Flask 2.3. Use 'g' to store data, or 'app_ctx' to access the current context.
  queries = _app_ctx_stack.top.sqlalchemy_queries

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/__init__.py:304: DeprecationWarning: '_app_ctx_stack' is deprecated and will be removed in Flask 2.3. Use 'g' to store data, or 'app_ctx' to access the current context.
  queries = _app_ctx_stack.top.sqlalchemy_queries = []

127.0.0.1 - - [28/Nov/2024 09:49:23] "GET /api/complex-model/ HTTP/1.1" 200 -
127.0.0.1 - - [28/Nov/2024 09:49:23] "[32mPOST /api/complex-model HTTP/1.1[0m" 308 -
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy/sql/schema.py:2783: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  return util.wrap_callable(lambda ctx: fn(), fn)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/models.py:44: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  target.updated = datetime.utcnow()

127.0.0.1 - - [28/Nov/2024 09:49:23] "[35m[1mPOST /api/complex-model/ HTTP/1.1[0m" 500 -
Traceback (most recent call last):
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2552, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/middleware/dispatcher.py", line 78, in __call__
    return app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2552, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2532, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2529, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 1825, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 1823, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 1799, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/resources.py", line 65, in view
    return view_meth()
           ^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/content_negotiation.py", line 116, in inner_content_negotiation
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py", line 51, in inner
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py", line 90, in inner
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/responses.py", line 39, in inner
    res = f(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/resources/records/resource.py", line 93, in create
    item = self.service.create(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 376, in inner
    res = f(self, *args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_drafts_resources/services/records/service.py", line 309, in create
    res = self._create(
          ^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 380, in inner
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/records/service.py", line 365, in _create
    uow.register(RecordCommitOp(record, self.indexer))
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 349, in register
    op.on_register(self)
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 176, in on_register
    self._record.commit()
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py", line 454, in commit
    json = self._validate(format_checker=format_checker, validator=validator)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py", line 194, in _validate
    _records_state.validate(
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/ext.py", line 67, in validate
    return validate(data, schema, cls=validator_cls, resolver=resolver, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/jsonschema/validators.py", line 1332, in validate
    raise error
jsonschema.exceptions.ValidationError: Additional properties are not allowed ('d', 'dt', 'ed', 'edi', 'edt', 'edti', 'f', 'ht', 'i', 'kw', 't', 'tx' were unexpected)

Failed validating 'additionalProperties' in schema['properties']['metadata']:
    {'type': 'object',
     'description': 'Resource metadata.',
     'additionalProperties': False,
     'properties': {'resource_type': {'$ref': 'local://records/definitions-v2.0.0.json#/resource_type'},
                    'creators': {'description': 'Creators of the resource.',
                                 'type': 'array',
                                 'items': {'type': 'object',
                                           'additionalProperties': False,
                                           'properties': {'person_or_org': {'$ref': 'local://records/definitions-v2.0.0.json#/person_or_org'},
                                                          'role': {'$ref': 'local://records/definitions-v2.0.0.json#/role'},
                                                          'affiliations': {'$ref': 'local://records/definitions-v2.0.0.json#/affiliations'}}}},
                    'title': {'description': 'Primary title of the record.',
                              'type': 'string'},
                    'additional_titles': {'description': 'Additional '
                                                         'record titles.',
                                          'type': 'array',
                                          'items': {'type': 'object',
                                                    'additionalProperties': False,
                                                    'properties': {'title': {'description': 'Additional '
                                                                                            'title '
                                                                                            'of '
                                                                                            'the '
                                                                                            'record.',
                                                                             'type': 'string'},
                                                                   'type': {'$ref': 'local://records/definitions-v2.0.0.json#/title_type'},
                                                                   'lang': {'$ref': 'local://records/definitions-v2.0.0.json#/language'}}}},
                    'publisher': {'type': 'string'},
                    'publication_date': {'description': 'Record '
                                                        'publication date '
                                                        '(EDTF level 0 '
                                                        'format).',
                                         'type': 'string'},
                    'subjects': {'$ref': 'local://records/definitions-v2.0.0.json#/subjects'},
                    'contributors': {'description': 'Contributors in order '
                                                    'of importance.',
                                     'type': 'array',
                                     'items': {'type': 'object',
                                               'additionalProperties': False,
                                               'properties': {'person_or_org': {'$ref': 'local://records/definitions-v2.0.0.json#/person_or_org'},
                                                              'role': {'$ref': 'local://records/definitions-v2.0.0.json#/role'},
                                                              'affiliations': {'$ref': 'local://records/definitions-v2.0.0.json#/affiliations'}}}},
                    'dates': {'description': 'Date, datetime or date '
                                             'interval.',
                              'type': 'array',
                              'items': {'type': 'object',
                                        'additionalProperties': False,
                                        'properties': {'date': {'description': 'Date, '
                                                                               'datetime '
                                                                               'or '
                                                                               'date '
                                                                               'interval '
                                                                               'in '
                                                                               'EDTF '
                                                                               'level '
                                                                               '0 '
                                                                               'format',
                                                                'type': 'string'},
                                                       'type': {'$ref': 'local://records/definitions-v2.0.0.json#/date_type'},
                                                       'description': {'description': 'Description '
                                                                                      'of '
                                                                                      'the '
                                                                                      'date, '
                                                                                      'datetime '
                                                                                      'or '
                                                                                      'date '
                                                                                      'interval '
                                                                                      'e.g. '
                                                                                      "'Accepted' "
                                                                                      'or '
                                                                                      "'Available' "
                                                                                      '(CV).',
                                                                       'type': 'string'}}}},
                    'languages': {'description': 'The primary languages of '
                                                 'the resource. ISO 639-3 '
                                                 'language code.',
                                  'type': 'array',
                                  'items': {'$ref': 'local://records/definitions-v2.0.0.json#/language'}},
                    'identifiers': {'description': 'Alternate identifiers '
                                                   'for the record.',
                                    'type': 'array',
                                    'items': {'$ref': 'local://definitions-v1.0.0.json#/identifiers_with_scheme'},
                                    'uniqueItems': True},
                    'related_identifiers': {'type': 'array',
                                            'items': {'type': 'object',
                                                      'additionalProperties': False,
                                                      'properties': {'identifier': {'$ref': 'local://definitions-v1.0.0.json#/identifier'},
                                                                     'scheme': {'$ref': 'local://definitions-v1.0.0.json#/scheme'},
                                                                     'relation_type': {'$ref': 'local://records/definitions-v2.0.0.json#/relation_type'},
                                                                     'resource_type': {'$ref': 'local://records/definitions-v2.0.0.json#/resource_type'}}}},
                    'sizes': {'type': 'array', 'items': {'type': 'string'}},
                    'formats': {'type': 'array',
                                'items': {'type': 'string'}},
                    'version': {'description': 'Record version tag.',
                                'type': 'string'},
                    'rights': {'description': 'Any license or copyright '
                                              'information for this '
                                              'resource.',
                               'type': 'array',
                               'items': {'type': 'object',
                                         'additionalProperties': False,
                                         'properties': {'id': {'$ref': 'local://definitions-v1.0.0.json#/identifier'},
                                                        'title': {'description': 'The '
                                                                                 'license '
                                                                                 'name '
                                                                                 'or '
                                                                                 'license '
                                                                                 'itself. '
                                                                                 'Free '
                                                                                 'text.',
                                                                  'type': 'object'},
                                                        'description': {'description': 'The '
                                                                                       'license '
                                                                                       'description '
                                                                                       'Free '
                                                                                       'text.',
                                                                        'type': 'object'},
                                                        'link': {'type': 'string',
                                                                 'format': 'uri'}}}},
                    'description': {'description': 'Description for record '
                                                   '(may contain HTML).',
                                    'type': 'string'},
                    'additional_descriptions': {'type': 'array',
                                                'items': {'type': 'object',
                                                          'additionalProperties': False,
                                                          'properties': {'description': {'description': 'Description '
                                                                                                        'for '
                                                                                                        'record.',
                                                                                         'type': 'string'},
                                                                         'type': {'$ref': 'local://records/definitions-v2.0.0.json#/description_type'},
                                                                         'lang': {'$ref': 'local://records/definitions-v2.0.0.json#/language'}}}},
                    'locations': {'description': 'Geographical locations '
                                                 'relevant to this record.',
                                  '$comment': 'This part of the schema is '
                                              'modelled on GeoJSON, but '
                                              'without the scope to embed '
                                              'arbitrary metadata.\n'
                                              '\n'
                                              'We nest `features` within '
                                              '`locations` to give scope '
                                              'later to say something '
                                              'about the locations as a '
                                              'whole.',
                                  'type': 'object',
                                  'additionalProperties': False,
                                  'properties': {'features': {'type': 'array',
                                                              'minItems': 1,
                                                              'items': {'allOf': [{'type': 'object',
                                                                                   'additionalProperties': False,
                                                                                   'properties': {'geometry': {'allOf': [{'$ref': 'local://records/definitions-v2.0.0.json#/GeoJSON-Geometry'},
                                                                                                                         {'$comment': 'Bounding '
                                                                                                                                      'boxes '
                                                                                                                                      '(`bbox`) '
                                                                                                                                      'are '
                                                                                                                                      'forbidden '
                                                                                                                                      'on '
                                                                                                                                      'our '
                                                                                                                                      'geometries, '
                                                                                                                                      'even '
                                                                                                                                      'though '
                                                                                                                                      "they're "
                                                                                                                                      'allowed '
                                                                                                                                      'on '
                                                                                                                                      'GeoJSON '
                                                                                                                                      'geometries',
                                                                                                                          'properties': {'type': {},
                                                                                                                                         'coordinates': {}},
                                                                                                                          'additionalProperties': False}]},
                                                                                                  'identifiers': {'type': 'array',
                                                                                                                  'items': {'$ref': 'local://definitions-v1.0.0.json#/identifiers_with_scheme'},
                                                                                                                  'uniqueItems': True},
                                                                                                  'place': {'description': 'Place '
                                                                                                                           'of '
                                                                                                                           'the '
                                                                                                                           'location',
                                                                                                            'type': 'string',
                                                                                                            'minLength': 1},
                                                                                                  'description': {'description': 'Description '
                                                                                                                                 'of '
                                                                                                                                 'the '
                                                                                                                                 'location',
                                                                                                                  'type': 'string',
                                                                                                                  'minLength': 1}}}]}}}},
                    'funding': {'type': 'array',
                                'items': {'type': 'object',
                                          'additionalProperties': False,
                                          'properties': {'funder': {'type': 'object',
                                                                    'additionalProperties': False,
                                                                    'properties': {'name': {'type': 'string'},
                                                                                   'id': {'$ref': 'local://definitions-v1.0.0.json#/identifier'}}},
                                                         'award': {'type': 'object',
                                                                   'additionalProperties': False,
                                                                   'properties': {'title': {'type': 'object'},
                                                                                  'number': {'type': 'string'},
                                                                                  'id': {'$ref': 'local://definitions-v1.0.0.json#/identifier'},
                                                                                  'identifiers': {'type': 'array',
                                                                                                  'items': {'$ref': 'local://definitions-v1.0.0.json#/identifiers_with_scheme'}}}}}}},
                    'references': {'type': 'array',
                                   'minItems': 0,
                                   'items': {'type': 'object',
                                             'additionalProperties': False,
                                             'properties': {'reference': {'type': 'string',
                                                                          'description': 'A '
                                                                                         'reference '
                                                                                         'string.'},
                                                            'identifier': {'$ref': 'local://definitions-v1.0.0.json#/identifier'},
                                                            'scheme': {'$ref': 'local://definitions-v1.0.0.json#/scheme'}}}}}}

On instance['metadata']:
    {'d': '1987-08-17',
     'dt': '2022-01-13T18:20:59.885839+01:00',
     'ed': '2017',
     'edi': '1995/2012',
     'edt': '2018-05-18',
     'edti': '1970-04-05/1981-11',
     'f': 6.0,
     'ht': '<div>Enter participant purpose never degree light significant '
           'certainly.</div><p>Yourself true model nor south '
           'pretty.</p><p>Region similar tonight lose.</p><p>Suggest '
           'outside table can rock may conference remember.</p>',
     'i': 822,
     'kw': 'Lawyer lose recent Democrat board mean analysis successful.',
     't': '15:02:19',
     'tx': 'Free lose late.'}
FAILED           [100%]

=================================== FAILURES ===================================
_____________________________ test_running_server ______________________________

self = <Response [500]>, kwargs = {}

    def json(self, **kwargs):
        r"""Returns the json-encoded content of a response, if any.
    
        :param \*\*kwargs: Optional arguments that ``json.loads`` takes.
        :raises requests.exceptions.JSONDecodeError: If the response body does not
            contain valid json.
        """
    
        if not self.encoding and self.content and len(self.content) > 3:
            # No encoding set. JSON RFC 4627 section 3 states we should expect
            # UTF-8, -16 or -32. Detect which one to use; If the detection or
            # decoding fails, fall back to `self.text` (using charset_normalizer to make
            # a best guess).
            encoding = guess_json_utf(self.content)
            if encoding is not None:
                try:
                    return complexjson.loads(self.content.decode(encoding), **kwargs)
                except UnicodeDecodeError:
                    # Wrong UTF codec detected; usually because it's not UTF-8
                    # but some other 8-bit codec.  This is an RFC violation,
                    # and the server didn't bother to tell us what codec *was*
                    # used.
                    pass
                except JSONDecodeError as e:
                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
    
        try:
>           return complexjson.loads(self.text, **kwargs)

.venv-tests/lib/python3.12/site-packages/requests/models.py:974: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/homebrew/Cellar/python@3.12/3.12.7_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py:346: in loads
    return _default_decoder.decode(s)
/opt/homebrew/Cellar/python@3.12/3.12.7_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py:337: in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <json.decoder.JSONDecoder object at 0x10375d940>
s = '<!doctype html>\n<html lang=en>\n  <head>\n    <title>jsonschema.exceptions.ValidationError: Additional properties are not allowed (\'d\', \'dt\', \'ed\', \'edi\', \'edt\', \'edti\', \'f\', \'ht\', \'i\', \'kw\', \'t\', \'tx\' were unexpected)\n\nFailed validating \'additionalProperties\' in schema[\'properties\'][\'metadata\']:\n    {\'type\': \'object\',\n     \'description\': \'Resource metadata.\',\n     \'additionalProperties\': False,\n     \'properties\': {\'resource_type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/resource_type\'},\n                    \'creators\': {\'description\': \'Creators of the resource.\',\n                                 \'type\': \'array\',\n                                 \'items\': {\'type\': \'object\',\n                                           \'additionalProperties\': False,\n                                           \'properties\': {\'person_or_org\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/person_or_org\'},\n                                                          \'role\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/role\'},\n                                                          \'affiliations\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/affiliations\'}}}},\n                    \'title\': {\'description\': \'Primary title of the record.\',\n                              \'type\': \'string\'},\n                    \'additional_titles\': {\'description\': \'Additional \'\n                                                         \'record titles.\',\n                                          \'type\': \'array\',\n                                          \'items\': {\'type\': \'object\',\n                                                    \'additionalProperties\': False,\n                                                    \'properties\': {\'title\': {\'description\': \'Additional \'\n                                                                                            \'title \'\n                                                                                            \'of \'\n                                                                                            \'the \'\n                                                                                            \'record.\',\n                                                                             \'type\': \'string\'},\n                                                                   \'type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/title_type\'},\n                                                                   \'lang\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/language\'}}}},\n                    \'publisher\': {\'type\': \'string\'},\n                    \'publication_date\': {\'description\': \'Record \'\n                                                        \'publication date \'\n                                                        \'(EDTF level 0 \'\n                                                        \'format).\',\n                                         \'type\': \'string\'},\n                    \'subjects\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/subjects\'},\n                    \'contributors\': {\'description\': \'Contributors in order \'\n                                                    \'of importance.\',\n                                     \'type\': \'array\',\n                                     \'items\': {\'type\': \'object\',\n                                               \'additionalProperties\': False,\n                                               \'properties\': {\'person_or_org\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/person_or_org\'},\n                                                              \'role\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/role\'},\n                                                              \'affiliations\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/affiliations\'}}}},\n                    \'dates\': {\'description\': \'Date, datetime or date \'\n                                             \'interval.\',\n                              \'type\': \'array\',\n                              \'items\': {\'type\': \'object\',\n                                        \'additionalProperties\': False,\n                                        \'properties\': {\'date\': {\'description\': \'Date, \'\n                                                                               \'datetime \'\n                                                                               \'or \'\n                                                                               \'date \'\n                                                                               \'interval \'\n                                                                               \'in \'\n                                                                               \'EDTF \'\n                                                                               \'level \'\n                                                                               \'0 \'\n                                                                               \'format\',\n                                                                \'type\': \'string\'},\n                                                       \'type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/date_type\'},\n                                                       \'description\': {\'description\': \'Description \'\n                                                                                      \'of \'\n                                                                                      \'the \'\n                                                                                      \'date, \'\n                                                                                      \'datetime \'\n                                                                                      \'or \'\n                                                                                      \'date \'\n                                                                                      \'interval \'\n                                                                                      \'e.g. \'\n                                                                                      "\'Accepted\' "\n                                                                                      \'or \'\n                                                                                      "\'Available\' "\n                                                                                      \'(CV).\',\n                                                                       \'type\': \'string\'}}}},\n                    \'languages\': {\'description\': \'The primary languages of \'\n                                                 \'the resource. ISO 639-3 \'\n                                                 \'language code.\',\n                                  \'type\': \'array\',\n                                  \'items\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/language\'}},\n                    \'identifiers\': {\'description\': \'Alternate identifiers \'\n                                                   \'for the record.\',\n                                    \'type\': \'array\',\n                                    \'items\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifiers_with_scheme\'},\n                                    \'uniqueItems\': True},\n                    \'related_identifiers\': {\'type\': \'array\',\n                                            \'items\': {\'type\': \'object\',\n                                                      \'additionalProperties\': False,\n                                                      \'properties\': {\'identifier\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                                     \'scheme\': {\'$ref\': \'local://definitions-v1.0.0.json#/scheme\'},\n                                                                     \'relation_type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/relation_type\'},\n                                                                     \'resource_type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/resource_type\'}}}},\n                    \'sizes\': {\'type\': \'array\', \'items\': {\'type\': \'string\'}},\n                    \'formats\': {\'type\': \'array\',\n                                \'items\': {\'type\': \'string\'}},\n                    \'version\': {\'description\': \'Record version tag.\',\n                                \'type\': \'string\'},\n                    \'rights\': {\'description\': \'Any license or copyright \'\n                                              \'information for this \'\n                                              \'resource.\',\n                               \'type\': \'array\',\n                               \'items\': {\'type\': \'object\',\n                                         \'additionalProperties\': False,\n                                         \'properties\': {\'id\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                        \'title\': {\'description\': \'The \'\n                                                                                 \'license \'\n                                                                                 \'name \'\n                                                                                 \'or \'\n                                                                                 \'license \'\n                                                                                 \'itself. \'\n                                                                                 \'Free \'\n                                                                                 \'text.\',\n                                                                  \'type\': \'object\'},\n                                                        \'description\': {\'description\': \'The \'\n                                                                                       \'license \'\n                                                                                       \'description \'\n                                                                                       \'Free \'\n                                                                                       \'text.\',\n                                                                        \'type\': \'object\'},\n                                                        \'link\': {\'type\': \'string\',\n                                                                 \'format\': \'uri\'}}}},\n                    \'description\': {\'description\': \'Description for record \'\n                                                   \'(may contain HTML).\',\n                                    \'type\': \'string\'},\n                    \'additional_descriptions\': {\'type\': \'array\',\n                                                \'items\': {\'type\': \'object\',\n                                                          \'additionalProperties\': False,\n                                                          \'properties\': {\'description\': {\'description\': \'Description \'\n                                                                                                        \'for \'\n                                                                                                        \'record.\',\n                                                                                         \'type\': \'string\'},\n                                                                         \'type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/description_type\'},\n                                                                         \'lang\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/language\'}}}},\n                    \'locations\': {\'description\': \'Geographical locations \'\n                                                 \'relevant to this record.\',\n                                  \'$comment\': \'This part of the schema is \'\n                                              \'modelled on GeoJSON, but \'\n                                              \'without the scope to embed \'\n                                              \'arbitrary metadata.\\n\'\n                                              \'\\n\'\n                                              \'We nest `features` within \'\n                                              \'`locations` to give scope \'\n                                              \'later to say something \'\n                                              \'about the locations as a \'\n                                              \'whole.\',\n                                  \'type\': \'object\',\n                                  \'additionalProperties\': False,\n                                  \'properties\': {\'features\': {\'type\': \'array\',\n                                                              \'minItems\': 1,\n                                                              \'items\': {\'allOf\': [{\'type\': \'object\',\n                                                                                   \'additionalProperties\': False,\n                                                                                   \'properties\': {\'geometry\': {\'allOf\': [{\'$ref\': \'local://records/definitions-v2.0.0.json#/GeoJSON-Geometry\'},\n                                                                                                                         {\'$comment\': \'Bounding \'\n                                                                                                                                      \'boxes \'\n                                                                                                                                      \'(`bbox`) \'\n                                                                                                                                      \'are \'\n                                                                                                                                      \'forbidden \'\n                                                                                                                                      \'on \'\n                                                                                                                                      \'our \'\n                                                                                                                                      \'geometries, \'\n                                                                                                                                      \'even \'\n                                                                                                                                      \'though \'\n                                                                                                                                      "they\'re "\n                                                                                                                                      \'allowed \'\n                                                                                                                                      \'on \'\n                                                                                                                                      \'GeoJSON \'\n                                                                                                                                      \'geometries\',\n                                                                                                                          \'properties\': {\'type\': {},\n                                                                                                                                         \'coordinates\': {}},\n                                                                                                                          \'additionalProperties\': False}]},\n                                                                                                  \'identifiers\': {\'type\': \'array\',\n                                                                                                                  \'items\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifiers_with_scheme\'},\n                                                                                                                  \'uniqueItems\': True},\n                                                                                                  \'place\': {\'description\': \'Place \'\n                                                                                                                           \'of \'\n                                                                                                                           \'the \'\n                                                                                                                           \'location\',\n                                                                                                            \'type\': \'string\',\n                                                                                                            \'minLength\': 1},\n                                                                                                  \'description\': {\'description\': \'Description \'\n                                                                                                                                 \'of \'\n                                                                                                                                 \'the \'\n                                                                                                                                 \'location\',\n                                                                                                                  \'type\': \'string\',\n                                                                                                                  \'minLength\': 1}}}]}}}},\n                    \'funding\': {\'type\': \'array\',\n                                \'items\': {\'type\': \'object\',\n                                          \'additionalProperties\': False,\n                                          \'properties\': {\'funder\': {\'type\': \'object\',\n                                                                    \'additionalProperties\': False,\n                                                                    \'properties\': {\'name\': {\'type\': \'string\'},\n                                                                                   \'id\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'}}},\n                                                         \'award\': {\'type\': \'object\',\n                                                                   \'additionalProperties\': False,\n                                                                   \'properties\': {\'title\': {\'type\': \'object\'},\n                                                                                  \'number\': {\'type\': \'string\'},\n                                                                                  \'id\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                                                  \'identifiers\': {\'type\': \'array\',\n                                                                                                  \'items\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifiers_with_scheme\'}}}}}}},\n                    \'references\': {\'type\': \'array\',\n                                   \'minItems\': 0,\n                                   \'items\': {\'type\': \'object\',\n                                             \'additionalProperties\': False,\n                                             \'properties\': {\'reference\': {\'type\': \'string\',\n                                                                          \'description\': \'A \'\n                                                                                         \'reference \'\n                                                                                         \'string.\'},\n                                                            \'identifier\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                            \'scheme\': {\'$ref\': \'local://definitions-v1.0.0.json#/scheme\'}}}}}}\n\nOn instance[\'metadata\']:\n    {\'d\': \'1987-08-17\',\n     \'dt\': \'2022-01-13T18:20:59.885839+01:00\',\n     \'ed\': \'2017\',\n     \'edi\': \'1995/2012\',\n     \'edt\': \'2018-05-18\',\n     \'edti\': \'1970-04-05/1981-11\',\n     \'f\': 6.0,\n     \'ht\': \'<div>Enter participant purpose never degree light significant \'\n           \'certainly.</div><p>Yourself true model nor south \'\n           \'pretty.</p><p>Region similar tonight lose.</p><p>Suggest \'\n           \'outside table can rock may conference remember.</p>\',\n     \'i\': 822,\n     \'kw\': \'Lawyer lose recent Democrat board mean analysis successful.\',\n     \'t\': \'15:02:19\',\n     \'tx\': \'Free lose late.\'}\n // Werkzeug Debugger</title>\n    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">\n    <link rel="shortcut icon"\n        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">\n    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>\n    <script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = "o2nNh6LLe6kyyM7oyM6Q";\n    </script>\n  </head>\n  <body style="background-color: #fff">\n    <div class="debugger">\n<h1>ValidationError</h1>\n<div class="detail">\n  <p class="errormsg">jsonschema.exceptions.ValidationError: Additional properties are not allowed (&#39;d&#39;, &#39;dt&#39;, &#39;ed&#39;, &#39;edi&#39;, &#39;edt&#39;, &#39;edti&#39;, &#39;f&#39;, &#39;ht&#39;, &#39;i&#39;, &#39;kw&#39;, &#39;t&#39;, &#39;tx&#39; were unexpected)\n\nFailed validating &#39;additionalProperties&#39; in schema[&#39;properties&#39;][&#39;metadata&#39;]:\n    {&#39;type&#39;: &#39;object&#39;,\n     &#39;description&#39;: &#39;Resource metadata.&#39;,\n     &#39;additionalProperties&#39;: False,\n     &#39;properties&#39;: {&#39;resource_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/resource_type&#39;},\n                    &#39;creators&#39;: {&#39;description&#39;: &#39;Creators of the resource.&#39;,\n                                 &#39;type&#39;: &#39;array&#39;,\n                                 &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                           &#39;additionalProperties&#39;: False,\n                                           &#39;properties&#39;: {&#39;person_or_org&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/person_or_org&#39;},\n                                                          &#39;role&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/role&#39;},\n                                                          &#39;affiliations&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/affiliations&#39;}}}},\n                    &#39;title&#39;: {&#39;description&#39;: &#39;Primary title of the record.&#39;,\n                              &#39;type&#39;: &#39;string&#39;},\n                    &#39;additional_titles&#39;: {&#39;description&#39;: &#39;Additional &#39;\n                                                         &#39;record titles.&#39;,\n                                          &#39;type&#39;: &#39;array&#39;,\n                                          &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                    &#39;additionalProperties&#39;: False,\n                                                    &#39;properties&#39;: {&#39;title&#39;: {&#39;description&#39;: &#39;Additional &#39;\n                                                                                            &#39;title &#39;\n                                                                                            &#39;of &#39;\n                                                                                            &#39;the &#39;\n                                                                                            &#39;record.&#39;,\n                                                                             &#39;type&#39;: &#39;string&#39;},\n                                                                   &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/title_type&#39;},\n                                                                   &#39;lang&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}}}},\n                    &#39;publisher&#39;: {&#39;type&#39;: &#39;string&#39;},\n                    &#39;publication_date&#39;: {&#39;description&#39;: &#39;Record &#39;\n                                                        &#39;publication date &#39;\n                                                        &#39;(EDTF level 0 &#39;\n                                                        &#39;format).&#39;,\n                                         &#39;type&#39;: &#39;string&#39;},\n                    &#39;subjects&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/subjects&#39;},\n                    &#39;contributors&#39;: {&#39;description&#39;: &#39;Contributors in order &#39;\n                                                    &#39;of importance.&#39;,\n                                     &#39;type&#39;: &#39;array&#39;,\n                                     &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                               &#39;additionalProperties&#39;: False,\n                                               &#39;properties&#39;: {&#39;person_or_org&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/person_or_org&#39;},\n                                                              &#39;role&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/role&#39;},\n                                                              &#39;affiliations&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/affiliations&#39;}}}},\n                    &#39;dates&#39;: {&#39;description&#39;: &#39;Date, datetime or date &#39;\n                                             &#39;interval.&#39;,\n                              &#39;type&#39;: &#39;array&#39;,\n                              &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                        &#39;additionalProperties&#39;: False,\n                                        &#39;properties&#39;: {&#39;date&#39;: {&#39;description&#39;: &#39;Date, &#39;\n                                                                               &#39;datetime &#39;\n                                                                               &#39;or &#39;\n                                                                               &#39;date &#39;\n                                                                               &#39;interval &#39;\n                                                                               &#39;in &#39;\n                                                                               &#39;EDTF &#39;\n                                                                               &#39;level &#39;\n                                                                               &#39;0 &#39;\n                                                                               &#39;format&#39;,\n                                                                &#39;type&#39;: &#39;string&#39;},\n                                                       &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/date_type&#39;},\n                                                       &#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                      &#39;of &#39;\n                                                                                      &#39;the &#39;\n                                                                                      &#39;date, &#39;\n                                                                                      &#39;datetime &#39;\n                                                                                      &#39;or &#39;\n                                                                                      &#39;date &#39;\n                                                                                      &#39;interval &#39;\n                                                                                      &#39;e.g. &#39;\n                                                                                      &#34;&#39;Accepted&#39; &#34;\n                                                                                      &#39;or &#39;\n                                                                                      &#34;&#39;Available&#39; &#34;\n                                                                                      &#39;(CV).&#39;,\n                                                                       &#39;type&#39;: &#39;string&#39;}}}},\n                    &#39;languages&#39;: {&#39;description&#39;: &#39;The primary languages of &#39;\n                                                 &#39;the resource. ISO 639-3 &#39;\n                                                 &#39;language code.&#39;,\n                                  &#39;type&#39;: &#39;array&#39;,\n                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}},\n                    &#39;identifiers&#39;: {&#39;description&#39;: &#39;Alternate identifiers &#39;\n                                                   &#39;for the record.&#39;,\n                                    &#39;type&#39;: &#39;array&#39;,\n                                    &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;},\n                                    &#39;uniqueItems&#39;: True},\n                    &#39;related_identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                            &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                      &#39;additionalProperties&#39;: False,\n                                                      &#39;properties&#39;: {&#39;identifier&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                                     &#39;scheme&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/scheme&#39;},\n                                                                     &#39;relation_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/relation_type&#39;},\n                                                                     &#39;resource_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/resource_type&#39;}}}},\n                    &#39;sizes&#39;: {&#39;type&#39;: &#39;array&#39;, &#39;items&#39;: {&#39;type&#39;: &#39;string&#39;}},\n                    &#39;formats&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                &#39;items&#39;: {&#39;type&#39;: &#39;string&#39;}},\n                    &#39;version&#39;: {&#39;description&#39;: &#39;Record version tag.&#39;,\n                                &#39;type&#39;: &#39;string&#39;},\n                    &#39;rights&#39;: {&#39;description&#39;: &#39;Any license or copyright &#39;\n                                              &#39;information for this &#39;\n                                              &#39;resource.&#39;,\n                               &#39;type&#39;: &#39;array&#39;,\n                               &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                         &#39;additionalProperties&#39;: False,\n                                         &#39;properties&#39;: {&#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                        &#39;title&#39;: {&#39;description&#39;: &#39;The &#39;\n                                                                                 &#39;license &#39;\n                                                                                 &#39;name &#39;\n                                                                                 &#39;or &#39;\n                                                                                 &#39;license &#39;\n                                                                                 &#39;itself. &#39;\n                                                                                 &#39;Free &#39;\n                                                                                 &#39;text.&#39;,\n                                                                  &#39;type&#39;: &#39;object&#39;},\n                                                        &#39;description&#39;: {&#39;description&#39;: &#39;The &#39;\n                                                                                       &#39;license &#39;\n                                                                                       &#39;description &#39;\n                                                                                       &#39;Free &#39;\n                                                                                       &#39;text.&#39;,\n                                                                        &#39;type&#39;: &#39;object&#39;},\n                                                        &#39;link&#39;: {&#39;type&#39;: &#39;string&#39;,\n                                                                 &#39;format&#39;: &#39;uri&#39;}}}},\n                    &#39;description&#39;: {&#39;description&#39;: &#39;Description for record &#39;\n                                                   &#39;(may contain HTML).&#39;,\n                                    &#39;type&#39;: &#39;string&#39;},\n                    &#39;additional_descriptions&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                          &#39;additionalProperties&#39;: False,\n                                                          &#39;properties&#39;: {&#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                                        &#39;for &#39;\n                                                                                                        &#39;record.&#39;,\n                                                                                         &#39;type&#39;: &#39;string&#39;},\n                                                                         &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/description_type&#39;},\n                                                                         &#39;lang&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}}}},\n                    &#39;locations&#39;: {&#39;description&#39;: &#39;Geographical locations &#39;\n                                                 &#39;relevant to this record.&#39;,\n                                  &#39;$comment&#39;: &#39;This part of the schema is &#39;\n                                              &#39;modelled on GeoJSON, but &#39;\n                                              &#39;without the scope to embed &#39;\n                                              &#39;arbitrary metadata.\\n&#39;\n                                              &#39;\\n&#39;\n                                              &#39;We nest `features` within &#39;\n                                              &#39;`locations` to give scope &#39;\n                                              &#39;later to say something &#39;\n                                              &#39;about the locations as a &#39;\n                                              &#39;whole.&#39;,\n                                  &#39;type&#39;: &#39;object&#39;,\n                                  &#39;additionalProperties&#39;: False,\n                                  &#39;properties&#39;: {&#39;features&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                              &#39;minItems&#39;: 1,\n                                                              &#39;items&#39;: {&#39;allOf&#39;: [{&#39;type&#39;: &#39;object&#39;,\n                                                                                   &#39;additionalProperties&#39;: False,\n                                                                                   &#39;properties&#39;: {&#39;geometry&#39;: {&#39;allOf&#39;: [{&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/GeoJSON-Geometry&#39;},\n                                                                                                                         {&#39;$comment&#39;: &#39;Bounding &#39;\n                                                                                                                                      &#39;boxes &#39;\n                                                                                                                                      &#39;(`bbox`) &#39;\n                                                                                                                                      &#39;are &#39;\n                                                                                                                                      &#39;forbidden &#39;\n                                                                                                                                      &#39;on &#39;\n                                                                                                                                      &#39;our &#39;\n                                                                                                                                      &#39;geometries, &#39;\n                                                                                                                                      &#39;even &#39;\n                                                                                                                                      &#39;though &#39;\n                                                                                                                                      &#34;they&#39;re &#34;\n                                                                                                                                      &#39;allowed &#39;\n                                                                                                                                      &#39;on &#39;\n                                                                                                                                      &#39;GeoJSON &#39;\n                                                                                                                                      &#39;geometries&#39;,\n                                                                                                                          &#39;properties&#39;: {&#39;type&#39;: {},\n                                                                                                                                         &#39;coordinates&#39;: {}},\n                                                                                                                          &#39;additionalProperties&#39;: False}]},\n                                                                                                  &#39;identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                                                                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;},\n                                                                                                                  &#39;uniqueItems&#39;: True},\n                                                                                                  &#39;place&#39;: {&#39;description&#39;: &#39;Place &#39;\n                                                                                                                           &#39;of &#39;\n                                                                                                                           &#39;the &#39;\n                                                                                                                           &#39;location&#39;,\n                                                                                                            &#39;type&#39;: &#39;string&#39;,\n                                                                                                            &#39;minLength&#39;: 1},\n                                                                                                  &#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                                                                 &#39;of &#39;\n                                                                                                                                 &#39;the &#39;\n                                                                                                                                 &#39;location&#39;,\n                                                                                                                  &#39;type&#39;: &#39;string&#39;,\n                                                                                                                  &#39;minLength&#39;: 1}}}]}}}},\n                    &#39;funding&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                          &#39;additionalProperties&#39;: False,\n                                          &#39;properties&#39;: {&#39;funder&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                                    &#39;additionalProperties&#39;: False,\n                                                                    &#39;properties&#39;: {&#39;name&#39;: {&#39;type&#39;: &#39;string&#39;},\n                                                                                   &#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;}}},\n                                                         &#39;award&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                                   &#39;additionalProperties&#39;: False,\n                                                                   &#39;properties&#39;: {&#39;title&#39;: {&#39;type&#39;: &#39;object&#39;},\n                                                                                  &#39;number&#39;: {&#39;type&#39;: &#39;string&#39;},\n                                                                                  &#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                                                  &#39;identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                                                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;}}}}}}},\n                    &#39;references&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                   &#39;minItems&#39;: 0,\n                                   &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                             &#39;additionalProperties&#39;: False,\n                                             &#39;properties&#39;: {&#39;reference&#39;: {&#39;type&#39;: &#39;string&#39;,\n                                                                          &#39;description&#39;: &#39;A &#39;\n                                                                                         &#39;reference &#39;\n                                                                                         &#39;string.&#39;},\n                                                            &#39;identifier&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                            &#39;scheme&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/scheme&#39;}}}}}}\n\nOn instance[&#39;metadata&#39;]:\n    {&#39;d&#39;: &#39;1987-08-17&#39;,\n     &#39;dt&#39;: &#39;2022-01-13T18:20:59.885839+01:00&#39;,\n     &#39;ed&#39;: &#39;2017&#39;,\n     &#39;edi&#39;: &#39;1995/2012&#39;,\n     &#39;edt&#39;: &#39;2018-05-18&#39;,\n     &#39;edti&#39;: &#39;1970-04-05/1981-11&#39;,\n     &#39;f&#39;: 6.0,\n     &#39;ht&#39;: &#39;&lt;div&gt;Enter participant purpose never degree light significant &#39;\n           &#39;certainly.&lt;/div&gt;&lt;p&gt;Yourself true model nor south &#39;\n           &#39;pretty.&lt;/p&gt;&lt;p&gt;Region similar tonight lose.&lt;/p&gt;&lt;p&gt;Suggest &#39;\n           &#39;outside table can rock may conference remember.&lt;/p&gt;&#39;,\n     &#39;i&#39;: 822,\n     &#39;kw&#39;: &#39;Lawyer lose recent Democrat board mean analysis successful.&#39;,\n     &#39;t&#39;: &#39;15:02:19&#39;,\n     &#39;tx&#39;: &#39;Free lose late.&#39;}\n</p>\n</div>\n<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>\n<div class="traceback">\n  <h3></h3>\n  <ul><li><div class="frame" id="frame-4733523648">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">2552</em>,\n      in <code class="function">__call__</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>\n<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>\n<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>\n<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)\n<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733525232">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/middleware/dispatcher.py"</cite>,\n      line <em class="line">78</em>,\n      in <code class="function">__call__</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>app = self.mounts.get(script, self.app)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span>original_script_name = environ.get(&#34;SCRIPT_NAME&#34;, &#34;&#34;)</pre>\n<pre class="line before"><span class="ws">        </span>environ[&#34;SCRIPT_NAME&#34;] = original_script_name + script</pre>\n<pre class="line before"><span class="ws">        </span>environ[&#34;PATH_INFO&#34;] = path_info</pre>\n<pre class="line current"><span class="ws">        </span>return app(environ, start_response)\n<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733525376">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">2552</em>,\n      in <code class="function">__call__</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>\n<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>\n<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>\n<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)\n<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733525520">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">2532</em>,\n      in <code class="function">wsgi_app</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre>\n<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>\n<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>\n<pre class="line before"><span class="ws">                </span>error = e</pre>\n<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)\n<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>\n<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>\n<pre class="line after"><span class="ws">                </span>raise</pre>\n<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>\n<pre class="line after"><span class="ws">        </span>finally:</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733525664">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">2529</em>,\n      in <code class="function">wsgi_app</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>\n<pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre>\n<pre class="line before"><span class="ws">        </span>try:</pre>\n<pre class="line before"><span class="ws">            </span>try:</pre>\n<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()\n<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>\n<pre class="line after"><span class="ws">                </span>error = e</pre>\n<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>\n<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>\n<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733525808">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">1825</em>,\n      in <code class="function">full_dispatch_request</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>\n<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>\n<pre class="line before"><span class="ws">            </span>if rv is None:</pre>\n<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>\n<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>\n<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)\n<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>\n<pre class="line after"><span class="ws">        </span>self,</pre>\n<pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733525952">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">1823</em>,\n      in <code class="function">full_dispatch_request</code></h4>\n  <div class="source "><pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span>try:</pre>\n<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>\n<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>\n<pre class="line before"><span class="ws">            </span>if rv is None:</pre>\n<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()\n<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>\n<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>\n<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733526096">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">1799</em>,\n      in <code class="function">dispatch_request</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>\n<pre class="line before"><span class="ws">        </span>):</pre>\n<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>\n<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>\n<pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>\n<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>\n<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>\n<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>\n<pre class="line after"><span class="ws">        </span>error handling.</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733526240">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/resources.py"</cite>,\n      line <em class="line">65</em>,\n      in <code class="function">view</code></h4>\n  <div class="source "><pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">    </span>def view(*args, **kwargs):</pre>\n<pre class="line before"><span class="ws">        </span>with ResourceRequestCtx(config):</pre>\n<pre class="line before"><span class="ws">            </span># args and kwargs are ignored on purpose - use a request parser</pre>\n<pre class="line before"><span class="ws">            </span># to retrieve the validated values.</pre>\n<pre class="line current"><span class="ws">            </span>return view_meth()\n<span class="ws">            </span>       ^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>view.__name__ = view_name</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return {</pre>\n<pre class="line after"><span class="ws">        </span>&#34;rule&#34;: resolve_from_conf(rule, config),</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733526528">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/content_negotiation.py"</cite>,\n      line <em class="line">116</em>,\n      in <code class="function">inner_content_negotiation</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">                </span>raise MIMETypeNotAccepted(allowed_mimetypes=handlers.keys())</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">            </span>resource_requestctx.accept_mimetype = accept_mimetype</pre>\n<pre class="line before"><span class="ws">            </span>resource_requestctx.response_handler = handlers[accept_mimetype]</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line current"><span class="ws">            </span>return f(*args, **kwargs)\n<span class="ws">            </span>       ^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return inner_content_negotiation</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return decorator</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733526816">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py"</cite>,\n      line <em class="line">51</em>,\n      in <code class="function">inner</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>ctx_attr = getattr(resource_requestctx, parser.location)</pre>\n<pre class="line before"><span class="ws">            </span>if ctx_attr is None:</pre>\n<pre class="line before"><span class="ws">                </span>setattr(resource_requestctx, parser.location, parser.parse())</pre>\n<pre class="line before"><span class="ws">            </span>else:</pre>\n<pre class="line before"><span class="ws">                </span>ctx_attr.update(parser.parse())</pre>\n<pre class="line current"><span class="ws">            </span>return f(self, *args, **kwargs)\n<span class="ws">            </span>       ^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return inner</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return decorator</pre>\n<pre class="line after"><span class="ws"></span> </pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733526960">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py"</cite>,\n      line <em class="line">90</em>,\n      in <code class="function">inner</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">                </span>raise InvalidContentType(allowed_mimetypes=body_parsers.keys())</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">            </span># Parse the request body.</pre>\n<pre class="line before"><span class="ws">            </span>resource_requestctx.data = parser.parse()</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line current"><span class="ws">            </span>return f(self, *args, **kwargs)\n<span class="ws">            </span>       ^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return inner</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return decorator</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733527104">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/responses.py"</cite>,\n      line <em class="line">39</em>,\n      in <code class="function">inner</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">    </span>def decorator(f):</pre>\n<pre class="line before"><span class="ws">        </span>@wraps(f)</pre>\n<pre class="line before"><span class="ws">        </span>def inner(*args, **kwargs):</pre>\n<pre class="line current"><span class="ws">            </span>res = f(*args, **kwargs)\n<span class="ws">            </span>      ^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">            </span>return resource_requestctx.response_handler.make_response(*res, many=many)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return inner</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return decorator</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733527248">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/resources/records/resource.py"</cite>,\n      line <em class="line">93</em>,\n      in <code class="function">create</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">    </span>@request_extra_args</pre>\n<pre class="line before"><span class="ws">    </span>@request_data</pre>\n<pre class="line before"><span class="ws">    </span>@response_handler()</pre>\n<pre class="line before"><span class="ws">    </span>def create(self):</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;Create an item.&#34;&#34;&#34;</pre>\n<pre class="line current"><span class="ws">        </span>item = self.service.create(\n<span class="ws">        </span>       </pre>\n<pre class="line after"><span class="ws">            </span>g.identity,</pre>\n<pre class="line after"><span class="ws">            </span>resource_requestctx.data or {},</pre>\n<pre class="line after"><span class="ws">            </span>expand=resource_requestctx.args.get(&#34;expand&#34;, False),</pre>\n<pre class="line after"><span class="ws">        </span>)</pre>\n<pre class="line after"><span class="ws">        </span>return item.to_dict(), 201</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733527680">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py"</cite>,\n      line <em class="line">376</em>,\n      in <code class="function">inner</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">        </span>def inner(self, *args, **kwargs):</pre>\n<pre class="line before"><span class="ws">            </span>if &#34;uow&#34; not in kwargs:</pre>\n<pre class="line before"><span class="ws">                </span># Migration path - start a UoW and commit</pre>\n<pre class="line before"><span class="ws">                </span>with UnitOfWork(db.session) as uow:</pre>\n<pre class="line before"><span class="ws">                    </span>kwargs[&#34;uow&#34;] = uow</pre>\n<pre class="line current"><span class="ws">                    </span>res = f(self, *args, **kwargs)\n<span class="ws">                    </span>      ^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">                    </span>uow.commit()</pre>\n<pre class="line after"><span class="ws">                    </span>return res</pre>\n<pre class="line after"><span class="ws">            </span>else:</pre>\n<pre class="line after"><span class="ws">                </span>return f(self, *args, **kwargs)</pre>\n<pre class="line after"><span class="ws"></span> </pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733527824">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_drafts_resources/services/records/service.py"</cite>,\n      line <em class="line">309</em>,\n      in <code class="function">create</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">    </span>def create(self, identity, data, uow=None, expand=False, **kwargs):</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;Create a draft for a new record.</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span>It does NOT eagerly create the associated record.</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>\n<pre class="line current"><span class="ws">        </span>res = self._create(\n<span class="ws">        </span>      </pre>\n<pre class="line after"><span class="ws">            </span>self.draft_cls,</pre>\n<pre class="line after"><span class="ws">            </span>identity,</pre>\n<pre class="line after"><span class="ws">            </span>data,</pre>\n<pre class="line after"><span class="ws">            </span>raise_errors=False,</pre>\n<pre class="line after"><span class="ws">            </span>uow=uow,</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733529408">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py"</cite>,\n      line <em class="line">380</em>,\n      in <code class="function">inner</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">                    </span>kwargs[&#34;uow&#34;] = uow</pre>\n<pre class="line before"><span class="ws">                    </span>res = f(self, *args, **kwargs)</pre>\n<pre class="line before"><span class="ws">                    </span>uow.commit()</pre>\n<pre class="line before"><span class="ws">                    </span>return res</pre>\n<pre class="line before"><span class="ws">            </span>else:</pre>\n<pre class="line current"><span class="ws">                </span>return f(self, *args, **kwargs)\n<span class="ws">                </span>       ^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return inner</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return decorator</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733529552">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/records/service.py"</cite>,\n      line <em class="line">365</em>,\n      in <code class="function">_create</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>errors=errors,</pre>\n<pre class="line before"><span class="ws">            </span>uow=uow,</pre>\n<pre class="line before"><span class="ws">        </span>)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span># Persist record (DB and index)</pre>\n<pre class="line current"><span class="ws">        </span>uow.register(RecordCommitOp(record, self.indexer))\n<span class="ws">        </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return self.result_item(</pre>\n<pre class="line after"><span class="ws">            </span>self,</pre>\n<pre class="line after"><span class="ws">            </span>identity,</pre>\n<pre class="line after"><span class="ws">            </span>record,</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733517888">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py"</cite>,\n      line <em class="line">349</em>,\n      in <code class="function">register</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>op.on_post_rollback(self)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">    </span>def register(self, op):</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;Register an operation.&#34;&#34;&#34;</pre>\n<pre class="line before"><span class="ws">        </span># Run on register</pre>\n<pre class="line current"><span class="ws">        </span>op.on_register(self)\n<span class="ws">        </span>^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">        </span># Append to list of operations.</pre>\n<pre class="line after"><span class="ws">        </span>self._operations.append(op)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws"></span>def unit_of_work(**kwargs):</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733518176">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py"</cite>,\n      line <em class="line">176</em>,\n      in <code class="function">on_register</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">        </span>self._indexer = indexer</pre>\n<pre class="line before"><span class="ws">        </span>self._index_refresh = index_refresh</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">    </span>def on_register(self, uow):</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;Commit record (will flush to the database).&#34;&#34;&#34;</pre>\n<pre class="line current"><span class="ws">        </span>self._record.commit()\n<span class="ws">        </span>^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def on_commit(self, uow):</pre>\n<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Run the operation.&#34;&#34;&#34;</pre>\n<pre class="line after"><span class="ws">        </span>if self._indexer is not None:</pre>\n<pre class="line after"><span class="ws">            </span>arguments = {&#34;refresh&#34;: True} if self._index_refresh else {}</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733518320">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py"</cite>,\n      line <em class="line">454</em>,\n      in <code class="function">commit</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span># Run pre commit extensions</pre>\n<pre class="line before"><span class="ws">            </span>for e in self._extensions:</pre>\n<pre class="line before"><span class="ws">                </span>e.pre_commit(self, **kwargs)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">            </span># Validate also encodes the data</pre>\n<pre class="line current"><span class="ws">            </span>json = self._validate(format_checker=format_checker, validator=validator)\n<span class="ws">            </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">            </span># Thus, we pass the encoded JSON directly to the model to avoid</pre>\n<pre class="line after"><span class="ws">            </span># double encoding.</pre>\n<pre class="line after"><span class="ws">            </span>self.model.json = json</pre>\n<pre class="line after"><span class="ws">            </span>flag_modified(self.model, &#34;json&#34;)</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733519760">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py"</cite>,\n      line <em class="line">194</em>,\n      in <code class="function">_validate</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">        </span>else:</pre>\n<pre class="line before"><span class="ws">            </span>json = self.model_cls.encode(dict(self))</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span>if &#34;$schema&#34; in self and self[&#34;$schema&#34;] is not None:</pre>\n<pre class="line before"><span class="ws">            </span># Validate (an error will raise an exception)</pre>\n<pre class="line current"><span class="ws">            </span>_records_state.validate(\n<span class="ws">            </span>^</pre>\n<pre class="line after"><span class="ws">                </span>json,</pre>\n<pre class="line after"><span class="ws">                </span>self[&#34;$schema&#34;],</pre>\n<pre class="line after"><span class="ws">                </span># Use defaults of class if not specified by user.</pre>\n<pre class="line after"><span class="ws">                </span>format_checker=format_checker or self.format_checker,</pre>\n<pre class="line after"><span class="ws">                </span>cls=validator or self.validator,</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733520192">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/ext.py"</cite>,\n      line <em class="line">67</em>,\n      in <code class="function">validate</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>custom_checks=self.app.config.get(&#34;RECORDS_VALIDATION_TYPES&#34;, {}),</pre>\n<pre class="line before"><span class="ws">        </span>)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span>resolver = self.refresolver_cls.from_schema(schema, **refresolver_cls_kwargs)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line current"><span class="ws">        </span>return validate(data, schema, cls=validator_cls, resolver=resolver, **kwargs)\n<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def replace_refs(self, data):</pre>\n<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Replace the JSON reference objects with ``JsonRef``.&#34;&#34;&#34;</pre>\n<pre class="line after"><span class="ws">        </span>return JsonRef.replace_refs(data, loader=self.loader_cls())</pre>\n<pre class="line after"><span class="ws"></span> </pre></div>\n</div>\n\n<li><div class="frame" id="frame-4733520480">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/jsonschema/validators.py"</cite>,\n      line <em class="line">1332</em>,\n      in <code class="function">validate</code></h4>\n  <div class="source "><pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">    </span>cls.check_schema(schema)</pre>\n<pre class="line before"><span class="ws">    </span>validator = cls(schema, *args, **kwargs)</pre>\n<pre class="line before"><span class="ws">    </span>error = exceptions.best_match(validator.iter_errors(instance))</pre>\n<pre class="line before"><span class="ws">    </span>if error is not None:</pre>\n<pre class="line current"><span class="ws">        </span>raise error\n<span class="ws">        </span>^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws"></span>def validator_for(</pre>\n<pre class="line after"><span class="ws">    </span>schema,</pre>\n<pre class="line after"><span class="ws">    </span>default: Validator | _utils.Unset = _UNSET,</pre></div>\n</div>\n</ul>\n  <blockquote>jsonschema.exceptions.ValidationError: Additional properties are not allowed (&#39;d&#39;, &#39;dt&#39;, &#39;ed&#39;, &#39;edi&#39;, &#39;edt&#39;, &#39;edti&#39;, &#39;f&#39;, &#39;ht&#39;, &#39;i&#39;, &#39;kw&#39;, &#39;t&#39;, &#39;tx&#39; were unexpected)\n\nFailed validating &#39;additionalProperties&#39; in schema[&#39;properties&#39;][&#39;metadata&#39;]:\n    {&#39;type&#39;: &#39;object&#39;,\n     &#39;description&#39;: &#39;Resource metadata.&#39;,\n     &#39;additionalProperties&#39;: False,\n     &#39;properties&#39;: {&#39;resource_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/resource_type&#39;},\n                    &#39;creators&#39;: {&#39;description&#39;: &#39;Creators of the resource.&#39;,\n                                 &#39;type&#39;: &#39;array&#39;,\n                                 &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                           &#39;additionalProperties&#39;: False,\n                                           &#39;properties&#39;: {&#39;person_or_org&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/person_or_org&#39;},\n                                                          &#39;role&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/role&#39;},\n                                                          &#39;affiliations&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/affiliations&#39;}}}},\n                    &#39;title&#39;: {&#39;description&#39;: &#39;Primary title of the record.&#39;,\n                              &#39;type&#39;: &#39;string&#39;},\n                    &#39;additional_titles&#39;: {&#39;description&#39;: &#39;Additional &#39;\n                                                         &#39;record titles.&#39;,\n                                          &#39;type&#39;: &#39;array&#39;,\n                                          &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                    &#39;additionalProperties&#39;: False,\n                                                    &#39;properties&#39;: {&#39;title&#39;: {&#39;description&#39;: &#39;Additional &#39;\n                                                                                            &#39;title &#39;\n                                                                                            &#39;of &#39;\n                                                                                            &#39;the &#39;\n                                                                                            &#39;record.&#39;,\n                                                                             &#39;type&#39;: &#39;string&#39;},\n                                                                   &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/title_type&#39;},\n                                                                   &#39;lang&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}}}},\n                    &#39;publisher&#39;: {&#39;type&#39;: &#39;string&#39;},\n                    &#39;publication_date&#39;: {&#39;description&#39;: &#39;Record &#39;\n                                                        &#39;publication date &#39;\n                                                        &#39;(EDTF level 0 &#39;\n                                                        &#39;format).&#39;,\n                                         &#39;type&#39;: &#39;string&#39;},\n                    &#39;subjects&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/subjects&#39;},\n                    &#39;contributors&#39;: {&#39;description&#39;: &#39;Contributors in order &#39;\n                                                    &#39;of importance.&#39;,\n                                     &#39;type&#39;: &#39;array&#39;,\n                                     &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                               &#39;additionalProperties&#39;: False,\n                                               &#39;properties&#39;: {&#39;person_or_org&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/person_or_org&#39;},\n                                                              &#39;role&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/role&#39;},\n                                                              &#39;affiliations&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/affiliations&#39;}}}},\n                    &#39;dates&#39;: {&#39;description&#39;: &#39;Date, datetime or date &#39;\n                                             &#39;interval.&#39;,\n                              &#39;type&#39;: &#39;array&#39;,\n                              &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                        &#39;additionalProperties&#39;: False,\n                                        &#39;properties&#39;: {&#39;date&#39;: {&#39;description&#39;: &#39;Date, &#39;\n                                                                               &#39;datetime &#39;\n                                                                               &#39;or &#39;\n                                                                               &#39;date &#39;\n                                                                               &#39;interval &#39;\n                                                                               &#39;in &#39;\n                                                                               &#39;EDTF &#39;\n                                                                               &#39;level &#39;\n                                                                               &#39;0 &#39;\n                                                                               &#39;format&#39;,\n                                                                &#39;type&#39;: &#39;string&#39;},\n                                                       &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/date_type&#39;},\n                                                       &#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                      &#39;of &#39;\n                                                                                      &#39;the &#39;\n                                                                                      &#39;date, &#39;\n                                                                                      &#39;datetime &#39;\n                                                                                      &#39;or &#39;\n                                                                                      &#39;date &#39;\n                                                                                      &#39;interval &#39;\n                                                                                      &#39;e.g. &#39;\n                                                                                      &#34;&#39;Accepted&#39; &#34;\n                                                                                      &#39;or &#39;\n                                                                                      &#34;&#39;Available&#39; &#34;\n                                                                                      &#39;(CV).&#39;,\n                                                                       &#39;type&#39;: &#39;string&#39;}}}},\n                    &#39;languages&#39;: {&#39;description&#39;: &#39;The primary languages of &#39;\n                                                 &#39;the resource. ISO 639-3 &#39;\n                                                 &#39;language code.&#39;,\n                                  &#39;type&#39;: &#39;array&#39;,\n                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}},\n                    &#39;identifiers&#39;: {&#39;description&#39;: &#39;Alternate identifiers &#39;\n                                                   &#39;for the record.&#39;,\n                                    &#39;type&#39;: &#39;array&#39;,\n                                    &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;},\n                                    &#39;uniqueItems&#39;: True},\n                    &#39;related_identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                            &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                      &#39;additionalProperties&#39;: False,\n                                                      &#39;properties&#39;: {&#39;identifier&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                                     &#39;scheme&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/scheme&#39;},\n                                                                     &#39;relation_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/relation_type&#39;},\n                                                                     &#39;resource_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/resource_type&#39;}}}},\n                    &#39;sizes&#39;: {&#39;type&#39;: &#39;array&#39;, &#39;items&#39;: {&#39;type&#39;: &#39;string&#39;}},\n                    &#39;formats&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                &#39;items&#39;: {&#39;type&#39;: &#39;string&#39;}},\n                    &#39;version&#39;: {&#39;description&#39;: &#39;Record version tag.&#39;,\n                                &#39;type&#39;: &#39;string&#39;},\n                    &#39;rights&#39;: {&#39;description&#39;: &#39;Any license or copyright &#39;\n                                              &#39;information for this &#39;\n                                              &#39;resource.&#39;,\n                               &#39;type&#39;: &#39;array&#39;,\n                               &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                         &#39;additionalProperties&#39;: False,\n                                         &#39;properties&#39;: {&#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                        &#39;title&#39;: {&#39;description&#39;: &#39;The &#39;\n                                                                                 &#39;license &#39;\n                                                                                 &#39;name &#39;\n                                                                                 &#39;or &#39;\n                                                                                 &#39;license &#39;\n                                                                                 &#39;itself. &#39;\n                                                                                 &#39;Free &#39;\n                                                                                 &#39;text.&#39;,\n                                                                  &#39;type&#39;: &#39;object&#39;},\n                                                        &#39;description&#39;: {&#39;description&#39;: &#39;The &#39;\n                                                                                       &#39;license &#39;\n                                                                                       &#39;description &#39;\n                                                                                       &#39;Free &#39;\n                                                                                       &#39;text.&#39;,\n                                                                        &#39;type&#39;: &#39;object&#39;},\n                                                        &#39;link&#39;: {&#39;type&#39;: &#39;string&#39;,\n                                                                 &#39;format&#39;: &#39;uri&#39;}}}},\n                    &#39;description&#39;: {&#39;description&#39;: &#39;Description for record &#39;\n                                                   &#39;(may contain HTML).&#39;,\n                                    &#39;type&#39;: &#39;string&#39;},\n                    &#39;additional_descriptions&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                          &#39;additionalProperties&#39;: False,\n                                                          &#39;properties&#39;: {&#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                                        &#39;for &#39;\n                                                                                                        &#39;record.&#39;,\n                                                                                         &#39;type&#39;: &#39;string&#39;},\n                                                                         &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/description_type&#39;},\n                                                                         &#39;lang&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}}}},\n                    &#39;locations&#39;: {&#39;description&#39;: &#39;Geographical locations &#39;\n                                                 &#39;relevant to this record.&#39;,\n                                  &#39;$comment&#39;: &#39;This part of the schema is &#39;\n                                              &#39;modelled on GeoJSON, but &#39;\n                                              &#39;without the scope to embed &#39;\n                                              &#39;arbitrary metadata.\\n&#39;\n                                              &#39;\\n&#39;\n                                              &#39;We nest `features` within &#39;\n                                              &#39;`locations` to give scope &#39;\n                                              &#39;later to say something &#39;\n                                              &#39;about the locations as a &#39;\n                                              &#39;whole.&#39;,\n                                  &#39;type&#39;: &#39;object&#39;,\n                                  &#39;additionalProperties&#39;: False,\n                                  &#39;properties&#39;: {&#39;features&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                              &#39;minItems&#39;: 1,\n                                                              &#39;items&#39;: {&#39;allOf&#39;: [{&#39;type&#39;: &#39;object&#39;,\n                                                                                   &#39;additionalProperties&#39;: False,\n                                                                                   &#39;properties&#39;: {&#39;geometry&#39;: {&#39;allOf&#39;: [{&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/GeoJSON-Geometry&#39;},\n                                                                                                                         {&#39;$comment&#39;: &#39;Bounding &#39;\n                                                                                                                                      &#39;boxes &#39;\n                                                                                                                                      &#39;(`bbox`) &#39;\n                                                                                                                                      &#39;are &#39;\n                                                                                                                                      &#39;forbidden &#39;\n                                                                                                                                      &#39;on &#39;\n                                                                                                                                      &#39;our &#39;\n                                                                                                                                      &#39;geometries, &#39;\n                                                                                                                                      &#39;even &#39;\n                                                                                                                                      &#39;though &#39;\n                                                                                                                                      &#34;they&#39;re &#34;\n                                                                                                                                      &#39;allowed &#39;\n                                                                                                                                      &#39;on &#39;\n                                                                                                                                      &#39;GeoJSON &#39;\n                                                                                                                                      &#39;geometries&#39;,\n                                                                                                                          &#39;properties&#39;: {&#39;type&#39;: {},\n                                                                                                                                         &#39;coordinates&#39;: {}},\n                                                                                                                          &#39;additionalProperties&#39;: False}]},\n                                                                                                  &#39;identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                                                                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;},\n                                                                                                                  &#39;uniqueItems&#39;: True},\n                                                                                                  &#39;place&#39;: {&#39;description&#39;: &#39;Place &#39;\n                                                                                                                           &#39;of &#39;\n                                                                                                                           &#39;the &#39;\n                                                                                                                           &#39;location&#39;,\n                                                                                                            &#39;type&#39;: &#39;string&#39;,\n                                                                                                            &#39;minLength&#39;: 1},\n                                                                                                  &#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                                                                 &#39;of &#39;\n                                                                                                                                 &#39;the &#39;\n                                                                                                                                 &#39;location&#39;,\n                                                                                                                  &#39;type&#39;: &#39;string&#39;,\n                                                                                                                  &#39;minLength&#39;: 1}}}]}}}},\n                    &#39;funding&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                          &#39;additionalProperties&#39;: False,\n                                          &#39;properties&#39;: {&#39;funder&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                                    &#39;additionalProperties&#39;: False,\n                                                                    &#39;properties&#39;: {&#39;name&#39;: {&#39;type&#39;: &#39;string&#39;},\n                                                                                   &#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;}}},\n                                                         &#39;award&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                                   &#39;additionalProperties&#39;: False,\n                                                                   &#39;properties&#39;: {&#39;title&#39;: {&#39;type&#39;: &#39;object&#39;},\n                                                                                  &#39;number&#39;: {&#39;type&#39;: &#39;string&#39;},\n                                                                                  &#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                                                  &#39;identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                                                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;}}}}}}},\n                    &#39;references&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                   &#39;minItems&#39;: 0,\n                                   &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                             &#39;additionalProperties&#39;: False,\n                                             &#39;properties&#39;: {&#39;reference&#39;: {&#39;type&#39;: &#39;string&#39;,\n                                                                          &#39;description&#39;: &#39;A &#39;\n                                                                                         &#39;reference &#39;\n                                                                                         &#39;string.&#39;},\n                                                            &#39;identifier&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                            &#39;scheme&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/scheme&#39;}}}}}}\n\nOn instance[&#39;metadata&#39;]:\n    {&#39;d&#39;: &#39;1987-08-17&#39;,\n     &#39;dt&#39;: &#39;2022-01-13T18:20:59.885839+01:00&#39;,\n     &#39;ed&#39;: &#39;2017&#39;,\n     &#39;edi&#39;: &#39;1995/2012&#39;,\n     &#39;edt&#39;: &#39;2018-05-18&#39;,\n     &#39;edti&#39;: &#39;1970-04-05/1981-11&#39;,\n     &#39;f&#39;: 6.0,\n     &#39;ht&#39;: &#39;&lt;div&gt;Enter participant purpose never degree light significant &#39;\n           &#39;certainly.&lt;/div&gt;&lt;p&gt;Yourself true model nor south &#39;\n           &#39;pretty.&lt;/p&gt;&lt;p&gt;Region similar tonight lose.&lt;/p&gt;&lt;p&gt;Suggest &#39;\n           &#39;outside table can rock may conference remember.&lt;/p&gt;&#39;,\n     &#39;i&#39;: 822,\n     &#39;kw&#39;: &#39;Lawyer lose recent Democrat board mean analysis successful.&#39;,\n     &#39;t&#39;: &#39;15:02:19&#39;,\n     &#39;tx&#39;: &#39;Free lose late.&#39;}\n</blockquote>\n</div>\n\n<div class="plain">\n    <p>\n      This is the Copy/Paste friendly version of the traceback.\n    </p>\n    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 2552, in __call__\n    return self.wsgi_app(environ, start_response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/middleware/dispatcher.py&#34;, line 78, in __call__\n    return app(environ, start_response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 2552, in __call__\n    return self.wsgi_app(environ, start_response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 2532, in wsgi_app\n    response = self.handle_exception(e)\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 2529, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 1825, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 1823, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 1799, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/resources.py&#34;, line 65, in view\n    return view_meth()\n           ^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/content_negotiation.py&#34;, line 116, in inner_content_negotiation\n    return f(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py&#34;, line 51, in inner\n    return f(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py&#34;, line 90, in inner\n    return f(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/responses.py&#34;, line 39, in inner\n    res = f(*args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/resources/records/resource.py&#34;, line 93, in create\n    item = self.service.create(\n           ^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py&#34;, line 376, in inner\n    res = f(self, *args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_drafts_resources/services/records/service.py&#34;, line 309, in create\n    res = self._create(\n          ^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py&#34;, line 380, in inner\n    return f(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/records/service.py&#34;, line 365, in _create\n    uow.register(RecordCommitOp(record, self.indexer))\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py&#34;, line 349, in register\n    op.on_register(self)\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py&#34;, line 176, in on_register\n    self._record.commit()\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py&#34;, line 454, in commit\n    json = self._validate(format_checker=format_checker, validator=validator)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py&#34;, line 194, in _validate\n    _records_state.validate(\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/ext.py&#34;, line 67, in validate\n    return validate(data, schema, cls=validator_cls, resolver=resolver, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/jsonschema/validators.py&#34;, line 1332, in validate\n    raise error\njsonschema.exceptions.ValidationError: Additional properties are not allowed (&#39;d&#39;, &#39;dt&#39;, &#39;ed&#39;, &#39;edi&#39;, &#39;edt&#39;, &#39;edti&#39;, &#39;f&#39;, &#39;ht&#39;, &#39;i&#39;, &#39;kw&#39;, &#39;t&#39;, &#39;tx&#39; were unexpected)\n\nFailed validating &#39;additionalProperties&#39; in schema[&#39;properties&#39;][&#39;metadata&#39;]:\n    {&#39;type&#39;: &#39;object&#39;,\n     &#39;description&#39;: &#39;Resource metadata.&#39;,\n     &#39;additionalProperties&#39;: False,\n     &#39;properties&#39;: {&#39;resource_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/resource_type&#39;},\n                    &#39;creators&#39;: {&#39;description&#39;: &#39;Creators of the resource.&#39;,\n                                 &#39;type&#39;: &#39;array&#39;,\n                                 &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                           &#39;additionalProperties&#39;: False,\n                                           &#39;properties&#39;: {&#39;person_or_org&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/person_or_org&#39;},\n                                                          &#39;role&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/role&#39;},\n                                                          &#39;affiliations&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/affiliations&#39;}}}},\n                    &#39;title&#39;: {&#39;description&#39;: &#39;Primary title of the record.&#39;,\n                              &#39;type&#39;: &#39;string&#39;},\n                    &#39;additional_titles&#39;: {&#39;description&#39;: &#39;Additional &#39;\n                                                         &#39;record titles.&#39;,\n                                          &#39;type&#39;: &#39;array&#39;,\n                                          &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                    &#39;additionalProperties&#39;: False,\n                                                    &#39;properties&#39;: {&#39;title&#39;: {&#39;description&#39;: &#39;Additional &#39;\n                                                                                            &#39;title &#39;\n                                                                                            &#39;of &#39;\n                                                                                            &#39;the &#39;\n                                                                                            &#39;record.&#39;,\n                                                                             &#39;type&#39;: &#39;string&#39;},\n                                                                   &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/title_type&#39;},\n                                                                   &#39;lang&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}}}},\n                    &#39;publisher&#39;: {&#39;type&#39;: &#39;string&#39;},\n                    &#39;publication_date&#39;: {&#39;description&#39;: &#39;Record &#39;\n                                                        &#39;publication date &#39;\n                                                        &#39;(EDTF level 0 &#39;\n                                                        &#39;format).&#39;,\n                                         &#39;type&#39;: &#39;string&#39;},\n                    &#39;subjects&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/subjects&#39;},\n                    &#39;contributors&#39;: {&#39;description&#39;: &#39;Contributors in order &#39;\n                                                    &#39;of importance.&#39;,\n                                     &#39;type&#39;: &#39;array&#39;,\n                                     &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                               &#39;additionalProperties&#39;: False,\n                                               &#39;properties&#39;: {&#39;person_or_org&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/person_or_org&#39;},\n                                                              &#39;role&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/role&#39;},\n                                                              &#39;affiliations&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/affiliations&#39;}}}},\n                    &#39;dates&#39;: {&#39;description&#39;: &#39;Date, datetime or date &#39;\n                                             &#39;interval.&#39;,\n                              &#39;type&#39;: &#39;array&#39;,\n                              &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                        &#39;additionalProperties&#39;: False,\n                                        &#39;properties&#39;: {&#39;date&#39;: {&#39;description&#39;: &#39;Date, &#39;\n                                                                               &#39;datetime &#39;\n                                                                               &#39;or &#39;\n                                                                               &#39;date &#39;\n                                                                               &#39;interval &#39;\n                                                                               &#39;in &#39;\n                                                                               &#39;EDTF &#39;\n                                                                               &#39;level &#39;\n                                                                               &#39;0 &#39;\n                                                                               &#39;format&#39;,\n                                                                &#39;type&#39;: &#39;string&#39;},\n                                                       &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/date_type&#39;},\n                                                       &#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                      &#39;of &#39;\n                                                                                      &#39;the &#39;\n                                                                                      &#39;date, &#39;\n                                                                                      &#39;datetime &#39;\n                                                                                      &#39;or &#39;\n                                                                                      &#39;date &#39;\n                                                                                      &#39;interval &#39;\n                                                                                      &#39;e.g. &#39;\n                                                                                      &#34;&#39;Accepted&#39; &#34;\n                                                                                      &#39;or &#39;\n                                                                                      &#34;&#39;Available&#39; &#34;\n                                                                                      &#39;(CV).&#39;,\n                                                                       &#39;type&#39;: &#39;string&#39;}}}},\n                    &#39;languages&#39;: {&#39;description&#39;: &#39;The primary languages of &#39;\n                                                 &#39;the resource. ISO 639-3 &#39;\n                                                 &#39;language code.&#39;,\n                                  &#39;type&#39;: &#39;array&#39;,\n                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}},\n                    &#39;identifiers&#39;: {&#39;description&#39;: &#39;Alternate identifiers &#39;\n                                                   &#39;for the record.&#39;,\n                                    &#39;type&#39;: &#39;array&#39;,\n                                    &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;},\n                                    &#39;uniqueItems&#39;: True},\n                    &#39;related_identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                            &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                      &#39;additionalProperties&#39;: False,\n                                                      &#39;properties&#39;: {&#39;identifier&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                                     &#39;scheme&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/scheme&#39;},\n                                                                     &#39;relation_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/relation_type&#39;},\n                                                                     &#39;resource_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/resource_type&#39;}}}},\n                    &#39;sizes&#39;: {&#39;type&#39;: &#39;array&#39;, &#39;items&#39;: {&#39;type&#39;: &#39;string&#39;}},\n                    &#39;formats&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                &#39;items&#39;: {&#39;type&#39;: &#39;string&#39;}},\n                    &#39;version&#39;: {&#39;description&#39;: &#39;Record version tag.&#39;,\n                                &#39;type&#39;: &#39;string&#39;},\n                    &#39;rights&#39;: {&#39;description&#39;: &#39;Any license or copyright &#39;\n                                              &#39;information for this &#39;\n                                              &#39;resource.&#39;,\n                               &#39;type&#39;: &#39;array&#39;,\n                               &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                         &#39;additionalProperties&#39;: False,\n                                         &#39;properties&#39;: {&#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                        &#39;title&#39;: {&#39;description&#39;: &#39;The &#39;\n                                                                                 &#39;license &#39;\n                                                                                 &#39;name &#39;\n                                                                                 &#39;or &#39;\n                                                                                 &#39;license &#39;\n                                                                                 &#39;itself. &#39;\n                                                                                 &#39;Free &#39;\n                                                                                 &#39;text.&#39;,\n                                                                  &#39;type&#39;: &#39;object&#39;},\n                                                        &#39;description&#39;: {&#39;description&#39;: &#39;The &#39;\n                                                                                       &#39;license &#39;\n                                                                                       &#39;description &#39;\n                                                                                       &#39;Free &#39;\n                                                                                       &#39;text.&#39;,\n                                                                        &#39;type&#39;: &#39;object&#39;},\n                                                        &#39;link&#39;: {&#39;type&#39;: &#39;string&#39;,\n                                                                 &#39;format&#39;: &#39;uri&#39;}}}},\n                    &#39;description&#39;: {&#39;description&#39;: &#39;Description for record &#39;\n                                                   &#39;(may contain HTML).&#39;,\n                                    &#39;type&#39;: &#39;string&#39;},\n                    &#39;additional_descriptions&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                          &#39;additionalProperties&#39;: False,\n                                                          &#39;properties&#39;: {&#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                                        &#39;for &#39;\n                                                                                                        &#39;record.&#39;,\n                                                                                         &#39;type&#39;: &#39;string&#39;},\n                                                                         &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/description_type&#39;},\n                                                                         &#39;lang&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}}}},\n                    &#39;locations&#39;: {&#39;description&#39;: &#39;Geographical locations &#39;\n                                                 &#39;relevant to this record.&#39;,\n                                  &#39;$comment&#39;: &#39;This part of the schema is &#39;\n                                              &#39;modelled on GeoJSON, but &#39;\n                                              &#39;without the scope to embed &#39;\n                                              &#39;arbitrary metadata.\\n&#39;\n                                              &#39;\\n&#39;\n                                              &#39;We nest `features` within &#39;\n                                              &#39;`locations` to give scope &#39;\n                                              &#39;later to say something &#39;\n                                              &#39;about the locations as a &#39;\n                                              &#39;whole.&#39;,\n                                  &#39;type&#39;: &#39;object&#39;,\n                                  &#39;additionalProperties&#39;: False,\n                                  &#39;properties&#39;: {&#39;features&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                              &#39;minItems&#39;: 1,\n                                                              &#39;items&#39;: {&#39;allOf&#39;: [{&#39;type&#39;: &#39;object&#39;,\n                                                                                   &#39;additionalProperties&#39;: False,\n                                                                                   &#39;properties&#39;: {&#39;geometry&#39;: {&#39;allOf&#39;: [{&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/GeoJSON-Geometry&#39;},\n                                                                                                                         {&#39;$comment&#39;: &#39;Bounding &#39;\n                                                                                                                                      &#39;boxes &#39;\n                                                                                                                                      &#39;(`bbox`) &#39;\n                                                                                                                                      &#39;are &#39;\n                                                                                                                                      &#39;forbidden &#39;\n                                                                                                                                      &#39;on &#39;\n                                                                                                                                      &#39;our &#39;\n                                                                                                                                      &#39;geometries, &#39;\n                                                                                                                                      &#39;even &#39;\n                                                                                                                                      &#39;though &#39;\n                                                                                                                                      &#34;they&#39;re &#34;\n                                                                                                                                      &#39;allowed &#39;\n                                                                                                                                      &#39;on &#39;\n                                                                                                                                      &#39;GeoJSON &#39;\n                                                                                                                                      &#39;geometries&#39;,\n                                                                                                                          &#39;properties&#39;: {&#39;type&#39;: {},\n                                                                                                                                         &#39;coordinates&#39;: {}},\n                                                                                                                          &#39;additionalProperties&#39;: False}]},\n                                                                                                  &#39;identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                                                                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;},\n                                                                                                                  &#39;uniqueItems&#39;: True},\n                                                                                                  &#39;place&#39;: {&#39;description&#39;: &#39;Place &#39;\n                                                                                                                           &#39;of &#39;\n                                                                                                                           &#39;the &#39;\n                                                                                                                           &#39;location&#39;,\n                                                                                                            &#39;type&#39;: &#39;string&#39;,\n                                                                                                            &#39;minLength&#39;: 1},\n                                                                                                  &#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                                                                 &#39;of &#39;\n                                                                                                                                 &#39;the &#39;\n                                                                                                                                 &#39;location&#39;,\n                                                                                                                  &#39;type&#39;: &#39;string&#39;,\n                                                                                                                  &#39;minLength&#39;: 1}}}]}}}},\n                    &#39;funding&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                          &#39;additionalProperties&#39;: False,\n                                          &#39;properties&#39;: {&#39;funder&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                                    &#39;additionalProperties&#39;: False,\n                                                                    &#39;properties&#39;: {&#39;name&#39;: {&#39;type&#39;: &#39;string&#39;},\n                                                                                   &#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;}}},\n                                                         &#39;award&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                                   &#39;additionalProperties&#39;: False,\n                                                                   &#39;properties&#39;: {&#39;title&#39;: {&#39;type&#39;: &#39;object&#39;},\n                                                                                  &#39;number&#39;: {&#39;type&#39;: &#39;string&#39;},\n                                                                                  &#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                                                  &#39;identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                                                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;}}}}}}},\n                    &#39;references&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                   &#39;minItems&#39;: 0,\n                                   &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                             &#39;additionalProperties&#39;: False,\n                                             &#39;properties&#39;: {&#39;reference&#39;: {&#39;type&#39;: &#39;string&#39;,\n                                                                          &#39;description&#39;: &#39;A &#39;\n                                                                                         &#39;reference &#39;\n                                                                                         &#39;string.&#39;},\n                                                            &#39;identifier&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                            &#39;scheme&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/scheme&#39;}}}}}}\n\nOn instance[&#39;metadata&#39;]:\n    {&#39;d&#39;: &#39;1987-08-17&#39;,\n     &#39;dt&#39;: &#39;2022-01-13T18:20:59.885839+01:00&#39;,\n     &#39;ed&#39;: &#39;2017&#39;,\n     &#39;edi&#39;: &#39;1995/2012&#39;,\n     &#39;edt&#39;: &#39;2018-05-18&#39;,\n     &#39;edti&#39;: &#39;1970-04-05/1981-11&#39;,\n     &#39;f&#39;: 6.0,\n     &#39;ht&#39;: &#39;&lt;div&gt;Enter participant purpose never degree light significant &#39;\n           &#39;certainly.&lt;/div&gt;&lt;p&gt;Yourself true model nor south &#39;\n           &#39;pretty.&lt;/p&gt;&lt;p&gt;Region similar tonight lose.&lt;/p&gt;&lt;p&gt;Suggest &#39;\n           &#39;outside table can rock may conference remember.&lt;/p&gt;&#39;,\n     &#39;i&#39;: 822,\n     &#39;kw&#39;: &#39;Lawyer lose recent Democrat board mean analysis successful.&#39;,\n     &#39;t&#39;: &#39;15:02:19&#39;,\n     &#39;tx&#39;: &#39;Free lose late.&#39;}\n</textarea>\n</div>\n<div class="explanation">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class="nojavascript">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.</span>\n</div>\n      <div class="footer">\n        Brought to you by <strong class="arthur">DON\'T PANIC</strong>, your\n        friendly Werkzeug powered traceback interpreter.\n      </div>\n    </div>\n\n    <div class="pin-prompt">\n      <div class="inner">\n        <h3>Console Locked</h3>\n        <p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form>\n          <p>PIN:\n            <input type=text name=pin size=14>\n            <input type=submit name=btn value="Confirm Pin">\n        </form>\n      </div>\n    </div>\n  </body>\n</html>\n\n<!--\n\nTraceback (most recent call last):\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2552, in __call__\n    return self.wsgi_app(environ, start_response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/middleware/dispatcher.py", line 78, in __call__\n    return app(environ, start_response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2552, in __call__\n    return self.wsgi_app(environ, start_response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2532, in wsgi_app\n    response = self.handle_exception(e)\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2529, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 1825, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 1823, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 1799, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/resources.py", line 65, in view\n    return view_meth()\n           ^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/content_negotiation.py", line 116, in inner_content_negotiation\n    return f(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py", line 51, in inner\n    return f(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py", line 90, in inner\n    return f(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/responses.py", line 39, in inner\n    res = f(*args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/resources/records/resource.py", line 93, in create\n    item = self.service.create(\n           ^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 376, in inner\n    res = f(self, *args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_drafts_resources/services/records/service.py", line 309, in create\n    res = self._create(\n          ^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 380, in inner\n    return f(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/records/service.py", line 365, in _create\n    uow.register(RecordCommitOp(record, self.indexer))\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 349, in register\n    op.on_register(self)\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 176, in on_register\n    self._record.commit()\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py", line 454, in commit\n    json = self._validate(format_checker=format_checker, validator=validator)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py", line 194, in _validate\n    _records_state.validate(\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/ext.py", line 67, in validate\n    return validate(data, schema, cls=validator_cls, resolver=resolver, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/jsonschema/validators.py", line 1332, in validate\n    raise error\njsonschema.exceptions.ValidationError: Additional properties are not allowed (\'d\', \'dt\', \'ed\', \'edi\', \'edt\', \'edti\', \'f\', \'ht\', \'i\', \'kw\', \'t\', \'tx\' were unexpected)\n\nFailed validating \'additionalProperties\' in schema[\'properties\'][\'metadata\']:\n    {\'type\': \'object\',\n     \'description\': \'Resource metadata.\',\n     \'additionalProperties\': False,\n     \'properties\': {\'resource_type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/resource_type\'},\n                    \'creators\': {\'description\': \'Creators of the resource.\',\n                                 \'type\': \'array\',\n                                 \'items\': {\'type\': \'object\',\n                                           \'additionalProperties\': False,\n                                           \'properties\': {\'person_or_org\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/person_or_org\'},\n                                                          \'role\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/role\'},\n                                                          \'affiliations\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/affiliations\'}}}},\n                    \'title\': {\'description\': \'Primary title of the record.\',\n                              \'type\': \'string\'},\n                    \'additional_titles\': {\'description\': \'Additional \'\n                                                         \'record titles.\',\n                                          \'type\': \'array\',\n                                          \'items\': {\'type\': \'object\',\n                                                    \'additionalProperties\': False,\n                                                    \'properties\': {\'title\': {\'description\': \'Additional \'\n                                                                                            \'title \'\n                                                                                            \'of \'\n                                                                                            \'the \'\n                                                                                            \'record.\',\n                                                                             \'type\': \'string\'},\n                                                                   \'type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/title_type\'},\n                                                                   \'lang\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/language\'}}}},\n                    \'publisher\': {\'type\': \'string\'},\n                    \'publication_date\': {\'description\': \'Record \'\n                                                        \'publication date \'\n                                                        \'(EDTF level 0 \'\n                                                        \'format).\',\n                                         \'type\': \'string\'},\n                    \'subjects\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/subjects\'},\n                    \'contributors\': {\'description\': \'Contributors in order \'\n                                                    \'of importance.\',\n                                     \'type\': \'array\',\n                                     \'items\': {\'type\': \'object\',\n                                               \'additionalProperties\': False,\n                                               \'properties\': {\'person_or_org\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/person_or_org\'},\n                                                              \'role\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/role\'},\n                                                              \'affiliations\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/affiliations\'}}}},\n                    \'dates\': {\'description\': \'Date, datetime or date \'\n                                             \'interval.\',\n                              \'type\': \'array\',\n                              \'items\': {\'type\': \'object\',\n                                        \'additionalProperties\': False,\n                                        \'properties\': {\'date\': {\'description\': \'Date, \'\n                                                                               \'datetime \'\n                                                                               \'or \'\n                                                                               \'date \'\n                                                                               \'interval \'\n                                                                               \'in \'\n                                                                               \'EDTF \'\n                                                                               \'level \'\n                                                                               \'0 \'\n                                                                               \'format\',\n                                                                \'type\': \'string\'},\n                                                       \'type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/date_type\'},\n                                                       \'description\': {\'description\': \'Description \'\n                                                                                      \'of \'\n                                                                                      \'the \'\n                                                                                      \'date, \'\n                                                                                      \'datetime \'\n                                                                                      \'or \'\n                                                                                      \'date \'\n                                                                                      \'interval \'\n                                                                                      \'e.g. \'\n                                                                                      "\'Accepted\' "\n                                                                                      \'or \'\n                                                                                      "\'Available\' "\n                                                                                      \'(CV).\',\n                                                                       \'type\': \'string\'}}}},\n                    \'languages\': {\'description\': \'The primary languages of \'\n                                                 \'the resource. ISO 639-3 \'\n                                                 \'language code.\',\n                                  \'type\': \'array\',\n                                  \'items\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/language\'}},\n                    \'identifiers\': {\'description\': \'Alternate identifiers \'\n                                                   \'for the record.\',\n                                    \'type\': \'array\',\n                                    \'items\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifiers_with_scheme\'},\n                                    \'uniqueItems\': True},\n                    \'related_identifiers\': {\'type\': \'array\',\n                                            \'items\': {\'type\': \'object\',\n                                                      \'additionalProperties\': False,\n                                                      \'properties\': {\'identifier\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                                     \'scheme\': {\'$ref\': \'local://definitions-v1.0.0.json#/scheme\'},\n                                                                     \'relation_type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/relation_type\'},\n                                                                     \'resource_type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/resource_type\'}}}},\n                    \'sizes\': {\'type\': \'array\', \'items\': {\'type\': \'string\'}},\n                    \'formats\': {\'type\': \'array\',\n                                \'items\': {\'type\': \'string\'}},\n                    \'version\': {\'description\': \'Record version tag.\',\n                                \'type\': \'string\'},\n                    \'rights\': {\'description\': \'Any license or copyright \'\n                                              \'information for this \'\n                                              \'resource.\',\n                               \'type\': \'array\',\n                               \'items\': {\'type\': \'object\',\n                                         \'additionalProperties\': False,\n                                         \'properties\': {\'id\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                        \'title\': {\'description\': \'The \'\n                                                                                 \'license \'\n                                                                                 \'name \'\n                                                                                 \'or \'\n                                                                                 \'license \'\n                                                                                 \'itself. \'\n                                                                                 \'Free \'\n                                                                                 \'text.\',\n                                                                  \'type\': \'object\'},\n                                                        \'description\': {\'description\': \'The \'\n                                                                                       \'license \'\n                                                                                       \'description \'\n                                                                                       \'Free \'\n                                                                                       \'text.\',\n                                                                        \'type\': \'object\'},\n                                                        \'link\': {\'type\': \'string\',\n                                                                 \'format\': \'uri\'}}}},\n                    \'description\': {\'description\': \'Description for record \'\n                                                   \'(may contain HTML).\',\n                                    \'type\': \'string\'},\n                    \'additional_descriptions\': {\'type\': \'array\',\n                                                \'items\': {\'type\': \'object\',\n                                                          \'additionalProperties\': False,\n                                                          \'properties\': {\'description\': {\'description\': \'Description \'\n                                                                                                        \'for \'\n                                                                                                        \'record.\',\n                                                                                         \'type\': \'string\'},\n                                                                         \'type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/description_type\'},\n                                                                         \'lang\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/language\'}}}},\n                    \'locations\': {\'description\': \'Geographical locations \'\n                                                 \'relevant to this record.\',\n                                  \'$comment\': \'This part of the schema is \'\n                                              \'modelled on GeoJSON, but \'\n                                              \'without the scope to embed \'\n                                              \'arbitrary metadata.\\n\'\n                                              \'\\n\'\n                                              \'We nest `features` within \'\n                                              \'`locations` to give scope \'\n                                              \'later to say something \'\n                                              \'about the locations as a \'\n                                              \'whole.\',\n                                  \'type\': \'object\',\n                                  \'additionalProperties\': False,\n                                  \'properties\': {\'features\': {\'type\': \'array\',\n                                                              \'minItems\': 1,\n                                                              \'items\': {\'allOf\': [{\'type\': \'object\',\n                                                                                   \'additionalProperties\': False,\n                                                                                   \'properties\': {\'geometry\': {\'allOf\': [{\'$ref\': \'local://records/definitions-v2.0.0.json#/GeoJSON-Geometry\'},\n                                                                                                                         {\'$comment\': \'Bounding \'\n                                                                                                                                      \'boxes \'\n                                                                                                                                      \'(`bbox`) \'\n                                                                                                                                      \'are \'\n                                                                                                                                      \'forbidden \'\n                                                                                                                                      \'on \'\n                                                                                                                                      \'our \'\n                                                                                                                                      \'geometries, \'\n                                                                                                                                      \'even \'\n                                                                                                                                      \'though \'\n                                                                                                                                      "they\'re "\n                                                                                                                                      \'allowed \'\n                                                                                                                                      \'on \'\n                                                                                                                                      \'GeoJSON \'\n                                                                                                                                      \'geometries\',\n                                                                                                                          \'properties\': {\'type\': {},\n                                                                                                                                         \'coordinates\': {}},\n                                                                                                                          \'additionalProperties\': False}]},\n                                                                                                  \'identifiers\': {\'type\': \'array\',\n                                                                                                                  \'items\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifiers_with_scheme\'},\n                                                                                                                  \'uniqueItems\': True},\n                                                                                                  \'place\': {\'description\': \'Place \'\n                                                                                                                           \'of \'\n                                                                                                                           \'the \'\n                                                                                                                           \'location\',\n                                                                                                            \'type\': \'string\',\n                                                                                                            \'minLength\': 1},\n                                                                                                  \'description\': {\'description\': \'Description \'\n                                                                                                                                 \'of \'\n                                                                                                                                 \'the \'\n                                                                                                                                 \'location\',\n                                                                                                                  \'type\': \'string\',\n                                                                                                                  \'minLength\': 1}}}]}}}},\n                    \'funding\': {\'type\': \'array\',\n                                \'items\': {\'type\': \'object\',\n                                          \'additionalProperties\': False,\n                                          \'properties\': {\'funder\': {\'type\': \'object\',\n                                                                    \'additionalProperties\': False,\n                                                                    \'properties\': {\'name\': {\'type\': \'string\'},\n                                                                                   \'id\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'}}},\n                                                         \'award\': {\'type\': \'object\',\n                                                                   \'additionalProperties\': False,\n                                                                   \'properties\': {\'title\': {\'type\': \'object\'},\n                                                                                  \'number\': {\'type\': \'string\'},\n                                                                                  \'id\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                                                  \'identifiers\': {\'type\': \'array\',\n                                                                                                  \'items\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifiers_with_scheme\'}}}}}}},\n                    \'references\': {\'type\': \'array\',\n                                   \'minItems\': 0,\n                                   \'items\': {\'type\': \'object\',\n                                             \'additionalProperties\': False,\n                                             \'properties\': {\'reference\': {\'type\': \'string\',\n                                                                          \'description\': \'A \'\n                                                                                         \'reference \'\n                                                                                         \'string.\'},\n                                                            \'identifier\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                            \'scheme\': {\'$ref\': \'local://definitions-v1.0.0.json#/scheme\'}}}}}}\n\nOn instance[\'metadata\']:\n    {\'d\': \'1987-08-17\',\n     \'dt\': \'2022-01-13T18:20:59.885839+01:00\',\n     \'ed\': \'2017\',\n     \'edi\': \'1995/2012\',\n     \'edt\': \'2018-05-18\',\n     \'edti\': \'1970-04-05/1981-11\',\n     \'f\': 6.0,\n     \'ht\': \'<div>Enter participant purpose never degree light significant \'\n           \'certainly.</div><p>Yourself true model nor south \'\n           \'pretty.</p><p>Region similar tonight lose.</p><p>Suggest \'\n           \'outside table can rock may conference remember.</p>\',\n     \'i\': 822,\n     \'kw\': \'Lawyer lose recent Democrat board mean analysis successful.\',\n     \'t\': \'15:02:19\',\n     \'tx\': \'Free lose late.\'}\n\n\n-->\n'
idx = 0

    def raw_decode(self, s, idx=0):
        """Decode a JSON document from ``s`` (a ``str`` beginning with
        a JSON document) and return a 2-tuple of the Python
        representation and the index in ``s`` where the document ended.
    
        This can be used to decode a JSON document from a string that may
        have extraneous data at the end.
    
        """
        try:
            obj, end = self.scan_once(s, idx)
        except StopIteration as err:
>           raise JSONDecodeError("Expecting value", s, err.value) from None
E           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

/opt/homebrew/Cellar/python@3.12/3.12.7_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py:355: JSONDecodeError

During handling of the above exception, another exception occurred:

    def test_running_server():
        while True:
            data = requests.get(
                "https://127.0.0.1:5000/api/complex-model", verify=False  # NOSONAR
            ).json()
            if not data["hits"]["hits"]:
                break
            for hit in data["hits"]["hits"]:
                requests.delete(hit["links"]["self"], verify=False)  # NOSONAR
    
        assert data == {
            "hits": {"hits": [], "total": 0},
            "aggregations": {
                "metadata_d": {"buckets": [], "label": "metadata/d.label"},
                "metadata_dt": {"buckets": [], "label": "metadata/dt.label"},
                "metadata_ed": {"buckets": [], "label": "metadata/ed.label"},
                "metadata_edt": {"buckets": [], "label": "metadata/edt.label"},
                "metadata_f": {"buckets": [], "label": "metadata/f.label"},
                "metadata_i": {"buckets": [], "label": "metadata/i.label"},
                "metadata_kw": {"buckets": [], "label": "metadata/kw.label"},
                "metadata_t": {"buckets": [], "label": "metadata/t.label"},
            },
            "sortBy": "newest",
            "links": {
                "self": "https://127.0.0.1:5000/api/complex-model/?page=1&size=25&sort=newest"
            },
        }
    
        records = []
        with open("complex-model/data/sample_data.yaml") as f:
            sample_data = list(yaml.safe_load_all(f))
            for d in sample_data:
                resp = requests.post(
                    "https://127.0.0.1:5000/api/complex-model",
                    json=d,
                    verify=False,  # NOSONAR
                )
>               data = resp.json()

tests-model/test_running_server.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Response [500]>, kwargs = {}

    def json(self, **kwargs):
        r"""Returns the json-encoded content of a response, if any.
    
        :param \*\*kwargs: Optional arguments that ``json.loads`` takes.
        :raises requests.exceptions.JSONDecodeError: If the response body does not
            contain valid json.
        """
    
        if not self.encoding and self.content and len(self.content) > 3:
            # No encoding set. JSON RFC 4627 section 3 states we should expect
            # UTF-8, -16 or -32. Detect which one to use; If the detection or
            # decoding fails, fall back to `self.text` (using charset_normalizer to make
            # a best guess).
            encoding = guess_json_utf(self.content)
            if encoding is not None:
                try:
                    return complexjson.loads(self.content.decode(encoding), **kwargs)
                except UnicodeDecodeError:
                    # Wrong UTF codec detected; usually because it's not UTF-8
                    # but some other 8-bit codec.  This is an RFC violation,
                    # and the server didn't bother to tell us what codec *was*
                    # used.
                    pass
                except JSONDecodeError as e:
                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
    
        try:
            return complexjson.loads(self.text, **kwargs)
        except JSONDecodeError as e:
            # Catch JSON-related errors and raise as requests.JSONDecodeError
            # This aliases json.JSONDecodeError and simplejson.JSONDecodeError
>           raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
E           requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

.venv-tests/lib/python3.12/site-packages/requests/models.py:978: JSONDecodeError
=============================== warnings summary ===============================
tests-model/test_running_server.py::test_running_server
  /Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-tests/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '127.0.0.1'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests-model/test_running_server.py::test_running_server - requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
========================= 1 failed, 1 warning in 0.24s =========================
2024-11-28 09:49:24.680925
Destroying database sqlite:////Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/var/instance/invenio.db
2024-11-28 09:49:27.509801

