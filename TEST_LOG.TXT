Log saved to complex-model/installation.log
2024-11-27 20:01:25.811680
Destroying database sqlite:////Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/var/instance/invenio.db
Sqlite database has not been initialised
2024-11-27 20:01:29.250076
Creating all tables!

Created all tables!
2024-11-27 20:01:32.108059

2024-11-27 20:01:34.096952

2024-11-27 20:01:39.207972
Location default ./simple-server/files as default True stored in database
2024-11-27 20:01:42.187436
User created successfully.
{'email': 'test@test.com', 'password': '****', 'active': True, 'confirmed_at': datetime.datetime(2024, 11, 27, 19, 1, 42, 864594)}
Waiting for server to start
[2024-11-27 20:01:47,333] DEBUG in ext: Flask-DebugToolbar extension not installed.
[2024-11-27 20:01:47,418] WARNING in ext: JSONSCHEMAS_HOST is set to localhost
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_caching/__init__.py:145: DeprecationWarning: Using the initialization functions in flask_caching.backend is deprecated.  Use the a full path to backend classes directly.
  self._set_cache(app, config)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/scaffold.py:50: DeprecationWarning: 'before_first_request' is deprecated and will be removed in Flask 2.3. Run setup code while creating the application instead.
  return f(self, *args, **kwargs)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_admin/contrib/__init__.py:2: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('flask_admin.contrib')`.
Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages
  __import__('pkg_resources').declare_namespace(__name__)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/pkg_resources/__init__.py:2563: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('flask_admin')`.
Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages
  declare_namespace(parent)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/scaffold.py:50: DeprecationWarning: 'before_app_first_request' is deprecated and will be removed in Flask 2.3. Use 'record_once' instead to run setup code when registering the blueprint.
  return f(self, *args, **kwargs)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_config/default.py:77: UserWarning: Set configuration variable SECRET_KEY with random string
  warnings.warn(

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RDMRecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RDMFileRecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RDMMediaFileRecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.ComplexModelMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.PageModelVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.PageListVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RecordMetadataVersion->records_metadata_version, primary key column 'records_metadata_version.transaction_id' is being combined with distinct primary key column 'records_metadata_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RecordMetadataVersion.transaction' will copy column transaction.id to column records_metadata_version.transaction_id, which conflicts with relationship(s): 'RecordMetadataVersion.transaction' (copies transaction.id to records_metadata_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RDMRecordMetadataVersion->rdm_records_metadata_version, primary key column 'rdm_records_metadata_version.transaction_id' is being combined with distinct primary key column 'rdm_records_metadata_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RDMRecordMetadataVersion.transaction' will copy column transaction.id to column rdm_records_metadata_version.transaction_id, which conflicts with relationship(s): 'RDMRecordMetadataVersion.transaction' (copies transaction.id to rdm_records_metadata_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RDMRecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RDMFileRecordMetadataVersion->rdm_records_files_version, primary key column 'rdm_records_files_version.transaction_id' is being combined with distinct primary key column 'rdm_records_files_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RDMFileRecordMetadataVersion.transaction' will copy column transaction.id to column rdm_records_files_version.transaction_id, which conflicts with relationship(s): 'RDMFileRecordMetadataVersion.transaction' (copies transaction.id to rdm_records_files_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RDMFileRecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RDMMediaFileRecordMetadataVersion->rdm_records_media_files_version, primary key column 'rdm_records_media_files_version.transaction_id' is being combined with distinct primary key column 'rdm_records_media_files_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RDMMediaFileRecordMetadataVersion.transaction' will copy column transaction.id to column rdm_records_media_files_version.transaction_id, which conflicts with relationship(s): 'RDMMediaFileRecordMetadataVersion.transaction' (copies transaction.id to rdm_records_media_files_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RDMMediaFileRecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class ComplexModelMetadataVersion->complex_model_metadata_version, primary key column 'complex_model_metadata_version.transaction_id' is being combined with distinct primary key column 'complex_model_metadata_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'ComplexModelMetadataVersion.transaction' will copy column transaction.id to column complex_model_metadata_version.transaction_id, which conflicts with relationship(s): 'ComplexModelMetadataVersion.transaction' (copies transaction.id to complex_model_metadata_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'ComplexModelMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class PageModelVersion->pages_page_version, primary key column 'pages_page_version.transaction_id' is being combined with distinct primary key column 'pages_page_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'PageModelVersion.transaction' will copy column transaction.id to column pages_page_version.transaction_id, which conflicts with relationship(s): 'PageModelVersion.transaction' (copies transaction.id to pages_page_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'PageModelVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class PageListVersion->pages_pagelist_version, primary key column 'pages_pagelist_version.transaction_id' is being combined with distinct primary key column 'pages_pagelist_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'PageListVersion.transaction' will copy column transaction.id to column pages_pagelist_version.transaction_id, which conflicts with relationship(s): 'PageListVersion.transaction' (copies transaction.id to pages_pagelist_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'PageListVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_oaiserver/ext.py:169: UserWarning: Please specify the OAISERVER_ID_PREFIX configuration.default value is: oai:Alzbetas-MacBook-Pro.local:
  warnings.warn(

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_caching/__init__.py:145: DeprecationWarning: Using the initialization functions in flask_caching.backend is deprecated.  Use the a full path to backend classes directly.
  self._set_cache(app, config)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:751: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  parts = parts or [ast.Str("")]

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:748: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  _convert(elem) if is_dynamic else ast.Str(s=elem)

/opt/homebrew/Cellar/python@3.12/3.12.7_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:587: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead
  return Constant(*args, **kwargs)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:755: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  if isinstance(p, ast.Str) and isinstance(ret[-1], ast.Str):

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead
  ret[-1] = ast.Str(ret[-1].s + p.s)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  ret[-1] = ast.Str(ret[-1].s + p.s)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_rest/ext.py:30: FutureWarning: CSRF validation will be enabled by default in the version 1.3.x
  self.init_app(app)

[2024-11-27 20:01:48,106] WARNING in ext: JSONSCHEMAS_HOST is set to localhost
[2024-11-27 20:01:48,161] DEBUG in ext: Flask-DebugToolbar extension not installed.
2024-11-27 20:01:47.210796
 * Debug mode: on
[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on https://127.0.0.1:5000
[33mPress CTRL+C to quit[0m
 * Restarting with watchdog (fsevents)
[2024-11-27 20:01:50,039] DEBUG in ext: Flask-DebugToolbar extension not installed.
[2024-11-27 20:01:50,077] WARNING in ext: JSONSCHEMAS_HOST is set to localhost
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/scaffold.py:50: DeprecationWarning: 'before_app_first_request' is deprecated and will be removed in Flask 2.3. Use 'record_once' instead to run setup code when registering the blueprint.
  return f(self, *args, **kwargs)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_config/default.py:77: UserWarning: Set configuration variable SECRET_KEY with random string
  warnings.warn(

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.PageModelVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.PageListVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RDMRecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RDMFileRecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.RDMMediaFileRecordMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/model.py:121: SAWarning: This declarative base already contains a class with the same class name and module name as sqlalchemy_continuum.model_builder.ComplexModelMetadataVersion, and will be replaced in the string-lookup table.
  super(BindMetaMixin, cls).__init__(name, bases, d)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RecordMetadataVersion->records_metadata_version, primary key column 'records_metadata_version.transaction_id' is being combined with distinct primary key column 'records_metadata_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RecordMetadataVersion.transaction' will copy column transaction.id to column records_metadata_version.transaction_id, which conflicts with relationship(s): 'RecordMetadataVersion.transaction' (copies transaction.id to records_metadata_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class PageModelVersion->pages_page_version, primary key column 'pages_page_version.transaction_id' is being combined with distinct primary key column 'pages_page_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'PageModelVersion.transaction' will copy column transaction.id to column pages_page_version.transaction_id, which conflicts with relationship(s): 'PageModelVersion.transaction' (copies transaction.id to pages_page_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'PageModelVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class PageListVersion->pages_pagelist_version, primary key column 'pages_pagelist_version.transaction_id' is being combined with distinct primary key column 'pages_pagelist_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'PageListVersion.transaction' will copy column transaction.id to column pages_pagelist_version.transaction_id, which conflicts with relationship(s): 'PageListVersion.transaction' (copies transaction.id to pages_pagelist_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'PageListVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RDMRecordMetadataVersion->rdm_records_metadata_version, primary key column 'rdm_records_metadata_version.transaction_id' is being combined with distinct primary key column 'rdm_records_metadata_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RDMRecordMetadataVersion.transaction' will copy column transaction.id to column rdm_records_metadata_version.transaction_id, which conflicts with relationship(s): 'RDMRecordMetadataVersion.transaction' (copies transaction.id to rdm_records_metadata_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RDMRecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RDMFileRecordMetadataVersion->rdm_records_files_version, primary key column 'rdm_records_files_version.transaction_id' is being combined with distinct primary key column 'rdm_records_files_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RDMFileRecordMetadataVersion.transaction' will copy column transaction.id to column rdm_records_files_version.transaction_id, which conflicts with relationship(s): 'RDMFileRecordMetadataVersion.transaction' (copies transaction.id to rdm_records_files_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RDMFileRecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class RDMMediaFileRecordMetadataVersion->rdm_records_media_files_version, primary key column 'rdm_records_media_files_version.transaction_id' is being combined with distinct primary key column 'rdm_records_media_files_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'RDMMediaFileRecordMetadataVersion.transaction' will copy column transaction.id to column rdm_records_media_files_version.transaction_id, which conflicts with relationship(s): 'RDMMediaFileRecordMetadataVersion.transaction' (copies transaction.id to rdm_records_media_files_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'RDMMediaFileRecordMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: On mapper mapped class ComplexModelMetadataVersion->complex_model_metadata_version, primary key column 'complex_model_metadata_version.transaction_id' is being combined with distinct primary key column 'complex_model_metadata_version.transaction_id' in attribute 'transaction_id'. Use explicit properties to give each column its own mapped attribute name.
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy_continuum/builder.py:123: SAWarning: relationship 'ComplexModelMetadataVersion.transaction' will copy column transaction.id to column complex_model_metadata_version.transaction_id, which conflicts with relationship(s): 'ComplexModelMetadataVersion.transaction' (copies transaction.id to complex_model_metadata_version.transaction_id). If this is not the intention, consider if these relationships should be linked with back_populates, or if viewonly=True should be applied to one or more if they are read-only. For the less common case that foreign key constraints are partially overlapping, the orm.foreign() annotation can be used to isolate the columns that should be written towards.   To silence this warning, add the parameter 'overlaps="transaction"' to the 'ComplexModelMetadataVersion.transaction' relationship. (Background on this error at: https://sqlalche.me/e/14/qzyx)
  for prop in sa.inspect(cls).iterate_properties:

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_rest/ext.py:30: FutureWarning: CSRF validation will be enabled by default in the version 1.3.x
  self.init_app(app)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:751: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  parts = parts or [ast.Str("")]

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:748: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  _convert(elem) if is_dynamic else ast.Str(s=elem)

/opt/homebrew/Cellar/python@3.12/3.12.7_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:587: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead
  return Constant(*args, **kwargs)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:755: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  if isinstance(p, ast.Str) and isinstance(ret[-1], ast.Str):

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: Attribute s is deprecated and will be removed in Python 3.14; use value instead
  ret[-1] = ast.Str(ret[-1].s + p.s)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/routing/rules.py:756: DeprecationWarning: ast.Str is deprecated and will be removed in Python 3.14; use ast.Constant instead
  ret[-1] = ast.Str(ret[-1].s + p.s)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_caching/__init__.py:145: DeprecationWarning: Using the initialization functions in flask_caching.backend is deprecated.  Use the a full path to backend classes directly.
  self._set_cache(app, config)

[2024-11-27 20:01:50,239] DEBUG in ext: Flask-DebugToolbar extension not installed.
[2024-11-27 20:01:50,290] WARNING in ext: JSONSCHEMAS_HOST is set to localhost
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_oaiserver/ext.py:169: UserWarning: Please specify the OAISERVER_ID_PREFIX configuration.default value is: oai:Alzbetas-MacBook-Pro.local:
  warnings.warn(

 * Debugger is active!
 * Debugger PIN: 899-457-799
metadata:
  d: '1999-08-09'
  dt: '2021-09-11T01:23:40.411257+09:00'
  ed: 1986-04
  edi: 2014-06-18/2018
  edt: '1990'
  edti: 1977/2009
  f: -6.2
  ht: <p>Floor wear seat must.</p><div>Tend heart party bad fish.</div><div>Key pressure
    develop pressure.</div><div>Alone generation opportunity style.</div>
  i: 9324
  kw: Fill fish anything can.
  t: 05:03:00
  tx: Really though ok but.
---
metadata:
  d: '2003-08-07'
  dt: '2020-01-02T09:06:18.613820+01:00'
  ed: '1986-05-25'
  edi: 1977-03/2014-09-16
  edt: 2012-03
  edti: 2000/2022-11
  f: -8.6
  ht: <div>Instead unit within small difficult.</div><p>In attorney per control enter
    myself.</p><p>Benefit worker hour personal.</p><div>Candidate wear stop media
    majority head participant notice.</div>
  i: 255
  kw: Recognize purpose be partner network success girl.
  t: '22:57:00'
  tx: Everything concern public follow fire.
---
metadata:
  d: '1978-05-26'
  dt: '2023-02-22T01:26:10.261133+01:00'
  ed: '1970-04-16'
  edi: 2017-10-01/2022
  edt: '1997-07-14'
  edti: 1970-02-05/2001-03
  f: 3.7
  ht: <div>Born guess apply provide less head prove.</div><span>Technology head officer
    already unit computer usually.</span><span>Throw various travel short author.</span><div>Gun
    moment share executive exactly doctor.</div>
  i: 450
  kw: Happy same continue onto investment else.
  t: '16:55:06'
  tx: Cultural tend when deep claim put remain.
---
metadata:
  d: '2002-02-10'
  dt: '2023-09-01T05:39:07.040726+02:00'
  ed: '2009'
  edi: 1995-03/2013-10-29
  edt: '2005'
  edti: 1974/1981-05-31
  f: 8.1
  ht: <div>Suddenly heart discuss deal education where.</div><p>Science mention light
    wish determine.</p><div>Final best establish any seem.</div><span>Hospital none
    oil worker.</span>
  i: 2640
  kw: Player spend spring six do writer.
  t: 01:24:14
  tx: Stock throw amount human organization.
---
metadata:
  d: '2011-02-13'
  dt: '2021-09-04T15:23:20.604015+09:00'
  ed: '2009-10-31'
  edi: 1996-03/2016-06-27
  edt: '1990'
  edti: 1995-05/1999
  f: -3.8
  ht: <span>Morning goal huge project Mrs husband.</span><p>Growth arm son lawyer
    serious himself fast point.</p><div>These employee into argue.</div><div>Even
    voice before less.</div>
  i: 2980
  kw: Actually son out address age side reflect.
  t: '15:49:56'
  tx: Drug prepare owner season student.
---
metadata:
  d: '2000-03-12'
  dt: '2023-12-26T10:22:07.186635+02:00'
  ed: '1977-03-07'
  edi: 2008-08/2020
  edt: 1994-07
  edti: 1972-08-04/2023
  f: 8.1
  ht: <span>Manager manage increase by sure.</span><p>Bed employee become on wide
    listen.</p><div>Rule dream identify event treat today type.</div><span>Past letter
    street.</span>
  i: 7950
  kw: Ever movement physical particularly.
  t: 06:33:44
  tx: Leader until leg beyond whose.
---
metadata:
  d: '2020-03-20'
  dt: '2021-05-25T04:13:59.630012+10:30'
  ed: 2005-02
  edi: 1986-12/2001-02-22
  edt: 1990-02
  edti: 1987/2004
  f: -4.9
  ht: <div>Line very group bag.</div><p>Model risk thank there find occur.</p><span>Lawyer
    industry perhaps station commercial.</span><span>Western forward center.</span>
  i: 854
  kw: Actually it ask show play reality hard.
  t: 01:22:07
  tx: Education word fish stand wide million case whose.
---
metadata:
  d: '1999-08-30'
  dt: '2023-01-08T21:04:38.997072+02:00'
  ed: '1977-08-10'
  edi: 1978-08/1995-12
  edt: '2011'
  edti: 1970/2009
  f: -5.8
  ht: <p>North piece better.</p><span>Treat arrive better test fight health.</span><div>Opportunity
    yard street affect agent.</div><span>A resource allow agree chair same top.</span>
  i: 1427
  kw: Under design information then son.
  t: '18:51:51'
  tx: Scientist decide according.
---
metadata:
  d: '1994-03-07'
  dt: '2021-04-21T12:53:06.431283+09:00'
  ed: 1987-11
  edi: 2005-02/2011-05-29
  edt: '1978'
  edti: 1970-09/2016
  f: -8.0
  ht: <span>Church sometimes agent recognize management similar.</span><span>Among
    act employee political dark interview year.</span><p>Work remain company leave.</p><div>Let
    hand member public arm hope.</div>
  i: 4033
  kw: Next all action health appear old wrong.
  t: '12:38:21'
  tx: Traditional store resource goal always.
---
metadata:
  d: '1999-06-04'
  dt: '2023-05-09T09:38:40.869830-04:00'
  ed: 1981-06
  edi: 1991/1997
  edt: 1996-12
  edti: 1977/1983
  f: -3.0
  ht: <div>Her pull result.</div><span>Know science I Mrs.</span><p>High wait structure
    everybody story.</p><div>Until teacher car less.</div>
  i: 9641
  kw: Power model only firm.
  t: 01:56:41
  tx: Accept who beat far black thank television network.
============================= test session starts ==============================
platform darwin -- Python 3.12.7, pytest-8.3.3, pluggy-1.5.0 -- /Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-tests/bin/python3.12
cachedir: .pytest_cache
rootdir: /Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder
configfile: setup.cfg
plugins: anyio-4.6.2.post1
collecting ... collected 1 item

tests-model/test_running_server.py::test_running_server 127.0.0.1 - - [27/Nov/2024 20:01:51] "[32mGET /api/complex-model HTTP/1.1[0m" 308 -
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/__init__.py:302: DeprecationWarning: '_app_ctx_stack' is deprecated and will be removed in Flask 2.3. Use 'g' to store data, or 'app_ctx' to access the current context.
  queries = _app_ctx_stack.top.sqlalchemy_queries

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_sqlalchemy/__init__.py:304: DeprecationWarning: '_app_ctx_stack' is deprecated and will be removed in Flask 2.3. Use 'g' to store data, or 'app_ctx' to access the current context.
  queries = _app_ctx_stack.top.sqlalchemy_queries = []

127.0.0.1 - - [27/Nov/2024 20:01:51] "GET /api/complex-model/ HTTP/1.1" 200 -
127.0.0.1 - - [27/Nov/2024 20:01:51] "[32mPOST /api/complex-model HTTP/1.1[0m" 308 -
/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/sqlalchemy/sql/schema.py:2783: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  return util.wrap_callable(lambda ctx: fn(), fn)

/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/models.py:44: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).
  target.updated = datetime.utcnow()

127.0.0.1 - - [27/Nov/2024 20:01:51] "[35m[1mPOST /api/complex-model/ HTTP/1.1[0m" 500 -
Traceback (most recent call last):
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2552, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/middleware/dispatcher.py", line 78, in __call__
    return app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2552, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2532, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2529, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 1825, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 1823, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 1799, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/resources.py", line 65, in view
    return view_meth()
           ^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/content_negotiation.py", line 116, in inner_content_negotiation
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py", line 51, in inner
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py", line 90, in inner
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/responses.py", line 39, in inner
    res = f(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/resources/records/resource.py", line 93, in create
    item = self.service.create(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 376, in inner
    res = f(self, *args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_drafts_resources/services/records/service.py", line 309, in create
    res = self._create(
          ^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 380, in inner
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/records/service.py", line 365, in _create
    uow.register(RecordCommitOp(record, self.indexer))
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 349, in register
    op.on_register(self)
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 176, in on_register
    self._record.commit()
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py", line 453, in commit
    json = self._validate(format_checker=format_checker, validator=validator)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py", line 193, in _validate
    _records_state.validate(
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/ext.py", line 67, in validate
    return validate(data, schema, cls=validator_cls, resolver=resolver, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/jsonschema/validators.py", line 1332, in validate
    raise error
jsonschema.exceptions.ValidationError: Additional properties are not allowed ('d', 'dt', 'ed', 'edi', 'edt', 'edti', 'f', 'ht', 'i', 'kw', 't', 'tx' were unexpected)

Failed validating 'additionalProperties' in schema['properties']['metadata']:
    {'type': 'object',
     'description': 'Resource metadata.',
     'additionalProperties': False,
     'properties': {'resource_type': {'$ref': 'local://records/definitions-v2.0.0.json#/resource_type'},
                    'creators': {'description': 'Creators of the resource.',
                                 'type': 'array',
                                 'items': {'type': 'object',
                                           'additionalProperties': False,
                                           'properties': {'person_or_org': {'$ref': 'local://records/definitions-v2.0.0.json#/person_or_org'},
                                                          'role': {'$ref': 'local://records/definitions-v2.0.0.json#/role'},
                                                          'affiliations': {'$ref': 'local://records/definitions-v2.0.0.json#/affiliations'}}}},
                    'title': {'description': 'Primary title of the record.',
                              'type': 'string'},
                    'additional_titles': {'description': 'Additional '
                                                         'record titles.',
                                          'type': 'array',
                                          'items': {'type': 'object',
                                                    'additionalProperties': False,
                                                    'properties': {'title': {'description': 'Additional '
                                                                                            'title '
                                                                                            'of '
                                                                                            'the '
                                                                                            'record.',
                                                                             'type': 'string'},
                                                                   'type': {'$ref': 'local://records/definitions-v2.0.0.json#/title_type'},
                                                                   'lang': {'$ref': 'local://records/definitions-v2.0.0.json#/language'}}}},
                    'publisher': {'type': 'string'},
                    'publication_date': {'description': 'Record '
                                                        'publication date '
                                                        '(EDTF level 0 '
                                                        'format).',
                                         'type': 'string'},
                    'subjects': {'$ref': 'local://records/definitions-v2.0.0.json#/subjects'},
                    'contributors': {'description': 'Contributors in order '
                                                    'of importance.',
                                     'type': 'array',
                                     'items': {'type': 'object',
                                               'additionalProperties': False,
                                               'properties': {'person_or_org': {'$ref': 'local://records/definitions-v2.0.0.json#/person_or_org'},
                                                              'role': {'$ref': 'local://records/definitions-v2.0.0.json#/role'},
                                                              'affiliations': {'$ref': 'local://records/definitions-v2.0.0.json#/affiliations'}}}},
                    'dates': {'description': 'Date, datetime or date '
                                             'interval.',
                              'type': 'array',
                              'items': {'type': 'object',
                                        'additionalProperties': False,
                                        'properties': {'date': {'description': 'Date, '
                                                                               'datetime '
                                                                               'or '
                                                                               'date '
                                                                               'interval '
                                                                               'in '
                                                                               'EDTF '
                                                                               'level '
                                                                               '0 '
                                                                               'format',
                                                                'type': 'string'},
                                                       'type': {'$ref': 'local://records/definitions-v2.0.0.json#/date_type'},
                                                       'description': {'description': 'Description '
                                                                                      'of '
                                                                                      'the '
                                                                                      'date, '
                                                                                      'datetime '
                                                                                      'or '
                                                                                      'date '
                                                                                      'interval '
                                                                                      'e.g. '
                                                                                      "'Accepted' "
                                                                                      'or '
                                                                                      "'Available' "
                                                                                      '(CV).',
                                                                       'type': 'string'}}}},
                    'languages': {'description': 'The primary languages of '
                                                 'the resource. ISO 639-3 '
                                                 'language code.',
                                  'type': 'array',
                                  'items': {'$ref': 'local://records/definitions-v2.0.0.json#/language'}},
                    'identifiers': {'description': 'Alternate identifiers '
                                                   'for the record.',
                                    'type': 'array',
                                    'items': {'$ref': 'local://definitions-v1.0.0.json#/identifiers_with_scheme'},
                                    'uniqueItems': True},
                    'related_identifiers': {'type': 'array',
                                            'items': {'type': 'object',
                                                      'additionalProperties': False,
                                                      'properties': {'identifier': {'$ref': 'local://definitions-v1.0.0.json#/identifier'},
                                                                     'scheme': {'$ref': 'local://definitions-v1.0.0.json#/scheme'},
                                                                     'relation_type': {'$ref': 'local://records/definitions-v2.0.0.json#/relation_type'},
                                                                     'resource_type': {'$ref': 'local://records/definitions-v2.0.0.json#/resource_type'}}}},
                    'sizes': {'type': 'array', 'items': {'type': 'string'}},
                    'formats': {'type': 'array',
                                'items': {'type': 'string'}},
                    'version': {'description': 'Record version tag.',
                                'type': 'string'},
                    'rights': {'description': 'Any license or copyright '
                                              'information for this '
                                              'resource.',
                               'type': 'array',
                               'items': {'type': 'object',
                                         'additionalProperties': False,
                                         'properties': {'id': {'$ref': 'local://definitions-v1.0.0.json#/identifier'},
                                                        'title': {'description': 'The '
                                                                                 'license '
                                                                                 'name '
                                                                                 'or '
                                                                                 'license '
                                                                                 'itself. '
                                                                                 'Free '
                                                                                 'text.',
                                                                  'type': 'object'},
                                                        'description': {'description': 'The '
                                                                                       'license '
                                                                                       'description '
                                                                                       'Free '
                                                                                       'text.',
                                                                        'type': 'object'},
                                                        'link': {'type': 'string',
                                                                 'format': 'uri'}}}},
                    'description': {'description': 'Description for record '
                                                   '(may contain HTML).',
                                    'type': 'string'},
                    'additional_descriptions': {'type': 'array',
                                                'items': {'type': 'object',
                                                          'additionalProperties': False,
                                                          'properties': {'description': {'description': 'Description '
                                                                                                        'for '
                                                                                                        'record.',
                                                                                         'type': 'string'},
                                                                         'type': {'$ref': 'local://records/definitions-v2.0.0.json#/description_type'},
                                                                         'lang': {'$ref': 'local://records/definitions-v2.0.0.json#/language'}}}},
                    'locations': {'description': 'Geographical locations '
                                                 'relevant to this record.',
                                  '$comment': 'This part of the schema is '
                                              'modelled on GeoJSON, but '
                                              'without the scope to embed '
                                              'arbitrary metadata.\n'
                                              '\n'
                                              'We nest `features` within '
                                              '`locations` to give scope '
                                              'later to say something '
                                              'about the locations as a '
                                              'whole.',
                                  'type': 'object',
                                  'additionalProperties': False,
                                  'properties': {'features': {'type': 'array',
                                                              'minItems': 1,
                                                              'items': {'allOf': [{'type': 'object',
                                                                                   'additionalProperties': False,
                                                                                   'properties': {'geometry': {'allOf': [{'$ref': 'local://records/definitions-v2.0.0.json#/GeoJSON-Geometry'},
                                                                                                                         {'$comment': 'Bounding '
                                                                                                                                      'boxes '
                                                                                                                                      '(`bbox`) '
                                                                                                                                      'are '
                                                                                                                                      'forbidden '
                                                                                                                                      'on '
                                                                                                                                      'our '
                                                                                                                                      'geometries, '
                                                                                                                                      'even '
                                                                                                                                      'though '
                                                                                                                                      "they're "
                                                                                                                                      'allowed '
                                                                                                                                      'on '
                                                                                                                                      'GeoJSON '
                                                                                                                                      'geometries',
                                                                                                                          'properties': {'type': {},
                                                                                                                                         'coordinates': {}},
                                                                                                                          'additionalProperties': False}]},
                                                                                                  'identifiers': {'type': 'array',
                                                                                                                  'items': {'$ref': 'local://definitions-v1.0.0.json#/identifiers_with_scheme'},
                                                                                                                  'uniqueItems': True},
                                                                                                  'place': {'description': 'Place '
                                                                                                                           'of '
                                                                                                                           'the '
                                                                                                                           'location',
                                                                                                            'type': 'string',
                                                                                                            'minLength': 1},
                                                                                                  'description': {'description': 'Description '
                                                                                                                                 'of '
                                                                                                                                 'the '
                                                                                                                                 'location',
                                                                                                                  'type': 'string',
                                                                                                                  'minLength': 1}}}]}}}},
                    'funding': {'type': 'array',
                                'items': {'type': 'object',
                                          'additionalProperties': False,
                                          'properties': {'funder': {'type': 'object',
                                                                    'additionalProperties': False,
                                                                    'properties': {'name': {'type': 'string'},
                                                                                   'id': {'$ref': 'local://definitions-v1.0.0.json#/identifier'}}},
                                                         'award': {'type': 'object',
                                                                   'additionalProperties': False,
                                                                   'properties': {'title': {'type': 'object'},
                                                                                  'number': {'type': 'string'},
                                                                                  'id': {'$ref': 'local://definitions-v1.0.0.json#/identifier'},
                                                                                  'identifiers': {'type': 'array',
                                                                                                  'items': {'$ref': 'local://definitions-v1.0.0.json#/identifiers_with_scheme'}}}}}}},
                    'references': {'type': 'array',
                                   'minItems': 0,
                                   'items': {'type': 'object',
                                             'additionalProperties': False,
                                             'properties': {'reference': {'type': 'string',
                                                                          'description': 'A '
                                                                                         'reference '
                                                                                         'string.'},
                                                            'identifier': {'$ref': 'local://definitions-v1.0.0.json#/identifier'},
                                                            'scheme': {'$ref': 'local://definitions-v1.0.0.json#/scheme'}}}}}}

On instance['metadata']:
    {'d': '1999-08-09',
     'dt': '2021-09-11T01:23:40.411257+09:00',
     'ed': '1986-04',
     'edi': '2014-06-18/2018',
     'edt': '1990',
     'edti': '1977/2009',
     'f': -6.2,
     'ht': '<p>Floor wear seat must.</p><div>Tend heart party bad '
           'fish.</div><div>Key pressure develop pressure.</div><div>Alone '
           'generation opportunity style.</div>',
     'i': 9324,
     'kw': 'Fill fish anything can.',
     't': '05:03:00',
     'tx': 'Really though ok but.'}
FAILED           [100%]

=================================== FAILURES ===================================
_____________________________ test_running_server ______________________________

self = <Response [500]>, kwargs = {}

    def json(self, **kwargs):
        r"""Returns the json-encoded content of a response, if any.
    
        :param \*\*kwargs: Optional arguments that ``json.loads`` takes.
        :raises requests.exceptions.JSONDecodeError: If the response body does not
            contain valid json.
        """
    
        if not self.encoding and self.content and len(self.content) > 3:
            # No encoding set. JSON RFC 4627 section 3 states we should expect
            # UTF-8, -16 or -32. Detect which one to use; If the detection or
            # decoding fails, fall back to `self.text` (using charset_normalizer to make
            # a best guess).
            encoding = guess_json_utf(self.content)
            if encoding is not None:
                try:
                    return complexjson.loads(self.content.decode(encoding), **kwargs)
                except UnicodeDecodeError:
                    # Wrong UTF codec detected; usually because it's not UTF-8
                    # but some other 8-bit codec.  This is an RFC violation,
                    # and the server didn't bother to tell us what codec *was*
                    # used.
                    pass
                except JSONDecodeError as e:
                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
    
        try:
>           return complexjson.loads(self.text, **kwargs)

.venv-tests/lib/python3.12/site-packages/requests/models.py:974: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/homebrew/Cellar/python@3.12/3.12.7_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py:346: in loads
    return _default_decoder.decode(s)
/opt/homebrew/Cellar/python@3.12/3.12.7_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py:337: in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <json.decoder.JSONDecoder object at 0x1062a9a90>
s = '<!doctype html>\n<html lang=en>\n  <head>\n    <title>jsonschema.exceptions.ValidationError: Additional properties are not allowed (\'d\', \'dt\', \'ed\', \'edi\', \'edt\', \'edti\', \'f\', \'ht\', \'i\', \'kw\', \'t\', \'tx\' were unexpected)\n\nFailed validating \'additionalProperties\' in schema[\'properties\'][\'metadata\']:\n    {\'type\': \'object\',\n     \'description\': \'Resource metadata.\',\n     \'additionalProperties\': False,\n     \'properties\': {\'resource_type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/resource_type\'},\n                    \'creators\': {\'description\': \'Creators of the resource.\',\n                                 \'type\': \'array\',\n                                 \'items\': {\'type\': \'object\',\n                                           \'additionalProperties\': False,\n                                           \'properties\': {\'person_or_org\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/person_or_org\'},\n                                                          \'role\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/role\'},\n                                                          \'affiliations\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/affiliations\'}}}},\n                    \'title\': {\'description\': \'Primary title of the record.\',\n                              \'type\': \'string\'},\n                    \'additional_titles\': {\'description\': \'Additional \'\n                                                         \'record titles.\',\n                                          \'type\': \'array\',\n                                          \'items\': {\'type\': \'object\',\n                                                    \'additionalProperties\': False,\n                                                    \'properties\': {\'title\': {\'description\': \'Additional \'\n                                                                                            \'title \'\n                                                                                            \'of \'\n                                                                                            \'the \'\n                                                                                            \'record.\',\n                                                                             \'type\': \'string\'},\n                                                                   \'type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/title_type\'},\n                                                                   \'lang\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/language\'}}}},\n                    \'publisher\': {\'type\': \'string\'},\n                    \'publication_date\': {\'description\': \'Record \'\n                                                        \'publication date \'\n                                                        \'(EDTF level 0 \'\n                                                        \'format).\',\n                                         \'type\': \'string\'},\n                    \'subjects\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/subjects\'},\n                    \'contributors\': {\'description\': \'Contributors in order \'\n                                                    \'of importance.\',\n                                     \'type\': \'array\',\n                                     \'items\': {\'type\': \'object\',\n                                               \'additionalProperties\': False,\n                                               \'properties\': {\'person_or_org\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/person_or_org\'},\n                                                              \'role\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/role\'},\n                                                              \'affiliations\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/affiliations\'}}}},\n                    \'dates\': {\'description\': \'Date, datetime or date \'\n                                             \'interval.\',\n                              \'type\': \'array\',\n                              \'items\': {\'type\': \'object\',\n                                        \'additionalProperties\': False,\n                                        \'properties\': {\'date\': {\'description\': \'Date, \'\n                                                                               \'datetime \'\n                                                                               \'or \'\n                                                                               \'date \'\n                                                                               \'interval \'\n                                                                               \'in \'\n                                                                               \'EDTF \'\n                                                                               \'level \'\n                                                                               \'0 \'\n                                                                               \'format\',\n                                                                \'type\': \'string\'},\n                                                       \'type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/date_type\'},\n                                                       \'description\': {\'description\': \'Description \'\n                                                                                      \'of \'\n                                                                                      \'the \'\n                                                                                      \'date, \'\n                                                                                      \'datetime \'\n                                                                                      \'or \'\n                                                                                      \'date \'\n                                                                                      \'interval \'\n                                                                                      \'e.g. \'\n                                                                                      "\'Accepted\' "\n                                                                                      \'or \'\n                                                                                      "\'Available\' "\n                                                                                      \'(CV).\',\n                                                                       \'type\': \'string\'}}}},\n                    \'languages\': {\'description\': \'The primary languages of \'\n                                                 \'the resource. ISO 639-3 \'\n                                                 \'language code.\',\n                                  \'type\': \'array\',\n                                  \'items\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/language\'}},\n                    \'identifiers\': {\'description\': \'Alternate identifiers \'\n                                                   \'for the record.\',\n                                    \'type\': \'array\',\n                                    \'items\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifiers_with_scheme\'},\n                                    \'uniqueItems\': True},\n                    \'related_identifiers\': {\'type\': \'array\',\n                                            \'items\': {\'type\': \'object\',\n                                                      \'additionalProperties\': False,\n                                                      \'properties\': {\'identifier\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                                     \'scheme\': {\'$ref\': \'local://definitions-v1.0.0.json#/scheme\'},\n                                                                     \'relation_type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/relation_type\'},\n                                                                     \'resource_type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/resource_type\'}}}},\n                    \'sizes\': {\'type\': \'array\', \'items\': {\'type\': \'string\'}},\n                    \'formats\': {\'type\': \'array\',\n                                \'items\': {\'type\': \'string\'}},\n                    \'version\': {\'description\': \'Record version tag.\',\n                                \'type\': \'string\'},\n                    \'rights\': {\'description\': \'Any license or copyright \'\n                                              \'information for this \'\n                                              \'resource.\',\n                               \'type\': \'array\',\n                               \'items\': {\'type\': \'object\',\n                                         \'additionalProperties\': False,\n                                         \'properties\': {\'id\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                        \'title\': {\'description\': \'The \'\n                                                                                 \'license \'\n                                                                                 \'name \'\n                                                                                 \'or \'\n                                                                                 \'license \'\n                                                                                 \'itself. \'\n                                                                                 \'Free \'\n                                                                                 \'text.\',\n                                                                  \'type\': \'object\'},\n                                                        \'description\': {\'description\': \'The \'\n                                                                                       \'license \'\n                                                                                       \'description \'\n                                                                                       \'Free \'\n                                                                                       \'text.\',\n                                                                        \'type\': \'object\'},\n                                                        \'link\': {\'type\': \'string\',\n                                                                 \'format\': \'uri\'}}}},\n                    \'description\': {\'description\': \'Description for record \'\n                                                   \'(may contain HTML).\',\n                                    \'type\': \'string\'},\n                    \'additional_descriptions\': {\'type\': \'array\',\n                                                \'items\': {\'type\': \'object\',\n                                                          \'additionalProperties\': False,\n                                                          \'properties\': {\'description\': {\'description\': \'Description \'\n                                                                                                        \'for \'\n                                                                                                        \'record.\',\n                                                                                         \'type\': \'string\'},\n                                                                         \'type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/description_type\'},\n                                                                         \'lang\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/language\'}}}},\n                    \'locations\': {\'description\': \'Geographical locations \'\n                                                 \'relevant to this record.\',\n                                  \'$comment\': \'This part of the schema is \'\n                                              \'modelled on GeoJSON, but \'\n                                              \'without the scope to embed \'\n                                              \'arbitrary metadata.\\n\'\n                                              \'\\n\'\n                                              \'We nest `features` within \'\n                                              \'`locations` to give scope \'\n                                              \'later to say something \'\n                                              \'about the locations as a \'\n                                              \'whole.\',\n                                  \'type\': \'object\',\n                                  \'additionalProperties\': False,\n                                  \'properties\': {\'features\': {\'type\': \'array\',\n                                                              \'minItems\': 1,\n                                                              \'items\': {\'allOf\': [{\'type\': \'object\',\n                                                                                   \'additionalProperties\': False,\n                                                                                   \'properties\': {\'geometry\': {\'allOf\': [{\'$ref\': \'local://records/definitions-v2.0.0.json#/GeoJSON-Geometry\'},\n                                                                                                                         {\'$comment\': \'Bounding \'\n                                                                                                                                      \'boxes \'\n                                                                                                                                      \'(`bbox`) \'\n                                                                                                                                      \'are \'\n                                                                                                                                      \'forbidden \'\n                                                                                                                                      \'on \'\n                                                                                                                                      \'our \'\n                                                                                                                                      \'geometries, \'\n                                                                                                                                      \'even \'\n                                                                                                                                      \'though \'\n                                                                                                                                      "they\'re "\n                                                                                                                                      \'allowed \'\n                                                                                                                                      \'on \'\n                                                                                                                                      \'GeoJSON \'\n                                                                                                                                      \'geometries\',\n                                                                                                                          \'properties\': {\'type\': {},\n                                                                                                                                         \'coordinates\': {}},\n                                                                                                                          \'additionalProperties\': False}]},\n                                                                                                  \'identifiers\': {\'type\': \'array\',\n                                                                                                                  \'items\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifiers_with_scheme\'},\n                                                                                                                  \'uniqueItems\': True},\n                                                                                                  \'place\': {\'description\': \'Place \'\n                                                                                                                           \'of \'\n                                                                                                                           \'the \'\n                                                                                                                           \'location\',\n                                                                                                            \'type\': \'string\',\n                                                                                                            \'minLength\': 1},\n                                                                                                  \'description\': {\'description\': \'Description \'\n                                                                                                                                 \'of \'\n                                                                                                                                 \'the \'\n                                                                                                                                 \'location\',\n                                                                                                                  \'type\': \'string\',\n                                                                                                                  \'minLength\': 1}}}]}}}},\n                    \'funding\': {\'type\': \'array\',\n                                \'items\': {\'type\': \'object\',\n                                          \'additionalProperties\': False,\n                                          \'properties\': {\'funder\': {\'type\': \'object\',\n                                                                    \'additionalProperties\': False,\n                                                                    \'properties\': {\'name\': {\'type\': \'string\'},\n                                                                                   \'id\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'}}},\n                                                         \'award\': {\'type\': \'object\',\n                                                                   \'additionalProperties\': False,\n                                                                   \'properties\': {\'title\': {\'type\': \'object\'},\n                                                                                  \'number\': {\'type\': \'string\'},\n                                                                                  \'id\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                                                  \'identifiers\': {\'type\': \'array\',\n                                                                                                  \'items\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifiers_with_scheme\'}}}}}}},\n                    \'references\': {\'type\': \'array\',\n                                   \'minItems\': 0,\n                                   \'items\': {\'type\': \'object\',\n                                             \'additionalProperties\': False,\n                                             \'properties\': {\'reference\': {\'type\': \'string\',\n                                                                          \'description\': \'A \'\n                                                                                         \'reference \'\n                                                                                         \'string.\'},\n                                                            \'identifier\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                            \'scheme\': {\'$ref\': \'local://definitions-v1.0.0.json#/scheme\'}}}}}}\n\nOn instance[\'metadata\']:\n    {\'d\': \'1999-08-09\',\n     \'dt\': \'2021-09-11T01:23:40.411257+09:00\',\n     \'ed\': \'1986-04\',\n     \'edi\': \'2014-06-18/2018\',\n     \'edt\': \'1990\',\n     \'edti\': \'1977/2009\',\n     \'f\': -6.2,\n     \'ht\': \'<p>Floor wear seat must.</p><div>Tend heart party bad \'\n           \'fish.</div><div>Key pressure develop pressure.</div><div>Alone \'\n           \'generation opportunity style.</div>\',\n     \'i\': 9324,\n     \'kw\': \'Fill fish anything can.\',\n     \'t\': \'05:03:00\',\n     \'tx\': \'Really though ok but.\'}\n // Werkzeug Debugger</title>\n    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">\n    <link rel="shortcut icon"\n        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">\n    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>\n    <script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = "C7Wwfxu6i6TksROr0qvd";\n    </script>\n  </head>\n  <body style="background-color: #fff">\n    <div class="debugger">\n<h1>ValidationError</h1>\n<div class="detail">\n  <p class="errormsg">jsonschema.exceptions.ValidationError: Additional properties are not allowed (&#39;d&#39;, &#39;dt&#39;, &#39;ed&#39;, &#39;edi&#39;, &#39;edt&#39;, &#39;edti&#39;, &#39;f&#39;, &#39;ht&#39;, &#39;i&#39;, &#39;kw&#39;, &#39;t&#39;, &#39;tx&#39; were unexpected)\n\nFailed validating &#39;additionalProperties&#39; in schema[&#39;properties&#39;][&#39;metadata&#39;]:\n    {&#39;type&#39;: &#39;object&#39;,\n     &#39;description&#39;: &#39;Resource metadata.&#39;,\n     &#39;additionalProperties&#39;: False,\n     &#39;properties&#39;: {&#39;resource_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/resource_type&#39;},\n                    &#39;creators&#39;: {&#39;description&#39;: &#39;Creators of the resource.&#39;,\n                                 &#39;type&#39;: &#39;array&#39;,\n                                 &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                           &#39;additionalProperties&#39;: False,\n                                           &#39;properties&#39;: {&#39;person_or_org&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/person_or_org&#39;},\n                                                          &#39;role&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/role&#39;},\n                                                          &#39;affiliations&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/affiliations&#39;}}}},\n                    &#39;title&#39;: {&#39;description&#39;: &#39;Primary title of the record.&#39;,\n                              &#39;type&#39;: &#39;string&#39;},\n                    &#39;additional_titles&#39;: {&#39;description&#39;: &#39;Additional &#39;\n                                                         &#39;record titles.&#39;,\n                                          &#39;type&#39;: &#39;array&#39;,\n                                          &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                    &#39;additionalProperties&#39;: False,\n                                                    &#39;properties&#39;: {&#39;title&#39;: {&#39;description&#39;: &#39;Additional &#39;\n                                                                                            &#39;title &#39;\n                                                                                            &#39;of &#39;\n                                                                                            &#39;the &#39;\n                                                                                            &#39;record.&#39;,\n                                                                             &#39;type&#39;: &#39;string&#39;},\n                                                                   &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/title_type&#39;},\n                                                                   &#39;lang&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}}}},\n                    &#39;publisher&#39;: {&#39;type&#39;: &#39;string&#39;},\n                    &#39;publication_date&#39;: {&#39;description&#39;: &#39;Record &#39;\n                                                        &#39;publication date &#39;\n                                                        &#39;(EDTF level 0 &#39;\n                                                        &#39;format).&#39;,\n                                         &#39;type&#39;: &#39;string&#39;},\n                    &#39;subjects&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/subjects&#39;},\n                    &#39;contributors&#39;: {&#39;description&#39;: &#39;Contributors in order &#39;\n                                                    &#39;of importance.&#39;,\n                                     &#39;type&#39;: &#39;array&#39;,\n                                     &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                               &#39;additionalProperties&#39;: False,\n                                               &#39;properties&#39;: {&#39;person_or_org&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/person_or_org&#39;},\n                                                              &#39;role&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/role&#39;},\n                                                              &#39;affiliations&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/affiliations&#39;}}}},\n                    &#39;dates&#39;: {&#39;description&#39;: &#39;Date, datetime or date &#39;\n                                             &#39;interval.&#39;,\n                              &#39;type&#39;: &#39;array&#39;,\n                              &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                        &#39;additionalProperties&#39;: False,\n                                        &#39;properties&#39;: {&#39;date&#39;: {&#39;description&#39;: &#39;Date, &#39;\n                                                                               &#39;datetime &#39;\n                                                                               &#39;or &#39;\n                                                                               &#39;date &#39;\n                                                                               &#39;interval &#39;\n                                                                               &#39;in &#39;\n                                                                               &#39;EDTF &#39;\n                                                                               &#39;level &#39;\n                                                                               &#39;0 &#39;\n                                                                               &#39;format&#39;,\n                                                                &#39;type&#39;: &#39;string&#39;},\n                                                       &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/date_type&#39;},\n                                                       &#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                      &#39;of &#39;\n                                                                                      &#39;the &#39;\n                                                                                      &#39;date, &#39;\n                                                                                      &#39;datetime &#39;\n                                                                                      &#39;or &#39;\n                                                                                      &#39;date &#39;\n                                                                                      &#39;interval &#39;\n                                                                                      &#39;e.g. &#39;\n                                                                                      &#34;&#39;Accepted&#39; &#34;\n                                                                                      &#39;or &#39;\n                                                                                      &#34;&#39;Available&#39; &#34;\n                                                                                      &#39;(CV).&#39;,\n                                                                       &#39;type&#39;: &#39;string&#39;}}}},\n                    &#39;languages&#39;: {&#39;description&#39;: &#39;The primary languages of &#39;\n                                                 &#39;the resource. ISO 639-3 &#39;\n                                                 &#39;language code.&#39;,\n                                  &#39;type&#39;: &#39;array&#39;,\n                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}},\n                    &#39;identifiers&#39;: {&#39;description&#39;: &#39;Alternate identifiers &#39;\n                                                   &#39;for the record.&#39;,\n                                    &#39;type&#39;: &#39;array&#39;,\n                                    &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;},\n                                    &#39;uniqueItems&#39;: True},\n                    &#39;related_identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                            &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                      &#39;additionalProperties&#39;: False,\n                                                      &#39;properties&#39;: {&#39;identifier&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                                     &#39;scheme&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/scheme&#39;},\n                                                                     &#39;relation_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/relation_type&#39;},\n                                                                     &#39;resource_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/resource_type&#39;}}}},\n                    &#39;sizes&#39;: {&#39;type&#39;: &#39;array&#39;, &#39;items&#39;: {&#39;type&#39;: &#39;string&#39;}},\n                    &#39;formats&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                &#39;items&#39;: {&#39;type&#39;: &#39;string&#39;}},\n                    &#39;version&#39;: {&#39;description&#39;: &#39;Record version tag.&#39;,\n                                &#39;type&#39;: &#39;string&#39;},\n                    &#39;rights&#39;: {&#39;description&#39;: &#39;Any license or copyright &#39;\n                                              &#39;information for this &#39;\n                                              &#39;resource.&#39;,\n                               &#39;type&#39;: &#39;array&#39;,\n                               &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                         &#39;additionalProperties&#39;: False,\n                                         &#39;properties&#39;: {&#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                        &#39;title&#39;: {&#39;description&#39;: &#39;The &#39;\n                                                                                 &#39;license &#39;\n                                                                                 &#39;name &#39;\n                                                                                 &#39;or &#39;\n                                                                                 &#39;license &#39;\n                                                                                 &#39;itself. &#39;\n                                                                                 &#39;Free &#39;\n                                                                                 &#39;text.&#39;,\n                                                                  &#39;type&#39;: &#39;object&#39;},\n                                                        &#39;description&#39;: {&#39;description&#39;: &#39;The &#39;\n                                                                                       &#39;license &#39;\n                                                                                       &#39;description &#39;\n                                                                                       &#39;Free &#39;\n                                                                                       &#39;text.&#39;,\n                                                                        &#39;type&#39;: &#39;object&#39;},\n                                                        &#39;link&#39;: {&#39;type&#39;: &#39;string&#39;,\n                                                                 &#39;format&#39;: &#39;uri&#39;}}}},\n                    &#39;description&#39;: {&#39;description&#39;: &#39;Description for record &#39;\n                                                   &#39;(may contain HTML).&#39;,\n                                    &#39;type&#39;: &#39;string&#39;},\n                    &#39;additional_descriptions&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                          &#39;additionalProperties&#39;: False,\n                                                          &#39;properties&#39;: {&#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                                        &#39;for &#39;\n                                                                                                        &#39;record.&#39;,\n                                                                                         &#39;type&#39;: &#39;string&#39;},\n                                                                         &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/description_type&#39;},\n                                                                         &#39;lang&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}}}},\n                    &#39;locations&#39;: {&#39;description&#39;: &#39;Geographical locations &#39;\n                                                 &#39;relevant to this record.&#39;,\n                                  &#39;$comment&#39;: &#39;This part of the schema is &#39;\n                                              &#39;modelled on GeoJSON, but &#39;\n                                              &#39;without the scope to embed &#39;\n                                              &#39;arbitrary metadata.\\n&#39;\n                                              &#39;\\n&#39;\n                                              &#39;We nest `features` within &#39;\n                                              &#39;`locations` to give scope &#39;\n                                              &#39;later to say something &#39;\n                                              &#39;about the locations as a &#39;\n                                              &#39;whole.&#39;,\n                                  &#39;type&#39;: &#39;object&#39;,\n                                  &#39;additionalProperties&#39;: False,\n                                  &#39;properties&#39;: {&#39;features&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                              &#39;minItems&#39;: 1,\n                                                              &#39;items&#39;: {&#39;allOf&#39;: [{&#39;type&#39;: &#39;object&#39;,\n                                                                                   &#39;additionalProperties&#39;: False,\n                                                                                   &#39;properties&#39;: {&#39;geometry&#39;: {&#39;allOf&#39;: [{&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/GeoJSON-Geometry&#39;},\n                                                                                                                         {&#39;$comment&#39;: &#39;Bounding &#39;\n                                                                                                                                      &#39;boxes &#39;\n                                                                                                                                      &#39;(`bbox`) &#39;\n                                                                                                                                      &#39;are &#39;\n                                                                                                                                      &#39;forbidden &#39;\n                                                                                                                                      &#39;on &#39;\n                                                                                                                                      &#39;our &#39;\n                                                                                                                                      &#39;geometries, &#39;\n                                                                                                                                      &#39;even &#39;\n                                                                                                                                      &#39;though &#39;\n                                                                                                                                      &#34;they&#39;re &#34;\n                                                                                                                                      &#39;allowed &#39;\n                                                                                                                                      &#39;on &#39;\n                                                                                                                                      &#39;GeoJSON &#39;\n                                                                                                                                      &#39;geometries&#39;,\n                                                                                                                          &#39;properties&#39;: {&#39;type&#39;: {},\n                                                                                                                                         &#39;coordinates&#39;: {}},\n                                                                                                                          &#39;additionalProperties&#39;: False}]},\n                                                                                                  &#39;identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                                                                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;},\n                                                                                                                  &#39;uniqueItems&#39;: True},\n                                                                                                  &#39;place&#39;: {&#39;description&#39;: &#39;Place &#39;\n                                                                                                                           &#39;of &#39;\n                                                                                                                           &#39;the &#39;\n                                                                                                                           &#39;location&#39;,\n                                                                                                            &#39;type&#39;: &#39;string&#39;,\n                                                                                                            &#39;minLength&#39;: 1},\n                                                                                                  &#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                                                                 &#39;of &#39;\n                                                                                                                                 &#39;the &#39;\n                                                                                                                                 &#39;location&#39;,\n                                                                                                                  &#39;type&#39;: &#39;string&#39;,\n                                                                                                                  &#39;minLength&#39;: 1}}}]}}}},\n                    &#39;funding&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                          &#39;additionalProperties&#39;: False,\n                                          &#39;properties&#39;: {&#39;funder&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                                    &#39;additionalProperties&#39;: False,\n                                                                    &#39;properties&#39;: {&#39;name&#39;: {&#39;type&#39;: &#39;string&#39;},\n                                                                                   &#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;}}},\n                                                         &#39;award&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                                   &#39;additionalProperties&#39;: False,\n                                                                   &#39;properties&#39;: {&#39;title&#39;: {&#39;type&#39;: &#39;object&#39;},\n                                                                                  &#39;number&#39;: {&#39;type&#39;: &#39;string&#39;},\n                                                                                  &#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                                                  &#39;identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                                                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;}}}}}}},\n                    &#39;references&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                   &#39;minItems&#39;: 0,\n                                   &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                             &#39;additionalProperties&#39;: False,\n                                             &#39;properties&#39;: {&#39;reference&#39;: {&#39;type&#39;: &#39;string&#39;,\n                                                                          &#39;description&#39;: &#39;A &#39;\n                                                                                         &#39;reference &#39;\n                                                                                         &#39;string.&#39;},\n                                                            &#39;identifier&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                            &#39;scheme&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/scheme&#39;}}}}}}\n\nOn instance[&#39;metadata&#39;]:\n    {&#39;d&#39;: &#39;1999-08-09&#39;,\n     &#39;dt&#39;: &#39;2021-09-11T01:23:40.411257+09:00&#39;,\n     &#39;ed&#39;: &#39;1986-04&#39;,\n     &#39;edi&#39;: &#39;2014-06-18/2018&#39;,\n     &#39;edt&#39;: &#39;1990&#39;,\n     &#39;edti&#39;: &#39;1977/2009&#39;,\n     &#39;f&#39;: -6.2,\n     &#39;ht&#39;: &#39;&lt;p&gt;Floor wear seat must.&lt;/p&gt;&lt;div&gt;Tend heart party bad &#39;\n           &#39;fish.&lt;/div&gt;&lt;div&gt;Key pressure develop pressure.&lt;/div&gt;&lt;div&gt;Alone &#39;\n           &#39;generation opportunity style.&lt;/div&gt;&#39;,\n     &#39;i&#39;: 9324,\n     &#39;kw&#39;: &#39;Fill fish anything can.&#39;,\n     &#39;t&#39;: &#39;05:03:00&#39;,\n     &#39;tx&#39;: &#39;Really though ok but.&#39;}\n</p>\n</div>\n<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>\n<div class="traceback">\n  <h3></h3>\n  <ul><li><div class="frame" id="frame-4854183776">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">2552</em>,\n      in <code class="function">__call__</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>\n<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>\n<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>\n<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)\n<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4854184352">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/middleware/dispatcher.py"</cite>,\n      line <em class="line">78</em>,\n      in <code class="function">__call__</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>app = self.mounts.get(script, self.app)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span>original_script_name = environ.get(&#34;SCRIPT_NAME&#34;, &#34;&#34;)</pre>\n<pre class="line before"><span class="ws">        </span>environ[&#34;SCRIPT_NAME&#34;] = original_script_name + script</pre>\n<pre class="line before"><span class="ws">        </span>environ[&#34;PATH_INFO&#34;] = path_info</pre>\n<pre class="line current"><span class="ws">        </span>return app(environ, start_response)\n<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856987712">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">2552</em>,\n      in <code class="function">__call__</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>\n<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>\n<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>\n<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)\n<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856987856">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">2532</em>,\n      in <code class="function">wsgi_app</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre>\n<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>\n<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>\n<pre class="line before"><span class="ws">                </span>error = e</pre>\n<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)\n<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>\n<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>\n<pre class="line after"><span class="ws">                </span>raise</pre>\n<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>\n<pre class="line after"><span class="ws">        </span>finally:</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856988000">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">2529</em>,\n      in <code class="function">wsgi_app</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>\n<pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre>\n<pre class="line before"><span class="ws">        </span>try:</pre>\n<pre class="line before"><span class="ws">            </span>try:</pre>\n<pre class="line before"><span class="ws">                </span>ctx.push()</pre>\n<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()\n<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>\n<pre class="line after"><span class="ws">                </span>error = e</pre>\n<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>\n<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>\n<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856988144">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">1825</em>,\n      in <code class="function">full_dispatch_request</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>\n<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>\n<pre class="line before"><span class="ws">            </span>if rv is None:</pre>\n<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>\n<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>\n<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)\n<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>\n<pre class="line after"><span class="ws">        </span>self,</pre>\n<pre class="line after"><span class="ws">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856988288">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">1823</em>,\n      in <code class="function">full_dispatch_request</code></h4>\n  <div class="source "><pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span>try:</pre>\n<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>\n<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>\n<pre class="line before"><span class="ws">            </span>if rv is None:</pre>\n<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()\n<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>\n<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>\n<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856988432">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py"</cite>,\n      line <em class="line">1799</em>,\n      in <code class="function">dispatch_request</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>\n<pre class="line before"><span class="ws">        </span>):</pre>\n<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>\n<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>\n<pre class="line before"><span class="ws">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>\n<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>\n<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>\n<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>\n<pre class="line after"><span class="ws">        </span>error handling.</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856988576">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/resources.py"</cite>,\n      line <em class="line">65</em>,\n      in <code class="function">view</code></h4>\n  <div class="source "><pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">    </span>def view(*args, **kwargs):</pre>\n<pre class="line before"><span class="ws">        </span>with ResourceRequestCtx(config):</pre>\n<pre class="line before"><span class="ws">            </span># args and kwargs are ignored on purpose - use a request parser</pre>\n<pre class="line before"><span class="ws">            </span># to retrieve the validated values.</pre>\n<pre class="line current"><span class="ws">            </span>return view_meth()\n<span class="ws">            </span>       ^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>view.__name__ = view_name</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return {</pre>\n<pre class="line after"><span class="ws">        </span>&#34;rule&#34;: resolve_from_conf(rule, config),</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856988864">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/content_negotiation.py"</cite>,\n      line <em class="line">116</em>,\n      in <code class="function">inner_content_negotiation</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">                </span>raise MIMETypeNotAccepted(allowed_mimetypes=handlers.keys())</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">            </span>resource_requestctx.accept_mimetype = accept_mimetype</pre>\n<pre class="line before"><span class="ws">            </span>resource_requestctx.response_handler = handlers[accept_mimetype]</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line current"><span class="ws">            </span>return f(*args, **kwargs)\n<span class="ws">            </span>       ^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return inner_content_negotiation</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return decorator</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856989152">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py"</cite>,\n      line <em class="line">51</em>,\n      in <code class="function">inner</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>ctx_attr = getattr(resource_requestctx, parser.location)</pre>\n<pre class="line before"><span class="ws">            </span>if ctx_attr is None:</pre>\n<pre class="line before"><span class="ws">                </span>setattr(resource_requestctx, parser.location, parser.parse())</pre>\n<pre class="line before"><span class="ws">            </span>else:</pre>\n<pre class="line before"><span class="ws">                </span>ctx_attr.update(parser.parse())</pre>\n<pre class="line current"><span class="ws">            </span>return f(self, *args, **kwargs)\n<span class="ws">            </span>       ^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return inner</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return decorator</pre>\n<pre class="line after"><span class="ws"></span> </pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856989296">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py"</cite>,\n      line <em class="line">90</em>,\n      in <code class="function">inner</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">                </span>raise InvalidContentType(allowed_mimetypes=body_parsers.keys())</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">            </span># Parse the request body.</pre>\n<pre class="line before"><span class="ws">            </span>resource_requestctx.data = parser.parse()</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line current"><span class="ws">            </span>return f(self, *args, **kwargs)\n<span class="ws">            </span>       ^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return inner</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return decorator</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856989440">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/responses.py"</cite>,\n      line <em class="line">39</em>,\n      in <code class="function">inner</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">    </span>def decorator(f):</pre>\n<pre class="line before"><span class="ws">        </span>@wraps(f)</pre>\n<pre class="line before"><span class="ws">        </span>def inner(*args, **kwargs):</pre>\n<pre class="line current"><span class="ws">            </span>res = f(*args, **kwargs)\n<span class="ws">            </span>      ^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">            </span>return resource_requestctx.response_handler.make_response(*res, many=many)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return inner</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return decorator</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856989584">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/resources/records/resource.py"</cite>,\n      line <em class="line">93</em>,\n      in <code class="function">create</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">    </span>@request_extra_args</pre>\n<pre class="line before"><span class="ws">    </span>@request_data</pre>\n<pre class="line before"><span class="ws">    </span>@response_handler()</pre>\n<pre class="line before"><span class="ws">    </span>def create(self):</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;Create an item.&#34;&#34;&#34;</pre>\n<pre class="line current"><span class="ws">        </span>item = self.service.create(\n<span class="ws">        </span>       </pre>\n<pre class="line after"><span class="ws">            </span>g.identity,</pre>\n<pre class="line after"><span class="ws">            </span>resource_requestctx.data or {},</pre>\n<pre class="line after"><span class="ws">            </span>expand=resource_requestctx.args.get(&#34;expand&#34;, False),</pre>\n<pre class="line after"><span class="ws">        </span>)</pre>\n<pre class="line after"><span class="ws">        </span>return item.to_dict(), 201</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856990016">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py"</cite>,\n      line <em class="line">376</em>,\n      in <code class="function">inner</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">        </span>def inner(self, *args, **kwargs):</pre>\n<pre class="line before"><span class="ws">            </span>if &#34;uow&#34; not in kwargs:</pre>\n<pre class="line before"><span class="ws">                </span># Migration path - start a UoW and commit</pre>\n<pre class="line before"><span class="ws">                </span>with UnitOfWork(db.session) as uow:</pre>\n<pre class="line before"><span class="ws">                    </span>kwargs[&#34;uow&#34;] = uow</pre>\n<pre class="line current"><span class="ws">                    </span>res = f(self, *args, **kwargs)\n<span class="ws">                    </span>      ^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">                    </span>uow.commit()</pre>\n<pre class="line after"><span class="ws">                    </span>return res</pre>\n<pre class="line after"><span class="ws">            </span>else:</pre>\n<pre class="line after"><span class="ws">                </span>return f(self, *args, **kwargs)</pre>\n<pre class="line after"><span class="ws"></span> </pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856990160">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_drafts_resources/services/records/service.py"</cite>,\n      line <em class="line">309</em>,\n      in <code class="function">create</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">    </span>def create(self, identity, data, uow=None, expand=False, **kwargs):</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;Create a draft for a new record.</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span>It does NOT eagerly create the associated record.</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>\n<pre class="line current"><span class="ws">        </span>res = self._create(\n<span class="ws">        </span>      </pre>\n<pre class="line after"><span class="ws">            </span>self.draft_cls,</pre>\n<pre class="line after"><span class="ws">            </span>identity,</pre>\n<pre class="line after"><span class="ws">            </span>data,</pre>\n<pre class="line after"><span class="ws">            </span>raise_errors=False,</pre>\n<pre class="line after"><span class="ws">            </span>uow=uow,</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856991744">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py"</cite>,\n      line <em class="line">380</em>,\n      in <code class="function">inner</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">                    </span>kwargs[&#34;uow&#34;] = uow</pre>\n<pre class="line before"><span class="ws">                    </span>res = f(self, *args, **kwargs)</pre>\n<pre class="line before"><span class="ws">                    </span>uow.commit()</pre>\n<pre class="line before"><span class="ws">                    </span>return res</pre>\n<pre class="line before"><span class="ws">            </span>else:</pre>\n<pre class="line current"><span class="ws">                </span>return f(self, *args, **kwargs)\n<span class="ws">                </span>       ^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return inner</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>return decorator</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856991888">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/records/service.py"</cite>,\n      line <em class="line">365</em>,\n      in <code class="function">_create</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>errors=errors,</pre>\n<pre class="line before"><span class="ws">            </span>uow=uow,</pre>\n<pre class="line before"><span class="ws">        </span>)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span># Persist record (DB and index)</pre>\n<pre class="line current"><span class="ws">        </span>uow.register(RecordCommitOp(record, self.indexer))\n<span class="ws">        </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">        </span>return self.result_item(</pre>\n<pre class="line after"><span class="ws">            </span>self,</pre>\n<pre class="line after"><span class="ws">            </span>identity,</pre>\n<pre class="line after"><span class="ws">            </span>record,</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856993328">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py"</cite>,\n      line <em class="line">349</em>,\n      in <code class="function">register</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>op.on_post_rollback(self)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">    </span>def register(self, op):</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;Register an operation.&#34;&#34;&#34;</pre>\n<pre class="line before"><span class="ws">        </span># Run on register</pre>\n<pre class="line current"><span class="ws">        </span>op.on_register(self)\n<span class="ws">        </span>^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws">        </span># Append to list of operations.</pre>\n<pre class="line after"><span class="ws">        </span>self._operations.append(op)</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws"></span>def unit_of_work(**kwargs):</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856993472">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py"</cite>,\n      line <em class="line">176</em>,\n      in <code class="function">on_register</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">        </span>self._indexer = indexer</pre>\n<pre class="line before"><span class="ws">        </span>self._index_refresh = index_refresh</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">    </span>def on_register(self, uow):</pre>\n<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;Commit record (will flush to the database).&#34;&#34;&#34;</pre>\n<pre class="line current"><span class="ws">        </span>self._record.commit()\n<span class="ws">        </span>^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def on_commit(self, uow):</pre>\n<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Run the operation.&#34;&#34;&#34;</pre>\n<pre class="line after"><span class="ws">        </span>if self._indexer is not None:</pre>\n<pre class="line after"><span class="ws">            </span>arguments = {&#34;refresh&#34;: True} if self._index_refresh else {}</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856993616">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py"</cite>,\n      line <em class="line">453</em>,\n      in <code class="function">commit</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span># Run pre commit extensions</pre>\n<pre class="line before"><span class="ws">            </span>for e in self._extensions:</pre>\n<pre class="line before"><span class="ws">                </span>e.pre_commit(self, **kwargs)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">            </span># Validate also encodes the data</pre>\n<pre class="line current"><span class="ws">            </span>json = self._validate(format_checker=format_checker, validator=validator)\n<span class="ws">            </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">            </span># Thus, we pass the encoded JSON directly to the model to avoid</pre>\n<pre class="line after"><span class="ws">            </span># double encoding.</pre>\n<pre class="line after"><span class="ws">            </span>self.model.json = json</pre>\n<pre class="line after"><span class="ws">            </span>flag_modified(self.model, &#34;json&#34;)</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856993904">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py"</cite>,\n      line <em class="line">193</em>,\n      in <code class="function">_validate</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">        </span>else:</pre>\n<pre class="line before"><span class="ws">            </span>json = self.model_cls.encode(dict(self))</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span>if &#34;$schema&#34; in self and self[&#34;$schema&#34;] is not None:</pre>\n<pre class="line before"><span class="ws">            </span># Validate (an error will raise an exception)</pre>\n<pre class="line current"><span class="ws">            </span>_records_state.validate(\n<span class="ws">            </span>^</pre>\n<pre class="line after"><span class="ws">                </span>json,</pre>\n<pre class="line after"><span class="ws">                </span>self[&#34;$schema&#34;],</pre>\n<pre class="line after"><span class="ws">                </span># Use defaults of class if not specified by user.</pre>\n<pre class="line after"><span class="ws">                </span>format_checker=format_checker or self.format_checker,</pre>\n<pre class="line after"><span class="ws">                </span>cls=validator or self.validator,</pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856994048">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/ext.py"</cite>,\n      line <em class="line">67</em>,\n      in <code class="function">validate</code></h4>\n  <div class="source "><pre class="line before"><span class="ws">            </span>custom_checks=self.app.config.get(&#34;RECORDS_VALIDATION_TYPES&#34;, {}),</pre>\n<pre class="line before"><span class="ws">        </span>)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">        </span>resolver = self.refresolver_cls.from_schema(schema, **refresolver_cls_kwargs)</pre>\n<pre class="line before"><span class="ws"></span> </pre>\n<pre class="line current"><span class="ws">        </span>return validate(data, schema, cls=validator_cls, resolver=resolver, **kwargs)\n<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws">    </span>def replace_refs(self, data):</pre>\n<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Replace the JSON reference objects with ``JsonRef``.&#34;&#34;&#34;</pre>\n<pre class="line after"><span class="ws">        </span>return JsonRef.replace_refs(data, loader=self.loader_cls())</pre>\n<pre class="line after"><span class="ws"></span> </pre></div>\n</div>\n\n<li><div class="frame" id="frame-4856994336">\n  <h4>File <cite class="filename">"/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/jsonschema/validators.py"</cite>,\n      line <em class="line">1332</em>,\n      in <code class="function">validate</code></h4>\n  <div class="source "><pre class="line before"><span class="ws"></span> </pre>\n<pre class="line before"><span class="ws">    </span>cls.check_schema(schema)</pre>\n<pre class="line before"><span class="ws">    </span>validator = cls(schema, *args, **kwargs)</pre>\n<pre class="line before"><span class="ws">    </span>error = exceptions.best_match(validator.iter_errors(instance))</pre>\n<pre class="line before"><span class="ws">    </span>if error is not None:</pre>\n<pre class="line current"><span class="ws">        </span>raise error\n<span class="ws">        </span>^^^^^^^^^^^</pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws"></span> </pre>\n<pre class="line after"><span class="ws"></span>def validator_for(</pre>\n<pre class="line after"><span class="ws">    </span>schema,</pre>\n<pre class="line after"><span class="ws">    </span>default: Validator | _utils.Unset = _UNSET,</pre></div>\n</div>\n</ul>\n  <blockquote>jsonschema.exceptions.ValidationError: Additional properties are not allowed (&#39;d&#39;, &#39;dt&#39;, &#39;ed&#39;, &#39;edi&#39;, &#39;edt&#39;, &#39;edti&#39;, &#39;f&#39;, &#39;ht&#39;, &#39;i&#39;, &#39;kw&#39;, &#39;t&#39;, &#39;tx&#39; were unexpected)\n\nFailed validating &#39;additionalProperties&#39; in schema[&#39;properties&#39;][&#39;metadata&#39;]:\n    {&#39;type&#39;: &#39;object&#39;,\n     &#39;description&#39;: &#39;Resource metadata.&#39;,\n     &#39;additionalProperties&#39;: False,\n     &#39;properties&#39;: {&#39;resource_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/resource_type&#39;},\n                    &#39;creators&#39;: {&#39;description&#39;: &#39;Creators of the resource.&#39;,\n                                 &#39;type&#39;: &#39;array&#39;,\n                                 &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                           &#39;additionalProperties&#39;: False,\n                                           &#39;properties&#39;: {&#39;person_or_org&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/person_or_org&#39;},\n                                                          &#39;role&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/role&#39;},\n                                                          &#39;affiliations&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/affiliations&#39;}}}},\n                    &#39;title&#39;: {&#39;description&#39;: &#39;Primary title of the record.&#39;,\n                              &#39;type&#39;: &#39;string&#39;},\n                    &#39;additional_titles&#39;: {&#39;description&#39;: &#39;Additional &#39;\n                                                         &#39;record titles.&#39;,\n                                          &#39;type&#39;: &#39;array&#39;,\n                                          &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                    &#39;additionalProperties&#39;: False,\n                                                    &#39;properties&#39;: {&#39;title&#39;: {&#39;description&#39;: &#39;Additional &#39;\n                                                                                            &#39;title &#39;\n                                                                                            &#39;of &#39;\n                                                                                            &#39;the &#39;\n                                                                                            &#39;record.&#39;,\n                                                                             &#39;type&#39;: &#39;string&#39;},\n                                                                   &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/title_type&#39;},\n                                                                   &#39;lang&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}}}},\n                    &#39;publisher&#39;: {&#39;type&#39;: &#39;string&#39;},\n                    &#39;publication_date&#39;: {&#39;description&#39;: &#39;Record &#39;\n                                                        &#39;publication date &#39;\n                                                        &#39;(EDTF level 0 &#39;\n                                                        &#39;format).&#39;,\n                                         &#39;type&#39;: &#39;string&#39;},\n                    &#39;subjects&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/subjects&#39;},\n                    &#39;contributors&#39;: {&#39;description&#39;: &#39;Contributors in order &#39;\n                                                    &#39;of importance.&#39;,\n                                     &#39;type&#39;: &#39;array&#39;,\n                                     &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                               &#39;additionalProperties&#39;: False,\n                                               &#39;properties&#39;: {&#39;person_or_org&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/person_or_org&#39;},\n                                                              &#39;role&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/role&#39;},\n                                                              &#39;affiliations&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/affiliations&#39;}}}},\n                    &#39;dates&#39;: {&#39;description&#39;: &#39;Date, datetime or date &#39;\n                                             &#39;interval.&#39;,\n                              &#39;type&#39;: &#39;array&#39;,\n                              &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                        &#39;additionalProperties&#39;: False,\n                                        &#39;properties&#39;: {&#39;date&#39;: {&#39;description&#39;: &#39;Date, &#39;\n                                                                               &#39;datetime &#39;\n                                                                               &#39;or &#39;\n                                                                               &#39;date &#39;\n                                                                               &#39;interval &#39;\n                                                                               &#39;in &#39;\n                                                                               &#39;EDTF &#39;\n                                                                               &#39;level &#39;\n                                                                               &#39;0 &#39;\n                                                                               &#39;format&#39;,\n                                                                &#39;type&#39;: &#39;string&#39;},\n                                                       &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/date_type&#39;},\n                                                       &#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                      &#39;of &#39;\n                                                                                      &#39;the &#39;\n                                                                                      &#39;date, &#39;\n                                                                                      &#39;datetime &#39;\n                                                                                      &#39;or &#39;\n                                                                                      &#39;date &#39;\n                                                                                      &#39;interval &#39;\n                                                                                      &#39;e.g. &#39;\n                                                                                      &#34;&#39;Accepted&#39; &#34;\n                                                                                      &#39;or &#39;\n                                                                                      &#34;&#39;Available&#39; &#34;\n                                                                                      &#39;(CV).&#39;,\n                                                                       &#39;type&#39;: &#39;string&#39;}}}},\n                    &#39;languages&#39;: {&#39;description&#39;: &#39;The primary languages of &#39;\n                                                 &#39;the resource. ISO 639-3 &#39;\n                                                 &#39;language code.&#39;,\n                                  &#39;type&#39;: &#39;array&#39;,\n                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}},\n                    &#39;identifiers&#39;: {&#39;description&#39;: &#39;Alternate identifiers &#39;\n                                                   &#39;for the record.&#39;,\n                                    &#39;type&#39;: &#39;array&#39;,\n                                    &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;},\n                                    &#39;uniqueItems&#39;: True},\n                    &#39;related_identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                            &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                      &#39;additionalProperties&#39;: False,\n                                                      &#39;properties&#39;: {&#39;identifier&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                                     &#39;scheme&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/scheme&#39;},\n                                                                     &#39;relation_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/relation_type&#39;},\n                                                                     &#39;resource_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/resource_type&#39;}}}},\n                    &#39;sizes&#39;: {&#39;type&#39;: &#39;array&#39;, &#39;items&#39;: {&#39;type&#39;: &#39;string&#39;}},\n                    &#39;formats&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                &#39;items&#39;: {&#39;type&#39;: &#39;string&#39;}},\n                    &#39;version&#39;: {&#39;description&#39;: &#39;Record version tag.&#39;,\n                                &#39;type&#39;: &#39;string&#39;},\n                    &#39;rights&#39;: {&#39;description&#39;: &#39;Any license or copyright &#39;\n                                              &#39;information for this &#39;\n                                              &#39;resource.&#39;,\n                               &#39;type&#39;: &#39;array&#39;,\n                               &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                         &#39;additionalProperties&#39;: False,\n                                         &#39;properties&#39;: {&#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                        &#39;title&#39;: {&#39;description&#39;: &#39;The &#39;\n                                                                                 &#39;license &#39;\n                                                                                 &#39;name &#39;\n                                                                                 &#39;or &#39;\n                                                                                 &#39;license &#39;\n                                                                                 &#39;itself. &#39;\n                                                                                 &#39;Free &#39;\n                                                                                 &#39;text.&#39;,\n                                                                  &#39;type&#39;: &#39;object&#39;},\n                                                        &#39;description&#39;: {&#39;description&#39;: &#39;The &#39;\n                                                                                       &#39;license &#39;\n                                                                                       &#39;description &#39;\n                                                                                       &#39;Free &#39;\n                                                                                       &#39;text.&#39;,\n                                                                        &#39;type&#39;: &#39;object&#39;},\n                                                        &#39;link&#39;: {&#39;type&#39;: &#39;string&#39;,\n                                                                 &#39;format&#39;: &#39;uri&#39;}}}},\n                    &#39;description&#39;: {&#39;description&#39;: &#39;Description for record &#39;\n                                                   &#39;(may contain HTML).&#39;,\n                                    &#39;type&#39;: &#39;string&#39;},\n                    &#39;additional_descriptions&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                          &#39;additionalProperties&#39;: False,\n                                                          &#39;properties&#39;: {&#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                                        &#39;for &#39;\n                                                                                                        &#39;record.&#39;,\n                                                                                         &#39;type&#39;: &#39;string&#39;},\n                                                                         &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/description_type&#39;},\n                                                                         &#39;lang&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}}}},\n                    &#39;locations&#39;: {&#39;description&#39;: &#39;Geographical locations &#39;\n                                                 &#39;relevant to this record.&#39;,\n                                  &#39;$comment&#39;: &#39;This part of the schema is &#39;\n                                              &#39;modelled on GeoJSON, but &#39;\n                                              &#39;without the scope to embed &#39;\n                                              &#39;arbitrary metadata.\\n&#39;\n                                              &#39;\\n&#39;\n                                              &#39;We nest `features` within &#39;\n                                              &#39;`locations` to give scope &#39;\n                                              &#39;later to say something &#39;\n                                              &#39;about the locations as a &#39;\n                                              &#39;whole.&#39;,\n                                  &#39;type&#39;: &#39;object&#39;,\n                                  &#39;additionalProperties&#39;: False,\n                                  &#39;properties&#39;: {&#39;features&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                              &#39;minItems&#39;: 1,\n                                                              &#39;items&#39;: {&#39;allOf&#39;: [{&#39;type&#39;: &#39;object&#39;,\n                                                                                   &#39;additionalProperties&#39;: False,\n                                                                                   &#39;properties&#39;: {&#39;geometry&#39;: {&#39;allOf&#39;: [{&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/GeoJSON-Geometry&#39;},\n                                                                                                                         {&#39;$comment&#39;: &#39;Bounding &#39;\n                                                                                                                                      &#39;boxes &#39;\n                                                                                                                                      &#39;(`bbox`) &#39;\n                                                                                                                                      &#39;are &#39;\n                                                                                                                                      &#39;forbidden &#39;\n                                                                                                                                      &#39;on &#39;\n                                                                                                                                      &#39;our &#39;\n                                                                                                                                      &#39;geometries, &#39;\n                                                                                                                                      &#39;even &#39;\n                                                                                                                                      &#39;though &#39;\n                                                                                                                                      &#34;they&#39;re &#34;\n                                                                                                                                      &#39;allowed &#39;\n                                                                                                                                      &#39;on &#39;\n                                                                                                                                      &#39;GeoJSON &#39;\n                                                                                                                                      &#39;geometries&#39;,\n                                                                                                                          &#39;properties&#39;: {&#39;type&#39;: {},\n                                                                                                                                         &#39;coordinates&#39;: {}},\n                                                                                                                          &#39;additionalProperties&#39;: False}]},\n                                                                                                  &#39;identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                                                                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;},\n                                                                                                                  &#39;uniqueItems&#39;: True},\n                                                                                                  &#39;place&#39;: {&#39;description&#39;: &#39;Place &#39;\n                                                                                                                           &#39;of &#39;\n                                                                                                                           &#39;the &#39;\n                                                                                                                           &#39;location&#39;,\n                                                                                                            &#39;type&#39;: &#39;string&#39;,\n                                                                                                            &#39;minLength&#39;: 1},\n                                                                                                  &#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                                                                 &#39;of &#39;\n                                                                                                                                 &#39;the &#39;\n                                                                                                                                 &#39;location&#39;,\n                                                                                                                  &#39;type&#39;: &#39;string&#39;,\n                                                                                                                  &#39;minLength&#39;: 1}}}]}}}},\n                    &#39;funding&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                          &#39;additionalProperties&#39;: False,\n                                          &#39;properties&#39;: {&#39;funder&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                                    &#39;additionalProperties&#39;: False,\n                                                                    &#39;properties&#39;: {&#39;name&#39;: {&#39;type&#39;: &#39;string&#39;},\n                                                                                   &#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;}}},\n                                                         &#39;award&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                                   &#39;additionalProperties&#39;: False,\n                                                                   &#39;properties&#39;: {&#39;title&#39;: {&#39;type&#39;: &#39;object&#39;},\n                                                                                  &#39;number&#39;: {&#39;type&#39;: &#39;string&#39;},\n                                                                                  &#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                                                  &#39;identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                                                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;}}}}}}},\n                    &#39;references&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                   &#39;minItems&#39;: 0,\n                                   &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                             &#39;additionalProperties&#39;: False,\n                                             &#39;properties&#39;: {&#39;reference&#39;: {&#39;type&#39;: &#39;string&#39;,\n                                                                          &#39;description&#39;: &#39;A &#39;\n                                                                                         &#39;reference &#39;\n                                                                                         &#39;string.&#39;},\n                                                            &#39;identifier&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                            &#39;scheme&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/scheme&#39;}}}}}}\n\nOn instance[&#39;metadata&#39;]:\n    {&#39;d&#39;: &#39;1999-08-09&#39;,\n     &#39;dt&#39;: &#39;2021-09-11T01:23:40.411257+09:00&#39;,\n     &#39;ed&#39;: &#39;1986-04&#39;,\n     &#39;edi&#39;: &#39;2014-06-18/2018&#39;,\n     &#39;edt&#39;: &#39;1990&#39;,\n     &#39;edti&#39;: &#39;1977/2009&#39;,\n     &#39;f&#39;: -6.2,\n     &#39;ht&#39;: &#39;&lt;p&gt;Floor wear seat must.&lt;/p&gt;&lt;div&gt;Tend heart party bad &#39;\n           &#39;fish.&lt;/div&gt;&lt;div&gt;Key pressure develop pressure.&lt;/div&gt;&lt;div&gt;Alone &#39;\n           &#39;generation opportunity style.&lt;/div&gt;&#39;,\n     &#39;i&#39;: 9324,\n     &#39;kw&#39;: &#39;Fill fish anything can.&#39;,\n     &#39;t&#39;: &#39;05:03:00&#39;,\n     &#39;tx&#39;: &#39;Really though ok but.&#39;}\n</blockquote>\n</div>\n\n<div class="plain">\n    <p>\n      This is the Copy/Paste friendly version of the traceback.\n    </p>\n    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 2552, in __call__\n    return self.wsgi_app(environ, start_response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/middleware/dispatcher.py&#34;, line 78, in __call__\n    return app(environ, start_response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 2552, in __call__\n    return self.wsgi_app(environ, start_response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 2532, in wsgi_app\n    response = self.handle_exception(e)\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 2529, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 1825, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 1823, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py&#34;, line 1799, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/resources.py&#34;, line 65, in view\n    return view_meth()\n           ^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/content_negotiation.py&#34;, line 116, in inner_content_negotiation\n    return f(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py&#34;, line 51, in inner\n    return f(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py&#34;, line 90, in inner\n    return f(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/responses.py&#34;, line 39, in inner\n    res = f(*args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/resources/records/resource.py&#34;, line 93, in create\n    item = self.service.create(\n           ^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py&#34;, line 376, in inner\n    res = f(self, *args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_drafts_resources/services/records/service.py&#34;, line 309, in create\n    res = self._create(\n          ^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py&#34;, line 380, in inner\n    return f(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/records/service.py&#34;, line 365, in _create\n    uow.register(RecordCommitOp(record, self.indexer))\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py&#34;, line 349, in register\n    op.on_register(self)\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py&#34;, line 176, in on_register\n    self._record.commit()\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py&#34;, line 453, in commit\n    json = self._validate(format_checker=format_checker, validator=validator)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py&#34;, line 193, in _validate\n    _records_state.validate(\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/ext.py&#34;, line 67, in validate\n    return validate(data, schema, cls=validator_cls, resolver=resolver, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File &#34;/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/jsonschema/validators.py&#34;, line 1332, in validate\n    raise error\njsonschema.exceptions.ValidationError: Additional properties are not allowed (&#39;d&#39;, &#39;dt&#39;, &#39;ed&#39;, &#39;edi&#39;, &#39;edt&#39;, &#39;edti&#39;, &#39;f&#39;, &#39;ht&#39;, &#39;i&#39;, &#39;kw&#39;, &#39;t&#39;, &#39;tx&#39; were unexpected)\n\nFailed validating &#39;additionalProperties&#39; in schema[&#39;properties&#39;][&#39;metadata&#39;]:\n    {&#39;type&#39;: &#39;object&#39;,\n     &#39;description&#39;: &#39;Resource metadata.&#39;,\n     &#39;additionalProperties&#39;: False,\n     &#39;properties&#39;: {&#39;resource_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/resource_type&#39;},\n                    &#39;creators&#39;: {&#39;description&#39;: &#39;Creators of the resource.&#39;,\n                                 &#39;type&#39;: &#39;array&#39;,\n                                 &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                           &#39;additionalProperties&#39;: False,\n                                           &#39;properties&#39;: {&#39;person_or_org&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/person_or_org&#39;},\n                                                          &#39;role&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/role&#39;},\n                                                          &#39;affiliations&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/affiliations&#39;}}}},\n                    &#39;title&#39;: {&#39;description&#39;: &#39;Primary title of the record.&#39;,\n                              &#39;type&#39;: &#39;string&#39;},\n                    &#39;additional_titles&#39;: {&#39;description&#39;: &#39;Additional &#39;\n                                                         &#39;record titles.&#39;,\n                                          &#39;type&#39;: &#39;array&#39;,\n                                          &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                    &#39;additionalProperties&#39;: False,\n                                                    &#39;properties&#39;: {&#39;title&#39;: {&#39;description&#39;: &#39;Additional &#39;\n                                                                                            &#39;title &#39;\n                                                                                            &#39;of &#39;\n                                                                                            &#39;the &#39;\n                                                                                            &#39;record.&#39;,\n                                                                             &#39;type&#39;: &#39;string&#39;},\n                                                                   &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/title_type&#39;},\n                                                                   &#39;lang&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}}}},\n                    &#39;publisher&#39;: {&#39;type&#39;: &#39;string&#39;},\n                    &#39;publication_date&#39;: {&#39;description&#39;: &#39;Record &#39;\n                                                        &#39;publication date &#39;\n                                                        &#39;(EDTF level 0 &#39;\n                                                        &#39;format).&#39;,\n                                         &#39;type&#39;: &#39;string&#39;},\n                    &#39;subjects&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/subjects&#39;},\n                    &#39;contributors&#39;: {&#39;description&#39;: &#39;Contributors in order &#39;\n                                                    &#39;of importance.&#39;,\n                                     &#39;type&#39;: &#39;array&#39;,\n                                     &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                               &#39;additionalProperties&#39;: False,\n                                               &#39;properties&#39;: {&#39;person_or_org&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/person_or_org&#39;},\n                                                              &#39;role&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/role&#39;},\n                                                              &#39;affiliations&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/affiliations&#39;}}}},\n                    &#39;dates&#39;: {&#39;description&#39;: &#39;Date, datetime or date &#39;\n                                             &#39;interval.&#39;,\n                              &#39;type&#39;: &#39;array&#39;,\n                              &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                        &#39;additionalProperties&#39;: False,\n                                        &#39;properties&#39;: {&#39;date&#39;: {&#39;description&#39;: &#39;Date, &#39;\n                                                                               &#39;datetime &#39;\n                                                                               &#39;or &#39;\n                                                                               &#39;date &#39;\n                                                                               &#39;interval &#39;\n                                                                               &#39;in &#39;\n                                                                               &#39;EDTF &#39;\n                                                                               &#39;level &#39;\n                                                                               &#39;0 &#39;\n                                                                               &#39;format&#39;,\n                                                                &#39;type&#39;: &#39;string&#39;},\n                                                       &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/date_type&#39;},\n                                                       &#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                      &#39;of &#39;\n                                                                                      &#39;the &#39;\n                                                                                      &#39;date, &#39;\n                                                                                      &#39;datetime &#39;\n                                                                                      &#39;or &#39;\n                                                                                      &#39;date &#39;\n                                                                                      &#39;interval &#39;\n                                                                                      &#39;e.g. &#39;\n                                                                                      &#34;&#39;Accepted&#39; &#34;\n                                                                                      &#39;or &#39;\n                                                                                      &#34;&#39;Available&#39; &#34;\n                                                                                      &#39;(CV).&#39;,\n                                                                       &#39;type&#39;: &#39;string&#39;}}}},\n                    &#39;languages&#39;: {&#39;description&#39;: &#39;The primary languages of &#39;\n                                                 &#39;the resource. ISO 639-3 &#39;\n                                                 &#39;language code.&#39;,\n                                  &#39;type&#39;: &#39;array&#39;,\n                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}},\n                    &#39;identifiers&#39;: {&#39;description&#39;: &#39;Alternate identifiers &#39;\n                                                   &#39;for the record.&#39;,\n                                    &#39;type&#39;: &#39;array&#39;,\n                                    &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;},\n                                    &#39;uniqueItems&#39;: True},\n                    &#39;related_identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                            &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                      &#39;additionalProperties&#39;: False,\n                                                      &#39;properties&#39;: {&#39;identifier&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                                     &#39;scheme&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/scheme&#39;},\n                                                                     &#39;relation_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/relation_type&#39;},\n                                                                     &#39;resource_type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/resource_type&#39;}}}},\n                    &#39;sizes&#39;: {&#39;type&#39;: &#39;array&#39;, &#39;items&#39;: {&#39;type&#39;: &#39;string&#39;}},\n                    &#39;formats&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                &#39;items&#39;: {&#39;type&#39;: &#39;string&#39;}},\n                    &#39;version&#39;: {&#39;description&#39;: &#39;Record version tag.&#39;,\n                                &#39;type&#39;: &#39;string&#39;},\n                    &#39;rights&#39;: {&#39;description&#39;: &#39;Any license or copyright &#39;\n                                              &#39;information for this &#39;\n                                              &#39;resource.&#39;,\n                               &#39;type&#39;: &#39;array&#39;,\n                               &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                         &#39;additionalProperties&#39;: False,\n                                         &#39;properties&#39;: {&#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                        &#39;title&#39;: {&#39;description&#39;: &#39;The &#39;\n                                                                                 &#39;license &#39;\n                                                                                 &#39;name &#39;\n                                                                                 &#39;or &#39;\n                                                                                 &#39;license &#39;\n                                                                                 &#39;itself. &#39;\n                                                                                 &#39;Free &#39;\n                                                                                 &#39;text.&#39;,\n                                                                  &#39;type&#39;: &#39;object&#39;},\n                                                        &#39;description&#39;: {&#39;description&#39;: &#39;The &#39;\n                                                                                       &#39;license &#39;\n                                                                                       &#39;description &#39;\n                                                                                       &#39;Free &#39;\n                                                                                       &#39;text.&#39;,\n                                                                        &#39;type&#39;: &#39;object&#39;},\n                                                        &#39;link&#39;: {&#39;type&#39;: &#39;string&#39;,\n                                                                 &#39;format&#39;: &#39;uri&#39;}}}},\n                    &#39;description&#39;: {&#39;description&#39;: &#39;Description for record &#39;\n                                                   &#39;(may contain HTML).&#39;,\n                                    &#39;type&#39;: &#39;string&#39;},\n                    &#39;additional_descriptions&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                          &#39;additionalProperties&#39;: False,\n                                                          &#39;properties&#39;: {&#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                                        &#39;for &#39;\n                                                                                                        &#39;record.&#39;,\n                                                                                         &#39;type&#39;: &#39;string&#39;},\n                                                                         &#39;type&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/description_type&#39;},\n                                                                         &#39;lang&#39;: {&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/language&#39;}}}},\n                    &#39;locations&#39;: {&#39;description&#39;: &#39;Geographical locations &#39;\n                                                 &#39;relevant to this record.&#39;,\n                                  &#39;$comment&#39;: &#39;This part of the schema is &#39;\n                                              &#39;modelled on GeoJSON, but &#39;\n                                              &#39;without the scope to embed &#39;\n                                              &#39;arbitrary metadata.\\n&#39;\n                                              &#39;\\n&#39;\n                                              &#39;We nest `features` within &#39;\n                                              &#39;`locations` to give scope &#39;\n                                              &#39;later to say something &#39;\n                                              &#39;about the locations as a &#39;\n                                              &#39;whole.&#39;,\n                                  &#39;type&#39;: &#39;object&#39;,\n                                  &#39;additionalProperties&#39;: False,\n                                  &#39;properties&#39;: {&#39;features&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                              &#39;minItems&#39;: 1,\n                                                              &#39;items&#39;: {&#39;allOf&#39;: [{&#39;type&#39;: &#39;object&#39;,\n                                                                                   &#39;additionalProperties&#39;: False,\n                                                                                   &#39;properties&#39;: {&#39;geometry&#39;: {&#39;allOf&#39;: [{&#39;$ref&#39;: &#39;local://records/definitions-v2.0.0.json#/GeoJSON-Geometry&#39;},\n                                                                                                                         {&#39;$comment&#39;: &#39;Bounding &#39;\n                                                                                                                                      &#39;boxes &#39;\n                                                                                                                                      &#39;(`bbox`) &#39;\n                                                                                                                                      &#39;are &#39;\n                                                                                                                                      &#39;forbidden &#39;\n                                                                                                                                      &#39;on &#39;\n                                                                                                                                      &#39;our &#39;\n                                                                                                                                      &#39;geometries, &#39;\n                                                                                                                                      &#39;even &#39;\n                                                                                                                                      &#39;though &#39;\n                                                                                                                                      &#34;they&#39;re &#34;\n                                                                                                                                      &#39;allowed &#39;\n                                                                                                                                      &#39;on &#39;\n                                                                                                                                      &#39;GeoJSON &#39;\n                                                                                                                                      &#39;geometries&#39;,\n                                                                                                                          &#39;properties&#39;: {&#39;type&#39;: {},\n                                                                                                                                         &#39;coordinates&#39;: {}},\n                                                                                                                          &#39;additionalProperties&#39;: False}]},\n                                                                                                  &#39;identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                                                                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;},\n                                                                                                                  &#39;uniqueItems&#39;: True},\n                                                                                                  &#39;place&#39;: {&#39;description&#39;: &#39;Place &#39;\n                                                                                                                           &#39;of &#39;\n                                                                                                                           &#39;the &#39;\n                                                                                                                           &#39;location&#39;,\n                                                                                                            &#39;type&#39;: &#39;string&#39;,\n                                                                                                            &#39;minLength&#39;: 1},\n                                                                                                  &#39;description&#39;: {&#39;description&#39;: &#39;Description &#39;\n                                                                                                                                 &#39;of &#39;\n                                                                                                                                 &#39;the &#39;\n                                                                                                                                 &#39;location&#39;,\n                                                                                                                  &#39;type&#39;: &#39;string&#39;,\n                                                                                                                  &#39;minLength&#39;: 1}}}]}}}},\n                    &#39;funding&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                          &#39;additionalProperties&#39;: False,\n                                          &#39;properties&#39;: {&#39;funder&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                                    &#39;additionalProperties&#39;: False,\n                                                                    &#39;properties&#39;: {&#39;name&#39;: {&#39;type&#39;: &#39;string&#39;},\n                                                                                   &#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;}}},\n                                                         &#39;award&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                                                   &#39;additionalProperties&#39;: False,\n                                                                   &#39;properties&#39;: {&#39;title&#39;: {&#39;type&#39;: &#39;object&#39;},\n                                                                                  &#39;number&#39;: {&#39;type&#39;: &#39;string&#39;},\n                                                                                  &#39;id&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                                                  &#39;identifiers&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                                                                                  &#39;items&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifiers_with_scheme&#39;}}}}}}},\n                    &#39;references&#39;: {&#39;type&#39;: &#39;array&#39;,\n                                   &#39;minItems&#39;: 0,\n                                   &#39;items&#39;: {&#39;type&#39;: &#39;object&#39;,\n                                             &#39;additionalProperties&#39;: False,\n                                             &#39;properties&#39;: {&#39;reference&#39;: {&#39;type&#39;: &#39;string&#39;,\n                                                                          &#39;description&#39;: &#39;A &#39;\n                                                                                         &#39;reference &#39;\n                                                                                         &#39;string.&#39;},\n                                                            &#39;identifier&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/identifier&#39;},\n                                                            &#39;scheme&#39;: {&#39;$ref&#39;: &#39;local://definitions-v1.0.0.json#/scheme&#39;}}}}}}\n\nOn instance[&#39;metadata&#39;]:\n    {&#39;d&#39;: &#39;1999-08-09&#39;,\n     &#39;dt&#39;: &#39;2021-09-11T01:23:40.411257+09:00&#39;,\n     &#39;ed&#39;: &#39;1986-04&#39;,\n     &#39;edi&#39;: &#39;2014-06-18/2018&#39;,\n     &#39;edt&#39;: &#39;1990&#39;,\n     &#39;edti&#39;: &#39;1977/2009&#39;,\n     &#39;f&#39;: -6.2,\n     &#39;ht&#39;: &#39;&lt;p&gt;Floor wear seat must.&lt;/p&gt;&lt;div&gt;Tend heart party bad &#39;\n           &#39;fish.&lt;/div&gt;&lt;div&gt;Key pressure develop pressure.&lt;/div&gt;&lt;div&gt;Alone &#39;\n           &#39;generation opportunity style.&lt;/div&gt;&#39;,\n     &#39;i&#39;: 9324,\n     &#39;kw&#39;: &#39;Fill fish anything can.&#39;,\n     &#39;t&#39;: &#39;05:03:00&#39;,\n     &#39;tx&#39;: &#39;Really though ok but.&#39;}\n</textarea>\n</div>\n<div class="explanation">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class="nojavascript">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.</span>\n</div>\n      <div class="footer">\n        Brought to you by <strong class="arthur">DON\'T PANIC</strong>, your\n        friendly Werkzeug powered traceback interpreter.\n      </div>\n    </div>\n\n    <div class="pin-prompt">\n      <div class="inner">\n        <h3>Console Locked</h3>\n        <p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form>\n          <p>PIN:\n            <input type=text name=pin size=14>\n            <input type=submit name=btn value="Confirm Pin">\n        </form>\n      </div>\n    </div>\n  </body>\n</html>\n\n<!--\n\nTraceback (most recent call last):\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2552, in __call__\n    return self.wsgi_app(environ, start_response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/werkzeug/middleware/dispatcher.py", line 78, in __call__\n    return app(environ, start_response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2552, in __call__\n    return self.wsgi_app(environ, start_response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2532, in wsgi_app\n    response = self.handle_exception(e)\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 2529, in wsgi_app\n    response = self.full_dispatch_request()\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 1825, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 1823, in full_dispatch_request\n    rv = self.dispatch_request()\n         ^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask/app.py", line 1799, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/resources.py", line 65, in view\n    return view_meth()\n           ^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/content_negotiation.py", line 116, in inner_content_negotiation\n    return f(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py", line 51, in inner\n    return f(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/parsers/decorators.py", line 90, in inner\n    return f(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/flask_resources/responses.py", line 39, in inner\n    res = f(*args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/resources/records/resource.py", line 93, in create\n    item = self.service.create(\n           ^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 376, in inner\n    res = f(self, *args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_drafts_resources/services/records/service.py", line 309, in create\n    res = self._create(\n          ^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 380, in inner\n    return f(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/records/service.py", line 365, in _create\n    uow.register(RecordCommitOp(record, self.indexer))\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 349, in register\n    op.on_register(self)\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records_resources/services/uow.py", line 176, in on_register\n    self._record.commit()\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py", line 453, in commit\n    json = self._validate(format_checker=format_checker, validator=validator)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/api.py", line 193, in _validate\n    _records_state.validate(\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/invenio_records/ext.py", line 67, in validate\n    return validate(data, schema, cls=validator_cls, resolver=resolver, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/lib/python3.12/site-packages/jsonschema/validators.py", line 1332, in validate\n    raise error\njsonschema.exceptions.ValidationError: Additional properties are not allowed (\'d\', \'dt\', \'ed\', \'edi\', \'edt\', \'edti\', \'f\', \'ht\', \'i\', \'kw\', \'t\', \'tx\' were unexpected)\n\nFailed validating \'additionalProperties\' in schema[\'properties\'][\'metadata\']:\n    {\'type\': \'object\',\n     \'description\': \'Resource metadata.\',\n     \'additionalProperties\': False,\n     \'properties\': {\'resource_type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/resource_type\'},\n                    \'creators\': {\'description\': \'Creators of the resource.\',\n                                 \'type\': \'array\',\n                                 \'items\': {\'type\': \'object\',\n                                           \'additionalProperties\': False,\n                                           \'properties\': {\'person_or_org\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/person_or_org\'},\n                                                          \'role\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/role\'},\n                                                          \'affiliations\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/affiliations\'}}}},\n                    \'title\': {\'description\': \'Primary title of the record.\',\n                              \'type\': \'string\'},\n                    \'additional_titles\': {\'description\': \'Additional \'\n                                                         \'record titles.\',\n                                          \'type\': \'array\',\n                                          \'items\': {\'type\': \'object\',\n                                                    \'additionalProperties\': False,\n                                                    \'properties\': {\'title\': {\'description\': \'Additional \'\n                                                                                            \'title \'\n                                                                                            \'of \'\n                                                                                            \'the \'\n                                                                                            \'record.\',\n                                                                             \'type\': \'string\'},\n                                                                   \'type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/title_type\'},\n                                                                   \'lang\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/language\'}}}},\n                    \'publisher\': {\'type\': \'string\'},\n                    \'publication_date\': {\'description\': \'Record \'\n                                                        \'publication date \'\n                                                        \'(EDTF level 0 \'\n                                                        \'format).\',\n                                         \'type\': \'string\'},\n                    \'subjects\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/subjects\'},\n                    \'contributors\': {\'description\': \'Contributors in order \'\n                                                    \'of importance.\',\n                                     \'type\': \'array\',\n                                     \'items\': {\'type\': \'object\',\n                                               \'additionalProperties\': False,\n                                               \'properties\': {\'person_or_org\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/person_or_org\'},\n                                                              \'role\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/role\'},\n                                                              \'affiliations\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/affiliations\'}}}},\n                    \'dates\': {\'description\': \'Date, datetime or date \'\n                                             \'interval.\',\n                              \'type\': \'array\',\n                              \'items\': {\'type\': \'object\',\n                                        \'additionalProperties\': False,\n                                        \'properties\': {\'date\': {\'description\': \'Date, \'\n                                                                               \'datetime \'\n                                                                               \'or \'\n                                                                               \'date \'\n                                                                               \'interval \'\n                                                                               \'in \'\n                                                                               \'EDTF \'\n                                                                               \'level \'\n                                                                               \'0 \'\n                                                                               \'format\',\n                                                                \'type\': \'string\'},\n                                                       \'type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/date_type\'},\n                                                       \'description\': {\'description\': \'Description \'\n                                                                                      \'of \'\n                                                                                      \'the \'\n                                                                                      \'date, \'\n                                                                                      \'datetime \'\n                                                                                      \'or \'\n                                                                                      \'date \'\n                                                                                      \'interval \'\n                                                                                      \'e.g. \'\n                                                                                      "\'Accepted\' "\n                                                                                      \'or \'\n                                                                                      "\'Available\' "\n                                                                                      \'(CV).\',\n                                                                       \'type\': \'string\'}}}},\n                    \'languages\': {\'description\': \'The primary languages of \'\n                                                 \'the resource. ISO 639-3 \'\n                                                 \'language code.\',\n                                  \'type\': \'array\',\n                                  \'items\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/language\'}},\n                    \'identifiers\': {\'description\': \'Alternate identifiers \'\n                                                   \'for the record.\',\n                                    \'type\': \'array\',\n                                    \'items\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifiers_with_scheme\'},\n                                    \'uniqueItems\': True},\n                    \'related_identifiers\': {\'type\': \'array\',\n                                            \'items\': {\'type\': \'object\',\n                                                      \'additionalProperties\': False,\n                                                      \'properties\': {\'identifier\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                                     \'scheme\': {\'$ref\': \'local://definitions-v1.0.0.json#/scheme\'},\n                                                                     \'relation_type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/relation_type\'},\n                                                                     \'resource_type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/resource_type\'}}}},\n                    \'sizes\': {\'type\': \'array\', \'items\': {\'type\': \'string\'}},\n                    \'formats\': {\'type\': \'array\',\n                                \'items\': {\'type\': \'string\'}},\n                    \'version\': {\'description\': \'Record version tag.\',\n                                \'type\': \'string\'},\n                    \'rights\': {\'description\': \'Any license or copyright \'\n                                              \'information for this \'\n                                              \'resource.\',\n                               \'type\': \'array\',\n                               \'items\': {\'type\': \'object\',\n                                         \'additionalProperties\': False,\n                                         \'properties\': {\'id\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                        \'title\': {\'description\': \'The \'\n                                                                                 \'license \'\n                                                                                 \'name \'\n                                                                                 \'or \'\n                                                                                 \'license \'\n                                                                                 \'itself. \'\n                                                                                 \'Free \'\n                                                                                 \'text.\',\n                                                                  \'type\': \'object\'},\n                                                        \'description\': {\'description\': \'The \'\n                                                                                       \'license \'\n                                                                                       \'description \'\n                                                                                       \'Free \'\n                                                                                       \'text.\',\n                                                                        \'type\': \'object\'},\n                                                        \'link\': {\'type\': \'string\',\n                                                                 \'format\': \'uri\'}}}},\n                    \'description\': {\'description\': \'Description for record \'\n                                                   \'(may contain HTML).\',\n                                    \'type\': \'string\'},\n                    \'additional_descriptions\': {\'type\': \'array\',\n                                                \'items\': {\'type\': \'object\',\n                                                          \'additionalProperties\': False,\n                                                          \'properties\': {\'description\': {\'description\': \'Description \'\n                                                                                                        \'for \'\n                                                                                                        \'record.\',\n                                                                                         \'type\': \'string\'},\n                                                                         \'type\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/description_type\'},\n                                                                         \'lang\': {\'$ref\': \'local://records/definitions-v2.0.0.json#/language\'}}}},\n                    \'locations\': {\'description\': \'Geographical locations \'\n                                                 \'relevant to this record.\',\n                                  \'$comment\': \'This part of the schema is \'\n                                              \'modelled on GeoJSON, but \'\n                                              \'without the scope to embed \'\n                                              \'arbitrary metadata.\\n\'\n                                              \'\\n\'\n                                              \'We nest `features` within \'\n                                              \'`locations` to give scope \'\n                                              \'later to say something \'\n                                              \'about the locations as a \'\n                                              \'whole.\',\n                                  \'type\': \'object\',\n                                  \'additionalProperties\': False,\n                                  \'properties\': {\'features\': {\'type\': \'array\',\n                                                              \'minItems\': 1,\n                                                              \'items\': {\'allOf\': [{\'type\': \'object\',\n                                                                                   \'additionalProperties\': False,\n                                                                                   \'properties\': {\'geometry\': {\'allOf\': [{\'$ref\': \'local://records/definitions-v2.0.0.json#/GeoJSON-Geometry\'},\n                                                                                                                         {\'$comment\': \'Bounding \'\n                                                                                                                                      \'boxes \'\n                                                                                                                                      \'(`bbox`) \'\n                                                                                                                                      \'are \'\n                                                                                                                                      \'forbidden \'\n                                                                                                                                      \'on \'\n                                                                                                                                      \'our \'\n                                                                                                                                      \'geometries, \'\n                                                                                                                                      \'even \'\n                                                                                                                                      \'though \'\n                                                                                                                                      "they\'re "\n                                                                                                                                      \'allowed \'\n                                                                                                                                      \'on \'\n                                                                                                                                      \'GeoJSON \'\n                                                                                                                                      \'geometries\',\n                                                                                                                          \'properties\': {\'type\': {},\n                                                                                                                                         \'coordinates\': {}},\n                                                                                                                          \'additionalProperties\': False}]},\n                                                                                                  \'identifiers\': {\'type\': \'array\',\n                                                                                                                  \'items\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifiers_with_scheme\'},\n                                                                                                                  \'uniqueItems\': True},\n                                                                                                  \'place\': {\'description\': \'Place \'\n                                                                                                                           \'of \'\n                                                                                                                           \'the \'\n                                                                                                                           \'location\',\n                                                                                                            \'type\': \'string\',\n                                                                                                            \'minLength\': 1},\n                                                                                                  \'description\': {\'description\': \'Description \'\n                                                                                                                                 \'of \'\n                                                                                                                                 \'the \'\n                                                                                                                                 \'location\',\n                                                                                                                  \'type\': \'string\',\n                                                                                                                  \'minLength\': 1}}}]}}}},\n                    \'funding\': {\'type\': \'array\',\n                                \'items\': {\'type\': \'object\',\n                                          \'additionalProperties\': False,\n                                          \'properties\': {\'funder\': {\'type\': \'object\',\n                                                                    \'additionalProperties\': False,\n                                                                    \'properties\': {\'name\': {\'type\': \'string\'},\n                                                                                   \'id\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'}}},\n                                                         \'award\': {\'type\': \'object\',\n                                                                   \'additionalProperties\': False,\n                                                                   \'properties\': {\'title\': {\'type\': \'object\'},\n                                                                                  \'number\': {\'type\': \'string\'},\n                                                                                  \'id\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                                                  \'identifiers\': {\'type\': \'array\',\n                                                                                                  \'items\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifiers_with_scheme\'}}}}}}},\n                    \'references\': {\'type\': \'array\',\n                                   \'minItems\': 0,\n                                   \'items\': {\'type\': \'object\',\n                                             \'additionalProperties\': False,\n                                             \'properties\': {\'reference\': {\'type\': \'string\',\n                                                                          \'description\': \'A \'\n                                                                                         \'reference \'\n                                                                                         \'string.\'},\n                                                            \'identifier\': {\'$ref\': \'local://definitions-v1.0.0.json#/identifier\'},\n                                                            \'scheme\': {\'$ref\': \'local://definitions-v1.0.0.json#/scheme\'}}}}}}\n\nOn instance[\'metadata\']:\n    {\'d\': \'1999-08-09\',\n     \'dt\': \'2021-09-11T01:23:40.411257+09:00\',\n     \'ed\': \'1986-04\',\n     \'edi\': \'2014-06-18/2018\',\n     \'edt\': \'1990\',\n     \'edti\': \'1977/2009\',\n     \'f\': -6.2,\n     \'ht\': \'<p>Floor wear seat must.</p><div>Tend heart party bad \'\n           \'fish.</div><div>Key pressure develop pressure.</div><div>Alone \'\n           \'generation opportunity style.</div>\',\n     \'i\': 9324,\n     \'kw\': \'Fill fish anything can.\',\n     \'t\': \'05:03:00\',\n     \'tx\': \'Really though ok but.\'}\n\n\n-->\n'
idx = 0

    def raw_decode(self, s, idx=0):
        """Decode a JSON document from ``s`` (a ``str`` beginning with
        a JSON document) and return a 2-tuple of the Python
        representation and the index in ``s`` where the document ended.
    
        This can be used to decode a JSON document from a string that may
        have extraneous data at the end.
    
        """
        try:
            obj, end = self.scan_once(s, idx)
        except StopIteration as err:
>           raise JSONDecodeError("Expecting value", s, err.value) from None
E           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

/opt/homebrew/Cellar/python@3.12/3.12.7_1/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py:355: JSONDecodeError

During handling of the above exception, another exception occurred:

    def test_running_server():
        while True:
            data = requests.get(
                "https://127.0.0.1:5000/api/complex-model", verify=False  # NOSONAR
            ).json()
            if not data["hits"]["hits"]:
                break
            for hit in data["hits"]["hits"]:
                requests.delete(hit["links"]["self"], verify=False)  # NOSONAR
    
        assert data == {
            "hits": {"hits": [], "total": 0},
            "aggregations": {
                "metadata_d": {"buckets": [], "label": "metadata/d.label"},
                "metadata_dt": {"buckets": [], "label": "metadata/dt.label"},
                "metadata_ed": {"buckets": [], "label": "metadata/ed.label"},
                "metadata_edt": {"buckets": [], "label": "metadata/edt.label"},
                "metadata_f": {"buckets": [], "label": "metadata/f.label"},
                "metadata_i": {"buckets": [], "label": "metadata/i.label"},
                "metadata_kw": {"buckets": [], "label": "metadata/kw.label"},
                "metadata_t": {"buckets": [], "label": "metadata/t.label"},
            },
            "sortBy": "newest",
            "links": {
                "self": "https://127.0.0.1:5000/api/complex-model/?page=1&size=25&sort=newest"
            },
        }
    
        records = []
        with open("complex-model/data/sample_data.yaml") as f:
            sample_data = list(yaml.safe_load_all(f))
            for d in sample_data:
                resp = requests.post(
                    "https://127.0.0.1:5000/api/complex-model",
                    json=d,
                    verify=False,  # NOSONAR
                )
>               data = resp.json()

tests-model/test_running_server.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <Response [500]>, kwargs = {}

    def json(self, **kwargs):
        r"""Returns the json-encoded content of a response, if any.
    
        :param \*\*kwargs: Optional arguments that ``json.loads`` takes.
        :raises requests.exceptions.JSONDecodeError: If the response body does not
            contain valid json.
        """
    
        if not self.encoding and self.content and len(self.content) > 3:
            # No encoding set. JSON RFC 4627 section 3 states we should expect
            # UTF-8, -16 or -32. Detect which one to use; If the detection or
            # decoding fails, fall back to `self.text` (using charset_normalizer to make
            # a best guess).
            encoding = guess_json_utf(self.content)
            if encoding is not None:
                try:
                    return complexjson.loads(self.content.decode(encoding), **kwargs)
                except UnicodeDecodeError:
                    # Wrong UTF codec detected; usually because it's not UTF-8
                    # but some other 8-bit codec.  This is an RFC violation,
                    # and the server didn't bother to tell us what codec *was*
                    # used.
                    pass
                except JSONDecodeError as e:
                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
    
        try:
            return complexjson.loads(self.text, **kwargs)
        except JSONDecodeError as e:
            # Catch JSON-related errors and raise as requests.JSONDecodeError
            # This aliases json.JSONDecodeError and simplejson.JSONDecodeError
>           raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
E           requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

.venv-tests/lib/python3.12/site-packages/requests/models.py:978: JSONDecodeError
=============================== warnings summary ===============================
tests-model/test_running_server.py::test_running_server
  /Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-tests/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '127.0.0.1'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests-model/test_running_server.py::test_running_server - requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
========================= 1 failed, 1 warning in 0.25s =========================
2024-11-27 20:01:53.338143
Destroying database sqlite:////Users/alzbetapokorna/cesnet/nr/tmp2211/oarepo-model-builder/.venv-server/var/instance/invenio.db
2024-11-27 20:01:55.635253

